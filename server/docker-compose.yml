x-logging: &default-logging
  logging:
    driver: json-file
    options:
      max-size: "10m"
      max-file: "5"

services:
  node_api:
    container_name: codec_api
    build:
      context: ./codec-api
      dockerfile: Dockerfile
    ports:
      - "8000:8000" # API port
      - "8080:8080" # Auth port
      - "8800:8800" # Socket port
    environment:
      - API_PORT=${API_PORT}
      - AUTH_PORT=${AUTH_PORT}
      - SOCKET_PORT=${SOCKET_PORT}
      - MONGODB_URI=${MONGODB_URI}
      - ACCESS_TOKEN=${ACCESS_TOKEN}
      - REFRESH_TOKEN=${REFRESH_TOKEN}
      - MAILER_USERNAME=${MAILER_USERNAME}
      - MAILER_PASSWORD=${MAILER_PASSWORD}
    # depends_on:
      # - mongodb
    restart: always
    <<: *default-logging

  # mongodb:
  #   image: mongo:latest
  #   container_name: codec_database
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongodb_data:/data/db
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME:-admin}
  #     - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD:-password}
  #   restart: always
  #   <<: *default-logging

  server:
    image: judge0/judge0:1.13.0
    volumes:
      - ./Docker/judge0.conf:/judge0.conf:ro
    ports:
      - "2358:2358"
    privileged: true
    restart: always
    <<: *default-logging

  workers:
    image: judge0/judge0:1.13.0
    command: ["./scripts/workers"]
    volumes:
      - ./Docker/judge0.conf:/judge0.conf:ro
    privileged: true  
    restart: always
    <<: *default-logging

  db:
    image: postgres:13.0
    env_file: ./Docker/judge0.conf
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    restart: always
    <<: *default-logging

  redis:
    image: redis:6.0
    command: [
      "bash", "-c",
      'docker-entrypoint.sh --appendonly yes --requirepass "$$REDIS_PASSWORD"'
    ]
    env_file: ./Docker/judge0.conf
    volumes:
      - redis-data:/data
    restart: always
    <<: *default-logging

  flask:
    build: ./Docker/flask
    ports:
      - "5000:5000"
    depends_on:
      - db
      - redis
      - server
      # - mongodb
    env_file: ./Docker/flask/.env
    restart: always
    <<: *default-logging

volumes:
  # mongodb_data:
  postgres-data:
  redis-data:
  huggingface_cache:
