{
  "matrix": [
    [
      100,
      62,
      60,
      65,
      72,
      66,
      66,
      69,
      64,
      69,
      69,
      69,
      71,
      70,
      70,
      71,
      72,
      71,
      63,
      67,
      75,
      70,
      69,
      67
    ],
    [
      62,
      100,
      63,
      73,
      60,
      67,
      67,
      57,
      53,
      68,
      68,
      70,
      65,
      64,
      64,
      61,
      63,
      55,
      48,
      68,
      56,
      67,
      58,
      66
    ],
    [
      60,
      63,
      100,
      59,
      55,
      58,
      58,
      52,
      62,
      56,
      56,
      60,
      57,
      56,
      56,
      55,
      57,
      54,
      46,
      60,
      52,
      55,
      51,
      66
    ],
    [
      65,
      73,
      59,
      100,
      62,
      76,
      76,
      59,
      54,
      79,
      79,
      75,
      71,
      67,
      67,
      63,
      64,
      56,
      50,
      72,
      59,
      76,
      60,
      67
    ],
    [
      72,
      60,
      55,
      62,
      100,
      61,
      61,
      80,
      60,
      65,
      65,
      68,
      72,
      76,
      76,
      80,
      79,
      76,
      68,
      68,
      73,
      66,
      77,
      62
    ],
    [
      66,
      67,
      58,
      76,
      61,
      100,
      100,
      58,
      55,
      77,
      77,
      73,
      70,
      66,
      66,
      63,
      63,
      58,
      51,
      67,
      60,
      76,
      60,
      67
    ],
    [
      66,
      67,
      58,
      76,
      61,
      100,
      100,
      58,
      55,
      77,
      77,
      73,
      70,
      66,
      66,
      63,
      63,
      58,
      51,
      67,
      60,
      76,
      60,
      67
    ],
    [
      69,
      57,
      52,
      59,
      80,
      58,
      58,
      100,
      59,
      62,
      62,
      64,
      68,
      71,
      71,
      77,
      75,
      75,
      71,
      64,
      73,
      63,
      76,
      58
    ],
    [
      64,
      53,
      62,
      54,
      60,
      55,
      55,
      59,
      100,
      54,
      54,
      59,
      60,
      58,
      58,
      59,
      60,
      62,
      55,
      60,
      59,
      55,
      56,
      62
    ],
    [
      69,
      68,
      56,
      79,
      65,
      77,
      77,
      62,
      54,
      100,
      100,
      77,
      75,
      69,
      69,
      67,
      67,
      61,
      54,
      70,
      64,
      87,
      65,
      68
    ],
    [
      69,
      68,
      56,
      79,
      65,
      77,
      77,
      62,
      54,
      100,
      100,
      77,
      75,
      69,
      69,
      67,
      67,
      61,
      54,
      70,
      64,
      87,
      65,
      68
    ],
    [
      69,
      70,
      60,
      75,
      68,
      73,
      73,
      64,
      59,
      77,
      77,
      100,
      83,
      70,
      70,
      68,
      67,
      62,
      55,
      77,
      63,
      76,
      65,
      71
    ],
    [
      71,
      65,
      57,
      71,
      72,
      70,
      70,
      68,
      60,
      75,
      75,
      83,
      100,
      71,
      71,
      71,
      70,
      66,
      60,
      76,
      67,
      75,
      70,
      68
    ],
    [
      70,
      64,
      56,
      67,
      76,
      66,
      66,
      71,
      58,
      69,
      69,
      70,
      71,
      100,
      99,
      81,
      76,
      71,
      63,
      68,
      71,
      69,
      76,
      63
    ],
    [
      70,
      64,
      56,
      67,
      76,
      66,
      66,
      71,
      58,
      69,
      69,
      70,
      71,
      99,
      100,
      81,
      76,
      71,
      63,
      68,
      71,
      69,
      76,
      63
    ],
    [
      71,
      61,
      55,
      63,
      80,
      63,
      63,
      77,
      59,
      67,
      67,
      68,
      71,
      81,
      81,
      100,
      77,
      76,
      69,
      66,
      75,
      67,
      82,
      62
    ],
    [
      72,
      63,
      57,
      64,
      79,
      63,
      63,
      75,
      60,
      67,
      67,
      67,
      70,
      76,
      76,
      77,
      100,
      73,
      66,
      66,
      72,
      67,
      75,
      63
    ],
    [
      71,
      55,
      54,
      56,
      76,
      58,
      58,
      75,
      62,
      61,
      61,
      62,
      66,
      71,
      71,
      76,
      73,
      100,
      76,
      61,
      76,
      61,
      76,
      59
    ],
    [
      63,
      48,
      46,
      50,
      68,
      51,
      51,
      71,
      55,
      54,
      54,
      55,
      60,
      63,
      63,
      69,
      66,
      76,
      100,
      54,
      72,
      55,
      72,
      52
    ],
    [
      67,
      68,
      60,
      72,
      68,
      67,
      67,
      64,
      60,
      70,
      70,
      77,
      76,
      68,
      68,
      66,
      66,
      61,
      54,
      100,
      61,
      70,
      64,
      67
    ],
    [
      75,
      56,
      52,
      59,
      73,
      60,
      60,
      73,
      59,
      64,
      64,
      63,
      67,
      71,
      71,
      75,
      72,
      76,
      72,
      61,
      100,
      65,
      76,
      59
    ],
    [
      70,
      67,
      55,
      76,
      66,
      76,
      76,
      63,
      55,
      87,
      87,
      76,
      75,
      69,
      69,
      67,
      67,
      61,
      55,
      70,
      65,
      100,
      66,
      67
    ],
    [
      69,
      58,
      51,
      60,
      77,
      60,
      60,
      76,
      56,
      65,
      65,
      65,
      70,
      76,
      76,
      82,
      75,
      76,
      72,
      64,
      76,
      66,
      100,
      59
    ],
    [
      67,
      66,
      66,
      67,
      62,
      67,
      67,
      58,
      62,
      68,
      68,
      71,
      68,
      63,
      63,
      62,
      63,
      59,
      52,
      67,
      59,
      67,
      59,
      100
    ]
  ],
  "snippets": [
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n\r\n    for (int i=0; i<s.length(); ++i) {\r\n        char c = s[i];\r\n            if (c <'a' || c>'z') {\r\n            cout << \"Invalid!\" << endl;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    int vowelCount = 0;\r\n    for (int i=0; i< s.length(); ++i) {\r\n        char c=s[i];\r\n            if (c=='a' || c=='e' || c=='i' || c=='o' || c== 'u') {\r\n            ++vowelCount;\r\n        }\r\n    }\r\n    cout << vowelCount << endl;\r\n    return 0;\r\n}",
      "fileName": "Ris_count-vowels-in-a-string-7746433050.js",
      "learner": "Ris",
      "learner_id": "6811b22a88362505107a612e",
      "timestamp": "2025-05-02 13:53:31.839000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    int vowel=0;\r\n    getline (cin, s);\r\n\r\n    for (char i: s) {\r\n        if (i>='a' && i<='z') {\r\n            if (i=='a' ||i=='e' ||i=='i' ||i=='o' ||i=='u') {\r\n                vowel++;\r\n            }\r\n        }\r\n        else {\r\n            cout << \"Invalid!\";\r\n            return 0;\r\n\r\n        }\r\n    }\r\n\r\n    cout << vowel;\r\n\r\n    /* \r\n    1. prompt user to insert string\r\n    2. take string\r\n    3. scan if there is lowercase letters and constraint\r\n    4. scan if vowel, add to counter if yes\r\n    5. output\r\n    */\r\n    return 0;\r\n}",
      "fileName": "jbaladia_count-vowels-in-a-string-7746433050.js",
      "learner": "jbaladia",
      "learner_id": "6811b20988362505107a60be",
      "timestamp": "2025-05-02 14:16:42.531000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n    int n = s.length();\r\n    int vowels = 0;\r\n    bool noUP = true;\r\n\r\n    for (int i=0; i<n; i++){//iterate\r\n        if (isupper(s[i])){ //check for uppercase\r\n            cout << \"Invalid!\" << endl;\r\n            return 1; //exit\r\n        }\r\n    }\r\n\r\n    if (noUP){//if no uppercase - check vowels\r\n        for (int i=0; i<n; i++){\r\n            char low = tolower(s[i]);//turn to lowercase\r\n            if (low == 'a'|| low == 'e' || low == 'i' || low == 'o' || low == 'u') { //check vowels\r\n                vowels++;\r\n            }\r\n        }\r\n        cout << vowels << endl;\r\n    }\r\n    return 0;\r\n}",
      "fileName": "kquerubin_count-vowels-in-a-string-7746433050.js",
      "learner": "kquerubin",
      "learner_id": "6811b22588362505107a610e",
      "timestamp": "2025-05-02 15:55:38.958000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    getline(cin, s);\r\n\r\n    int vowel = 0;\r\n    for (char c : s) {\r\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\r\n            vowel++;\r\n        }\r\n        if (c < 'a' || c > 'z') {\r\n            cout << \"Invalid!\" << endl;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    cout << vowel << endl;\r\n    return 0;\r\n}\r\n",
      "fileName": "andreimanrique_count-vowels-in-a-string-7746433050.js",
      "learner": "andreimanrique",
      "learner_id": "6811b22088362505107a60e7",
      "timestamp": "2025-05-03 01:15:22.950000"
    },
    {
      "code": "#include<iostream>\r\n#include<string>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    getline(cin,s);\r\n\r\n    int countvowels = 0;\r\n\r\n    for (int i = 0; i < s.length(); i++) {\r\n        if (isupper(s[i])) {\r\n            cout << \"Invalid!\" << endl;\r\n            return 0;\r\n        }\r\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\r\n            countvowels++;\r\n        }\r\n    }\r\n\r\n    cout << countvowels << endl;\r\n    return 0;\r\n}\r\n",
      "fileName": "Brndttbnvnd_count-vowels-in-a-string-7746433050.js",
      "learner": "Brndttbnvnd",
      "learner_id": "68142d744fe23df7bbc8fdd2",
      "timestamp": "2025-05-03 01:31:40.196000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n\r\n    for (char c : s){\r\n        if (c < 'a' || c > 'z'){\r\n            cout << \"Invalid!\" << endl;\r\n            return 0;\r\n        }\r\n    }\r\n    int count = 0;\r\n    for (char c : s){\r\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'){\r\n            count++;\r\n        }\r\n    }\r\n\r\n    cout << count << endl;\r\n    return 0;\r\n}",
      "fileName": "Althea Cestina_count-vowels-in-a-string-7746433050.js",
      "learner": "Althea Cestina",
      "learner_id": "6815bfa2ee03b79c65c4bab8",
      "timestamp": "2025-05-03 07:12:20.762000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n\r\n    for (char c : s){\r\n        if (c < 'a' || c > 'z'){\r\n            cout << \"Invalid!\" << endl;\r\n            return 0;\r\n        }\r\n    }\r\n    int count = 0;\r\n    for (char c : s){\r\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'){\r\n            count++;\r\n        }\r\n    }\r\n\r\n    cout << count << endl;\r\n    return 0;\r\n}",
      "fileName": "Althea Cestina_count-vowels-in-a-string-7746433050.js",
      "learner": "Althea Cestina",
      "learner_id": "6815bfa2ee03b79c65c4bab8",
      "timestamp": "2025-05-03 07:12:55.934000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string test;\r\n    getline(cin, test);\r\n\r\n    int len = test.length();\r\n    int lvow = 0;\r\n    for (int i = 0; i < len; i++) {\r\n        if (isupper(test[i])) {\r\n            cout << \"Invalid!\";\r\n            return 0;\r\n        }\r\n\r\n        if (test[i] == 'a' || test[i] == 'e' || test[i] == 'i' || test[i] == 'o' || test[i] == 'u')\r\n            lvow++;\r\n    }\r\n    cout << lvow;\r\n    return 0;\r\n}",
      "fileName": "jkbraga_count-vowels-in-a-string-7746433050.js",
      "learner": "jkbraga",
      "learner_id": "6811b22f88362505107a6157",
      "timestamp": "2025-05-03 11:04:43.210000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\n#include <cctype>\r\nusing namespace std;\r\n\r\nbool if_uppercase(const string& msg){\r\n    for (size_t i = 0; i< msg.length(); ++i ){\r\n        if(!isupper(msg[i])){\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nint vowel_count(const string& M){\r\n    int count = 0;\r\n    for(size_t i=0; i< M.length(); ++i){\r\n         char lower_char = tolower(M[i]);\r\n        if (lower_char =='a' || lower_char == 'e'||lower_char == 'i' || lower_char == 'o' || lower_char == 'u') {\r\n            count++;\r\n        }\r\n    }\r\n    return count;\r\n}\r\n\r\nint main() {\r\n    string message;\r\n    getline(cin, message);\r\n\r\n    if(if_uppercase(message)){\r\n        cout << \"Invalid!\" << endl;\r\n    } else {\r\n        cout <<vowel_count(message) << endl;\r\n    }\r\n\r\n    return 0;\r\n}",
      "fileName": "qwertyuiop_count-vowels-in-a-string-7746433050.js",
      "learner": "qwertyuiop",
      "learner_id": "681435ed8d5dd1a5048896ca",
      "timestamp": "2025-05-03 21:22:35.874000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n\r\n    for (char c : s) {\r\n        if (c < 'a' || c > 'z') {\r\n            cout << \"Invalid!\" << endl;\r\n            return 0;\r\n        }\r\n    }\r\n    int count = 0;\r\n    for (char c : s) {\r\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\r\n            count++;\r\n        }\r\n    }\r\n    cout << count << endl;\r\n    return 0;\r\n}\r\n",
      "fileName": "neil.gojit_count-vowels-in-a-string-7746433050.js",
      "learner": "neil.gojit",
      "learner_id": "6811b24388362505107a61de",
      "timestamp": "2025-05-04 13:17:23.708000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n\r\n    for (char c : s) {\r\n        if (c < 'a' || c > 'z') {\r\n            cout << \"Invalid!\" << endl;\r\n            return 0;\r\n        }\r\n    }\r\n    int count = 0;\r\n    for (char c : s) {\r\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\r\n            count++;\r\n        }\r\n    }\r\n    cout << count << endl;\r\n    return 0;\r\n}\r\n",
      "fileName": "neil.gojit_count-vowels-in-a-string-7746433050.js",
      "learner": "neil.gojit",
      "learner_id": "6811b24388362505107a61de",
      "timestamp": "2025-05-04 13:17:39.519000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\n#include <cctype>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n    getline(cin, s);\r\n    for (char c : s) {\r\n        if (!islower(c)) {\r\n            cout << \"Invalid!\" << endl;\r\n        }\r\n    }\r\n    int vowelCount = 0;\r\n    for (char c : s) {\r\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\r\n            vowelCount++;\r\n        }\r\n    }\r\n    cout << vowelCount << endl;\r\n    return 0;\r\n}",
      "fileName": "jpd435_count-vowels-in-a-string-7746433050.js",
      "learner": "jpd435",
      "learner_id": "681768692348036a75a0e9bc",
      "timestamp": "2025-05-04 13:32:09.245000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\n#include <cctype>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    getline(cin, s); \r\n    \r\n    for (char c : s) {\r\n        if (!islower(c)) {\r\n            cout << \"Invalid!\" << endl;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    int vowelCount = 0;\r\n    for (char c : s) {\r\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\r\n            vowelCount++;\r\n        }\r\n    }\r\n\r\n    cout << vowelCount << endl;\r\n    return 0;\r\n}",
      "fileName": "jpd435_count-vowels-in-a-string-7746433050.js",
      "learner": "jpd435",
      "learner_id": "681768692348036a75a0e9bc",
      "timestamp": "2025-05-04 13:43:35.652000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    int count;\r\n    cin>>s;\r\n    for (int i=0;i<s.size();i++){\r\n        if (s[i]=='a' or s[i]=='e' or s[i]=='i' or s[i]=='o' or s[i]=='u'){\r\n            count++;\r\n        }\r\n\t\tif (isupper(s[i])){\r\n            cout<<\"Invalid!\";\r\n            return 0;\r\n        }\r\n    }\r\n    cout<<count;\r\n\r\n}",
      "fileName": "Al Francis J. Guerrero_count-vowels-in-a-string-7746433050.js",
      "learner": "Al Francis J. Guerrero",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "timestamp": "2025-05-04 21:45:03.660000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    int count;\r\n    cin>>s;\r\n    for (int i=0;i<s.size();i++){\r\n        if (s[i]=='a' or s[i]=='e' or s[i]=='i' or s[i]=='o' or s[i]=='u'){\r\n            count++;\r\n        }\r\n\t\tif (isupper(s[i])){\r\n            cout<<\"Invalid!\";\r\n            return 0;\r\n        }\r\n    }\r\n    cout<<count;\r\n\r\n}",
      "fileName": "Al Francis J. Guerrero_count-vowels-in-a-string-7746433050.js",
      "learner": "Al Francis J. Guerrero",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "timestamp": "2025-05-04 21:45:17.791000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\n#include <cctype>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    int count = 0;\r\n    cin>>s;\r\n\r\n    for (int i=0; i < s.length(); i++){\r\n        if (isupper(s[i])){\r\n            cout<<\"Invalid!\";\r\n            return 0;\r\n        }\r\n\r\n        if (s[i] == 'a'|| s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'){\r\n            count++;\r\n        }\r\n    }\r\n\r\n    cout<<count;\r\n    return 0;\r\n}",
      "fileName": "franzhys_abanto_count-vowels-in-a-string-7746433050.js",
      "learner": "franzhys_abanto",
      "learner_id": "68181118113359d27dc46b27",
      "timestamp": "2025-05-05 01:26:16.824000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint main() {\r\n    // Your code here\r\n\r\n    string s;\r\n    int vcount = 0;\r\n    getline (cin,s);\r\n    \r\n    for (int i = 0; i < s.length(); i++){\r\n        if (s[i] >= 'a' && s[i] <='z'){\r\n            if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'){\r\n                vcount++;\r\n            }\r\n        } else {\r\n            cout << \"Invalid!\" << endl;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    cout << vcount;\r\n    \r\n    return 0;\r\n}",
      "fileName": "Awie_count-vowels-in-a-string-7746433050.js",
      "learner": "Awie",
      "learner_id": "6811b22c88362505107a613c",
      "timestamp": "2025-05-05 05:02:56.656000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n\r\n    int vowelCount = 0;\r\n\r\n    for (int i = 0; i < s.length(); i++){\r\n        if (isupper(s[i])){\r\n            cout << \"Invalid!\" << endl;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    for (int i = 0; i < s.length(); i++){\r\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'){\r\n            vowelCount++;\r\n        }\r\n    }\r\n\r\n    cout << vowelCount << endl;\r\n\r\n    return 0;\r\n}",
      "fileName": "mr.coins_count-vowels-in-a-string-7746433050.js",
      "learner": "mr.coins",
      "learner_id": "68183bc381cba98975e4e617",
      "timestamp": "2025-05-05 05:04:24.611000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\n#include <cctype>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string n;\r\n    cin >> n;\r\n\r\n    for (int i = 0; i < n.length(); i++){\r\n        if (isupper(n[i])) {\r\n            cout << \"Invalid!\" << endl;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    int counter = 0;\r\n    for (int i = 0; i <n.length(); i++){\r\n        if (n[i] == 'a' || n[i] == 'e' || n[i] == 'i' || n[i] == 'o' || n[i] == 'u' ){\r\n    counter++;\r\n        }\r\n    }\r\ncout << counter << endl;\r\n    return 0;\r\n}",
      "fileName": "mashu_count-vowels-in-a-string-7746433050.js",
      "learner": "mashu",
      "learner_id": "6811b3d9accdf5824ea4337e",
      "timestamp": "2025-05-05 05:27:12.710000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\n#include <cctype>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    int vowelCounter = 0;\r\n\r\n    getline(cin, s);\r\n\r\n    for (char vowel : s) {\r\n        if (toupper(vowel) == vowel && isalpha(vowel)) {\r\n            cout << \"Invalid!\" << endl;\r\n            return 0;\r\n        }\r\n\r\n        if (vowel == 'a' || vowel == 'i' || vowel == 'u' || vowel == 'e' || vowel == 'o') {\r\n            vowelCounter++;\r\n        }\r\n    }\r\n\r\n    cout << vowelCounter << endl;\r\n\r\n    return 0;\r\n}",
      "fileName": "disorder_count-vowels-in-a-string-7746433050.js",
      "learner": "disorder",
      "learner_id": "68183ff20f78087b6737f11f",
      "timestamp": "2025-05-05 05:36:06.679000"
    },
    {
      "code": "#include <iostream>\r\n#include<string>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    int count=0;\r\n    cin>>s;\r\n    for(int i=0; i<s.length(); i++){\r\n        if(s[i]<'a' ||s[i]>'z' ){\r\n            cout<<\"Invalid!\";\r\n            return 0;\r\n        }\r\n    }\r\n    for(int i = 0; i<s.length(); i++){\r\n        char c=s[i];\r\n        if(c == 'a' || c=='e' || c=='i' || c=='o' || c=='u'){\r\n            count++;\r\n        }\r\n    }\r\n    cout<<count;\r\n    return 0;\r\n}",
      "fileName": "Raphael Julius Q. Sibulo_count-vowels-in-a-string-7746433050.js",
      "learner": "Raphael Julius Q. Sibulo",
      "learner_id": "68183a999e78853aee675c67",
      "timestamp": "2025-05-05 08:06:22.496000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n\r\n    for (char c : s) {\r\n        if (c < 'a' || c > 'z') {\r\n            cout << \"Invalid!\" << endl;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    int vowelCount = 0;\r\n    for (char c : s) {\r\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\r\n            vowelCount++;\r\n        }\r\n    }\r\n\r\n    cout << vowelCount << endl;\r\n    return 0;\r\n}\r\n\r\n\r\n",
      "fileName": "phil_count-vowels-in-a-string-7746433050.js",
      "learner": "phil",
      "learner_id": "68183d828909a8f1649aad5b",
      "timestamp": "2025-05-05 12:42:31.313000"
    },
    {
      "code": "#include <iostream>\r\n#include <cstring>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    int counter = 0;\r\n\r\n    cin >> s;\r\n\r\n    for(int i = 0; i < s.length(); i++){\r\n        if(!islower(s[i])){\r\n            cout << \"Invalid!\";\r\n            return 0;\r\n        }\r\n\r\n        else{\r\n\r\n            if(s[i] == 'a' || s[i] == 'e' ||  s[i] == 'i' || s[i] == 'o' || s[i] == 'u'){\r\n                counter++;\r\n            }\r\n        }\r\n    }\r\n\r\n    cout << counter << endl;\r\n\r\n\r\n    return 0;\r\n}",
      "fileName": "Sijey_count-vowels-in-a-string-7746433050.js",
      "learner": "Sijey",
      "learner_id": "6818b0958178115311f67a47",
      "timestamp": "2025-05-05 12:55:16.958000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nbool isLowercaseOnly(const string& s) {\r\n    for (char c : s) {\r\n        if (c < 'a' || c > 'z') {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nint countVowels(const string& s) {\r\n    int count = 0;\r\n    for (char c : s) {\r\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\r\n            count++;\r\n        }\r\n    }\r\n    return count;\r\n}\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n\r\n    if (!isLowercaseOnly(s)) {\r\n        cout << \"Invalid!\" << endl;\r\n    } else {\r\n        cout << countVowels(s) << endl;\r\n    }\r\n\r\n    return 0;\r\n}\r\n",
      "fileName": "jpflores_count-vowels-in-a-string-7746433050.js",
      "learner": "jpflores",
      "learner_id": "6818c355052c349288b6589f",
      "timestamp": "2025-05-05 14:13:37.292000"
    }
  ],
  "success": true
}