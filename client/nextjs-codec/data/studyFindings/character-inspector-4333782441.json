{
  "matrix": [
    [
      100,
      68,
      63,
      67,
      68,
      67,
      68,
      59,
      62
    ],
    [
      68,
      100,
      71,
      66,
      67,
      70,
      82,
      70,
      74
    ],
    [
      63,
      71,
      100,
      67,
      67,
      67,
      71,
      63,
      83
    ],
    [
      67,
      66,
      67,
      100,
      83,
      76,
      65,
      53,
      64
    ],
    [
      68,
      67,
      67,
      83,
      100,
      76,
      65,
      54,
      64
    ],
    [
      67,
      70,
      67,
      76,
      76,
      100,
      68,
      57,
      66
    ],
    [
      68,
      82,
      71,
      65,
      65,
      68,
      100,
      73,
      74
    ],
    [
      59,
      70,
      63,
      53,
      54,
      57,
      73,
      100,
      66
    ],
    [
      62,
      74,
      83,
      64,
      64,
      66,
      74,
      66,
      100
    ]
  ],
  "snippets": [
    {
      "code": "#include <iostream>\r\n#include <sstream>\r\n#include <cctype>\r\n\r\nint main() {\r\n    std::string line;\r\n    std::getline(std::cin, line);\r\n\r\n    std::istringstream stream(line);\r\n    char ch;\r\n\r\n    while (stream >> ch) {\r\n        if (isalpha(ch)) {\r\n            std::cout << ch << \" is a letter!\" << std::endl;\r\n        } else if (isdigit(ch)) {\r\n            std::cout << ch << \" is a digit!\" << std::endl;\r\n        } else if (ispunct(ch)) {\r\n            std::cout << ch << \" is a punctuation character!\" << std::endl;\r\n        }\r\n    }\r\n    \r\n    return 0;\r\n}",
      "fileName": "ofrancisco_character-inspector-4333782441.js",
      "learner": "ofrancisco",
      "learner_id": "6812e6570309aaaf4ec0c8ba",
      "timestamp": "2025-05-01 03:50:13.971000"
    },
    {
      "code": "#include <iostream>\r\n#include <sstream>\r\n#include <cctype>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string line;\r\n    getline (cin, line);\r\n\r\n    stringstream ss (line);\r\n    char name;\r\n    int count = 0;\r\n\r\n    while (ss >> name && count < 20) {\r\n        if (isalpha (name)) {\r\n            cout << name << \" is a letter!\" << endl;\r\n        } else if (isdigit (name)) {\r\n            cout << name << \" is a digit!\" << endl;\r\n        } else if (ispunct (name)) {\r\n            cout << name << \" is a punctuation character!\" << endl;\r\n        }\r\n        count++;\r\n    }\r\n    return 0;\r\n}",
      "fileName": "jgab_character-inspector-4333782441.js",
      "learner": "jgab",
      "learner_id": "681477a6a0892f131964f278",
      "timestamp": "2025-05-02 08:07:34.589000"
    },
    {
      "code": "#include <iostream>\r\n#include <cctype>\r\nusing namespace std;\r\n\r\nint main() {\r\n    char ch;\r\n    while (cin >> ch) {\r\n        if (isalpha(ch))\r\n        cout << ch << \" is a letter!\" << endl;\r\n        else if (isdigit(ch))\r\n        cout << ch << \" is a digit!\" << endl;\r\n        else if (ispunct(ch))\r\n        cout << ch << \" is a punctuation character!\" << endl;\r\n    }\r\n    return 0;\r\n}",
      "fileName": "jmoso13_character-inspector-4333782441.js",
      "learner": "jmoso13",
      "learner_id": "68145f82b76578b17f09c176",
      "timestamp": "2025-05-02 11:08:46.832000"
    },
    {
      "code": "#include <iostream>\r\n#include <cctype>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string input;\r\n    getline(cin, input);\r\n\r\n    for(char sd : input){\r\n        if(isalpha(sd)){\r\n            cout << sd << \" is a letter!\" << endl;\r\n        }\r\n        else if(ispunct (sd)){\r\n            cout << sd << \" is a punctuation character!\" << endl;\r\n        }\r\n        else if(isdigit (sd)){\r\n            cout << sd << \" is a digit!\" << endl;\r\n        }\r\n    }\r\n    return 0;\r\n}",
      "fileName": "vladiberks_character-inspector-4333782441.js",
      "learner": "vladiberks",
      "learner_id": "681309193ce25f1b7c4bbe22",
      "timestamp": "2025-05-02 15:12:51.993000"
    },
    {
      "code": "#include <iostream>\r\n#include <cctype>\r\n#include <string>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n    string list;\r\n    getline(cin, list);\r\n\r\n    for (char c : list){\r\n        if(isalpha(c)){\r\n            cout << c << \" is a letter!\" << endl;\r\n        }\r\n        else if(isdigit(c)){\r\n            cout << c << \" is a digit!\" << endl;\r\n        }\r\n        else if(ispunct(c)){\r\n            cout << c << \" is a punctuation character!\" << endl;\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}",
      "fileName": "codecnigabo_character-inspector-4333782441.js",
      "learner": "codecnigabo",
      "learner_id": "68123ead9c872fb2482f570d",
      "timestamp": "2025-05-02 15:37:03.041000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string input;\r\n    getline(cin, input);\r\n\r\n    for (int i=0; i < input.length(); i++)\r\n    {\r\n        char check = input[i];\r\n        if(isspace(check))\r\n        {\r\n            continue;\r\n        }\r\n        if (isalpha(check))\r\n        {\r\n            cout << check << \" is a letter!\" << endl;\r\n        }\r\n        else if (isdigit(check))\r\n        {\r\n            cout << check << \" is a digit!\" << endl;\r\n        }\r\n        else\r\n        {\r\n            cout << check << \" is a punctuation character!\" << endl;\r\n        }\r\n    }    \r\n    return 0;\r\n}",
      "fileName": "rorot_character-inspector-4333782441.js",
      "learner": "rorot",
      "learner_id": "6814f0d30ea6b2d92afface5",
      "timestamp": "2025-05-02 16:41:37.058000"
    },
    {
      "code": "#include <iostream>\r\n#include <sstream>\r\n#include <cctype>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string line;\r\n    getline(cin, line);\r\n\r\n    stringstream ss(line);\r\n    char ch;\r\n    int count = 0;\r\n\r\n    while (ss >> ch && count < 20) {\r\n        if (isalpha(ch)) {\r\n            cout << ch << \" is a letter!\" << endl;\r\n        } else if (isdigit(ch)) {\r\n            cout << ch << \" is a digit!\" << endl;\r\n        } else if (ispunct(ch)) {\r\n            cout << ch << \" is a punctuation character!\" << endl;\r\n        }\r\n        count++;\r\n    }\r\n}\r\n",
      "fileName": "zsanchez23_character-inspector-4333782441.js",
      "learner": "zsanchez23",
      "learner_id": "6814fadd80b316ddbdb518d8",
      "timestamp": "2025-05-02 17:07:10.772000"
    },
    {
      "code": "#include <iostream>\r\n#include <sstream>\r\n#include <cctype>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string line;\r\n    getline(cin, line); // Read the entire line of input\r\n\r\n    stringstream ss(line);\r\n    string token;\r\n    int count = 0;\r\n\r\n    while (ss >> token && count < 20) {\r\n        char ch = token[0]; // Only consider the first character of each token\r\n\r\n        if (isalpha(ch)) {\r\n            cout << ch << \" is a letter!\" << endl;\r\n        } else if (isdigit(ch)) {\r\n            cout << ch << \" is a digit!\" << endl;\r\n        } else if (ispunct(ch)) {\r\n            cout << ch << \" is a punctuation character!\" << endl;\r\n        }\r\n\r\n        count++;\r\n    }\r\n\r\n    return 0;\r\n}",
      "fileName": "japosugac_character-inspector-4333782441.js",
      "learner": "japosugac",
      "learner_id": "68150661a62d51ae3b4c6a35",
      "timestamp": "2025-05-02 17:56:50.157000"
    },
    {
      "code": "#include <iostream>\n#include <cctype>\nusing namespace std;\n\nint main() {\n    char ch;\n    int count = 0;\n\n    while (cin >> ch && count < 20) {\n        if (isalpha(ch))\n            cout << ch << \" is a letter!\" << endl;\n        else if (isdigit(ch))\n            cout << ch << \" is a digit!\" << endl;\n        else if (ispunct(ch))\n            cout << ch << \" is a punctuation character!\" << endl;\n        count++;\n    }\n\n    return 0;\n}",
      "fileName": "cjoguan_character-inspector-4333782441.js",
      "learner": "cjoguan",
      "learner_id": "6815183e17d4c26021f0b1bc",
      "timestamp": "2025-05-02 19:32:19.327000"
    }
  ],
  "success": true
}