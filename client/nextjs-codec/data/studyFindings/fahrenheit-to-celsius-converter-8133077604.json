{
  "matrix": [
    [
      100,
      64,
      60,
      60,
      80,
      73,
      72,
      72,
      72,
      72,
      71,
      71,
      68,
      57,
      66,
      66,
      66,
      62,
      62,
      57,
      55,
      79,
      79,
      79,
      75,
      73,
      74,
      62
    ],
    [
      64,
      100,
      83,
      83,
      64,
      68,
      68,
      68,
      68,
      68,
      67,
      67,
      76,
      72,
      79,
      79,
      79,
      78,
      78,
      74,
      67,
      62,
      62,
      62,
      66,
      66,
      67,
      77
    ],
    [
      60,
      83,
      100,
      99,
      61,
      63,
      63,
      63,
      63,
      63,
      62,
      62,
      72,
      74,
      75,
      75,
      75,
      78,
      78,
      72,
      66,
      58,
      58,
      58,
      61,
      61,
      62,
      78
    ],
    [
      60,
      83,
      99,
      100,
      61,
      63,
      63,
      63,
      63,
      63,
      62,
      62,
      72,
      74,
      75,
      75,
      75,
      78,
      78,
      72,
      66,
      58,
      58,
      58,
      61,
      61,
      62,
      78
    ],
    [
      80,
      64,
      61,
      61,
      100,
      72,
      71,
      71,
      71,
      71,
      70,
      70,
      68,
      57,
      66,
      66,
      66,
      62,
      62,
      56,
      53,
      82,
      82,
      82,
      73,
      71,
      72,
      62
    ],
    [
      73,
      68,
      63,
      63,
      72,
      100,
      91,
      91,
      88,
      88,
      86,
      86,
      72,
      60,
      70,
      70,
      70,
      64,
      64,
      62,
      59,
      71,
      71,
      71,
      78,
      79,
      78,
      64
    ],
    [
      72,
      68,
      63,
      63,
      71,
      91,
      100,
      100,
      90,
      90,
      88,
      88,
      72,
      60,
      70,
      70,
      70,
      64,
      64,
      62,
      60,
      71,
      71,
      70,
      78,
      79,
      79,
      64
    ],
    [
      72,
      68,
      63,
      63,
      71,
      91,
      100,
      100,
      90,
      90,
      88,
      88,
      72,
      60,
      70,
      70,
      70,
      64,
      64,
      62,
      60,
      71,
      71,
      70,
      78,
      79,
      79,
      64
    ],
    [
      72,
      68,
      63,
      63,
      71,
      88,
      90,
      90,
      100,
      100,
      91,
      91,
      72,
      60,
      70,
      70,
      70,
      64,
      64,
      63,
      60,
      70,
      70,
      69,
      79,
      80,
      79,
      64
    ],
    [
      72,
      68,
      63,
      63,
      71,
      88,
      90,
      90,
      100,
      100,
      91,
      91,
      72,
      60,
      70,
      70,
      70,
      64,
      64,
      63,
      60,
      70,
      70,
      69,
      79,
      80,
      79,
      64
    ],
    [
      71,
      67,
      62,
      62,
      70,
      86,
      88,
      88,
      91,
      91,
      100,
      100,
      71,
      59,
      69,
      69,
      69,
      63,
      63,
      62,
      59,
      70,
      70,
      69,
      78,
      79,
      78,
      62
    ],
    [
      71,
      67,
      62,
      62,
      70,
      86,
      88,
      88,
      91,
      91,
      100,
      100,
      71,
      59,
      69,
      69,
      69,
      63,
      63,
      62,
      59,
      70,
      70,
      69,
      78,
      79,
      78,
      62
    ],
    [
      68,
      76,
      72,
      72,
      68,
      72,
      72,
      72,
      72,
      72,
      71,
      71,
      100,
      68,
      78,
      78,
      78,
      74,
      74,
      66,
      62,
      66,
      66,
      67,
      73,
      73,
      74,
      73
    ],
    [
      57,
      72,
      74,
      74,
      57,
      60,
      60,
      60,
      60,
      60,
      59,
      59,
      68,
      100,
      74,
      74,
      74,
      77,
      77,
      69,
      66,
      55,
      55,
      55,
      58,
      58,
      59,
      76
    ],
    [
      66,
      79,
      75,
      75,
      66,
      70,
      70,
      70,
      70,
      70,
      69,
      69,
      78,
      74,
      100,
      100,
      100,
      78,
      78,
      70,
      68,
      64,
      64,
      64,
      68,
      69,
      69,
      77
    ],
    [
      66,
      79,
      75,
      75,
      66,
      70,
      70,
      70,
      70,
      70,
      69,
      69,
      78,
      74,
      100,
      100,
      100,
      78,
      78,
      70,
      68,
      64,
      64,
      64,
      68,
      69,
      69,
      77
    ],
    [
      66,
      79,
      75,
      75,
      66,
      70,
      70,
      70,
      70,
      70,
      69,
      69,
      78,
      74,
      100,
      100,
      100,
      78,
      78,
      70,
      68,
      64,
      64,
      64,
      68,
      69,
      69,
      77
    ],
    [
      62,
      78,
      78,
      78,
      62,
      64,
      64,
      64,
      64,
      64,
      63,
      63,
      74,
      77,
      78,
      78,
      78,
      100,
      100,
      69,
      64,
      59,
      59,
      60,
      62,
      62,
      63,
      79
    ],
    [
      62,
      78,
      78,
      78,
      62,
      64,
      64,
      64,
      64,
      64,
      63,
      63,
      74,
      77,
      78,
      78,
      78,
      100,
      100,
      69,
      64,
      59,
      59,
      60,
      62,
      62,
      63,
      79
    ],
    [
      57,
      74,
      72,
      72,
      56,
      62,
      62,
      62,
      63,
      63,
      62,
      62,
      66,
      69,
      70,
      70,
      70,
      69,
      69,
      100,
      66,
      54,
      54,
      54,
      58,
      59,
      60,
      70
    ],
    [
      55,
      67,
      66,
      66,
      53,
      59,
      60,
      60,
      60,
      60,
      59,
      59,
      62,
      66,
      68,
      68,
      68,
      64,
      64,
      66,
      100,
      52,
      52,
      52,
      57,
      58,
      58,
      66
    ],
    [
      79,
      62,
      58,
      58,
      82,
      71,
      71,
      71,
      70,
      70,
      70,
      70,
      66,
      55,
      64,
      64,
      64,
      59,
      59,
      54,
      52,
      100,
      100,
      92,
      76,
      74,
      74,
      59
    ],
    [
      79,
      62,
      58,
      58,
      82,
      71,
      71,
      71,
      70,
      70,
      70,
      70,
      66,
      55,
      64,
      64,
      64,
      59,
      59,
      54,
      52,
      100,
      100,
      92,
      76,
      74,
      74,
      59
    ],
    [
      79,
      62,
      58,
      58,
      82,
      71,
      70,
      70,
      69,
      69,
      69,
      69,
      67,
      55,
      64,
      64,
      64,
      60,
      60,
      54,
      52,
      92,
      92,
      100,
      75,
      73,
      74,
      59
    ],
    [
      75,
      66,
      61,
      61,
      73,
      78,
      78,
      78,
      79,
      79,
      78,
      78,
      73,
      58,
      68,
      68,
      68,
      62,
      62,
      58,
      57,
      76,
      76,
      75,
      100,
      89,
      86,
      62
    ],
    [
      73,
      66,
      61,
      61,
      71,
      79,
      79,
      79,
      80,
      80,
      79,
      79,
      73,
      58,
      69,
      69,
      69,
      62,
      62,
      59,
      58,
      74,
      74,
      73,
      89,
      100,
      88,
      62
    ],
    [
      74,
      67,
      62,
      62,
      72,
      78,
      79,
      79,
      79,
      79,
      78,
      78,
      74,
      59,
      69,
      69,
      69,
      63,
      63,
      60,
      58,
      74,
      74,
      74,
      86,
      88,
      100,
      63
    ],
    [
      62,
      77,
      78,
      78,
      62,
      64,
      64,
      64,
      64,
      64,
      62,
      62,
      73,
      76,
      77,
      77,
      77,
      79,
      79,
      70,
      66,
      59,
      59,
      59,
      62,
      62,
      63,
      100
    ]
  ],
  "snippets": [
    {
      "code": "#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\nint main() {\r\n    \r\n    double F, celsius;\r\n    \r\n    cin >> F;\r\n    \r\n    celsius = (F - 32) * 5 / 9;\r\n    \r\n    cout << F << \" F is \";\r\n    cout << fixed << setprecision(2);\r\n    cout << celsius << \" C\";\r\n    \r\n    return 0;\r\n}",
      "fileName": "jmoso13_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "jmoso13",
      "learner_id": "68145f82b76578b17f09c176",
      "timestamp": "2025-05-02 06:25:44.185000"
    },
    {
      "code": "#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\ndouble toCelsius (double fahrenheit) {\r\n    return (fahrenheit - 32) * 5  / 9;\r\n}\r\n    \r\nint main() {\r\n    int fahrenheit;\r\n    cin >> fahrenheit;\r\n\r\n    double celsius = toCelsius (fahrenheit);\r\n\r\n    cout << fixed << setprecision (2);\r\n    cout << fahrenheit << \" F is \" << celsius << \" C\" << endl;\r\n\r\n    return 0;\r\n}",
      "fileName": "jgab_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "jgab",
      "learner_id": "681477a6a0892f131964f278",
      "timestamp": "2025-05-02 08:42:18.855000"
    },
    {
      "code": "#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\ndouble toCelcius (double fahrenheit) {\r\n    return (fahrenheit - 32) * 5 / 9;\r\n}\r\nint main() {\r\n    int fahrenheit;\r\n    cin >> fahrenheit;\r\n\r\n    double celcius = toCelcius (fahrenheit);\r\n\r\n    cout << fahrenheit << \" F is \" << fixed << setprecision (2) << celcius << \" C\" << endl;\r\n    \r\n    return 0;\r\n}",
      "fileName": "jgab_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "jgab",
      "learner_id": "681477a6a0892f131964f278",
      "timestamp": "2025-05-02 08:47:09.745000"
    },
    {
      "code": "#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\ndouble toCelcius (double fahrenheit) {\r\n    return (fahrenheit - 32) * 5 / 9;\r\n}\r\nint main() {\r\n    int fahrenheit;\r\n    cin >> fahrenheit;\r\n\r\n    double celcius = toCelcius (fahrenheit);\r\n\r\n    cout << fahrenheit << \" F is \" << fixed << setprecision (2) << celcius << \" C\" << endl;\r\n    \r\n    return 0;\r\n}",
      "fileName": "jgab_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "jgab",
      "learner_id": "681477a6a0892f131964f278",
      "timestamp": "2025-05-02 08:47:40.723000"
    },
    {
      "code": "#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int XX;\r\n    cin >> XX;\r\n    double YY = (XX - 32) * 5/9;\r\n    cout << fixed <<setprecision(2);\r\n    cout << XX << \" F is \" << YY << \" C\" << endl;\r\n    return 0;\r\n}",
      "fileName": "vladiberks_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "vladiberks",
      "learner_id": "681309193ce25f1b7c4bbe22",
      "timestamp": "2025-05-02 15:43:53.839000"
    },
    {
      "code": "#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\ndouble getCelsius(int XX);\r\nint main() {\r\n    int XX;\r\n    cin >> XX;\r\n    double YY = getCelsius(XX);\r\n    cout << fixed <<setprecision(2);\r\n    cout << XX << \" F is \" << YY << \" C\" << endl;\r\n    return 0;\r\n}\r\ndouble getCelsius(int XX){\r\n    return (XX - 32) * 5/9;\r\n}",
      "fileName": "vladiberks_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "vladiberks",
      "learner_id": "681309193ce25f1b7c4bbe22",
      "timestamp": "2025-05-02 15:52:29.479000"
    },
    {
      "code": "#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\ndouble toCelsius(int XX);\r\nint main() {\r\n    int XX;\r\n    cin >> XX;\r\n    double YY = toCelsius(XX);\r\n    cout << fixed <<setprecision(2);\r\n    cout << XX << \" F is \" << YY << \" C\" << endl;\r\n    return 0;\r\n}\r\ndouble toCelsius(int XX){\r\n    return (XX - 32) * 5/9;\r\n}",
      "fileName": "vladiberks_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "vladiberks",
      "learner_id": "681309193ce25f1b7c4bbe22",
      "timestamp": "2025-05-02 15:53:58.778000"
    },
    {
      "code": "#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\ndouble toCelsius(int XX);\r\nint main() {\r\n    int XX;\r\n    cin >> XX;\r\n    double YY = toCelsius(XX);\r\n    cout << fixed <<setprecision(2);\r\n    cout << XX << \" F is \" << YY << \" C\" << endl;\r\n    return 0;\r\n}\r\ndouble toCelsius(int XX){\r\n    return (XX - 32) * 5/9;\r\n}",
      "fileName": "vladiberks_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "vladiberks",
      "learner_id": "681309193ce25f1b7c4bbe22",
      "timestamp": "2025-05-02 15:55:14.195000"
    },
    {
      "code": "#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\ndouble toCelsius(double XX);\r\nint main() {\r\n    int XX;\r\n    cin >> XX;\r\n    double YY = toCelsius(XX);\r\n    cout << fixed <<setprecision(2);\r\n    cout << XX << \" F is \" << YY << \" C\" << endl;\r\n    return 0;\r\n}\r\ndouble toCelsius(double XX){\r\n    return (XX - 32) * 5/9;\r\n}",
      "fileName": "vladiberks_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "vladiberks",
      "learner_id": "681309193ce25f1b7c4bbe22",
      "timestamp": "2025-05-02 15:55:51.105000"
    },
    {
      "code": "#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\ndouble toCelsius(double XX);\r\nint main() {\r\n    int XX;\r\n    cin >> XX;\r\n    double YY = toCelsius(XX);\r\n    cout << fixed <<setprecision(2);\r\n    cout << XX << \" F is \" << YY << \" C\" << endl;\r\n    return 0;\r\n}\r\ndouble toCelsius(double XX){\r\n    return (XX - 32) * 5/9;\r\n}",
      "fileName": "vladiberks_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "vladiberks",
      "learner_id": "681309193ce25f1b7c4bbe22",
      "timestamp": "2025-05-02 15:56:57.329000"
    },
    {
      "code": "#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\ndouble toCelsius(double XX);\r\n\r\nint main() {\r\n    int XX;\r\n    cin >> XX;\r\n    double YY = toCelsius(XX);\r\n    cout << fixed << setprecision(2);\r\n    cout << XX << \" F is \" << YY << \" C\" << endl;\r\n    return 0;\r\n}\r\ndouble toCelsius(double XX){\r\n    return (XX - 32)*5/9;\r\n}",
      "fileName": "vladiberks_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "vladiberks",
      "learner_id": "681309193ce25f1b7c4bbe22",
      "timestamp": "2025-05-02 16:02:22.695000"
    },
    {
      "code": "#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\ndouble toCelsius(double XX);\r\n\r\nint main() {\r\n    int XX;\r\n    cin >> XX;\r\n    double YY = toCelsius(XX);\r\n    cout << fixed << setprecision(2);\r\n    cout << XX << \" F is \" << YY << \" C\" << endl;\r\n    return 0;\r\n}\r\ndouble toCelsius(double XX){\r\n    return (XX - 32)*5/9;\r\n}",
      "fileName": "vladiberks_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "vladiberks",
      "learner_id": "681309193ce25f1b7c4bbe22",
      "timestamp": "2025-05-02 16:03:25.346000"
    },
    {
      "code": "#include <iostream>\r\n#include <iomanip> \r\n\r\nusing namespace std;\r\n\r\ndouble toCelsius(double fahrenheit){\r\n    return (fahrenheit - 32) * 5.0 / 9.0;\r\n}\r\n\r\nint main() {\r\n    float F;\r\n    cin >> F;\r\n\r\n    float C = toCelsius(F);\r\n\r\n    cout << F << \" F is \" << fixed << setprecision(2) << C << \" C\" << endl;\r\n    \r\n\r\n    return 0;\r\n}",
      "fileName": "codecnigabo_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "codecnigabo",
      "learner_id": "68123ead9c872fb2482f570d",
      "timestamp": "2025-05-02 16:46:27.722000"
    },
    {
      "code": "#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\ndouble toCelsius(double fah)\r\n{\r\n    return (fah - 32) * 5.0 / 9.0;\r\n}\r\n\r\nint main() {\r\n    double f;\r\n    cin >> f;\r\n\r\n    if (f < -100 || f > 500)\r\n    {\r\n        cout << \"Temperature must be between -100 and 500 Fahrenheit.\" << endl;\r\n        return 1;\r\n    }\r\n\r\n    double c = toCelsius(f);\r\n    cout << f << \" F is \" << fixed << setprecision(2) << c << \" C\" << endl;\r\n\r\n    return 0;\r\n}",
      "fileName": "rorot_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "rorot",
      "learner_id": "6814f0d30ea6b2d92afface5",
      "timestamp": "2025-05-02 16:53:00.328000"
    },
    {
      "code": "#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\n// User-defined function to convert Fahrenheit to Celsius\r\ndouble toCelsius(double fahrenheit) {\r\n    return (fahrenheit - 32) * 5.0 / 9.0;\r\n}\r\n\r\nint main() {\r\n    double F;\r\n    cin >> F;\r\n\r\n    double C = toCelsius(F);\r\n\r\n    cout << fixed << setprecision(2);\r\n    cout << (int)F << \" F is \" << C << \" C\" << endl;  \r\n\r\n}\r\n\r\n",
      "fileName": "zsanchez23_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "zsanchez23",
      "learner_id": "6814fadd80b316ddbdb518d8",
      "timestamp": "2025-05-02 17:10:15.681000"
    },
    {
      "code": "#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\n// User-defined function to convert Fahrenheit to Celsius\r\ndouble toCelsius(double fahrenheit) {\r\n    return (fahrenheit - 32) * 5.0 / 9.0;\r\n}\r\n\r\nint main() {\r\n    double F;\r\n    cin >> F;\r\n\r\n    double C = toCelsius(F);\r\n\r\n    cout << fixed << setprecision(2);\r\n    cout << (int)F << \" F is \" << C << \" C\" << endl;  \r\n\r\n}\r\n",
      "fileName": "zsanchez23_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "zsanchez23",
      "learner_id": "6814fadd80b316ddbdb518d8",
      "timestamp": "2025-05-02 17:11:04.048000"
    },
    {
      "code": "#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\n// User-defined function to convert Fahrenheit to Celsius\r\ndouble toCelsius(double fahrenheit) {\r\n    return (fahrenheit - 32) * 5.0 / 9.0;\r\n}\r\n\r\nint main() {\r\n    double F;\r\n    cin >> F;\r\n\r\n    double C = toCelsius(F);\r\n\r\n    cout << fixed << setprecision(2);\r\n    cout << (int)F << \" F is \" << C << \" C\" << endl;  \r\n\r\n}\r\n",
      "fileName": "zsanchez23_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "zsanchez23",
      "learner_id": "6814fadd80b316ddbdb518d8",
      "timestamp": "2025-05-02 17:11:10.064000"
    },
    {
      "code": "#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\ndouble toCelsius(double fahrenheit) {\r\n    return (fahrenheit - 32) * 5.0 / 9.0;\r\n}\r\n\r\nint main() {\r\n    double F;\r\n    cin >> F;\r\n\r\n    double C = toCelsius(F);\r\n\r\n    cout << fixed << setprecision(0) << F << \" F is \";\r\n    cout << fixed << setprecision(2) << C << \" C\" << endl;\r\n\r\n    return 0;\r\n}",
      "fileName": "japosugac_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "japosugac",
      "learner_id": "68150661a62d51ae3b4c6a35",
      "timestamp": "2025-05-02 18:00:22.544000"
    },
    {
      "code": "#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\ndouble toCelsius(double fahrenheit) {\r\n    return (fahrenheit - 32) * 5.0 / 9.0;\r\n}\r\n\r\nint main() {\r\n    double F;\r\n    cin >> F;\r\n\r\n    double C = toCelsius(F);\r\n\r\n    cout << fixed << setprecision(0) << F << \" F is \";\r\n    cout << fixed << setprecision(2) << C << \" C\" << endl;\r\n\r\n    return 0;\r\n}",
      "fileName": "japosugac_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "japosugac",
      "learner_id": "68150661a62d51ae3b4c6a35",
      "timestamp": "2025-05-02 18:00:54.781000"
    },
    {
      "code": "#include <iostream>\r\n#include <iomanip>\r\n\r\nusing namespace std;\r\n\r\ndouble toCelsius(double fahrenheit) {\r\n    return (fahrenheit - 32) * 5 / 9;\r\n}\r\n\r\nint main() {\r\n    double fahrenheit;\r\n    \r\n    cin >> fahrenheit;\r\n    \r\n    double celsius = toCelsius(fahrenheit);\r\n    \r\n    cout << fixed << setprecision(2);\r\n\r\n    if (fahrenheit == static_cast<int>(fahrenheit)) {\r\n        cout << static_cast<int>(fahrenheit);\r\n    } else {\r\n        cout << fahrenheit;\r\n    }\r\n\r\n    cout << \" F is \" << celsius << \" C\" << endl;\r\n    \r\n    return 0;\r\n}\r\n",
      "fileName": "ofrancisco_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "ofrancisco",
      "learner_id": "6812e6570309aaaf4ec0c8ba",
      "timestamp": "2025-05-02 18:49:25.832000"
    },
    {
      "code": "#include <iostream>\r\n#include <iomanip>  // For setprecision and fixed\r\n\r\nusing namespace std;\r\n\r\n// User-defined function to convert Fahrenheit to Celsius\r\ndouble toCelsius(double fahrenheit) {\r\n    return (fahrenheit - 32) * 5 / 9;\r\n}\r\n\r\nint main() {\r\n    double fahrenheit;\r\n    \r\n    // Input temperature in Fahrenheit\r\n    cin >> fahrenheit;\r\n    \r\n    // Convert the temperature to Celsius using the user-defined function\r\n    double celsius = toCelsius(fahrenheit);\r\n    \r\n    // Output the result without decimals for Fahrenheit\r\n    // Format Celsius to 2 decimal places\r\n    cout << fixed << setprecision(2);\r\n    \r\n    // Print Fahrenheit without decimals if it is a whole number\r\n    if (fahrenheit == static_cast<int>(fahrenheit)) {\r\n        cout << static_cast<int>(fahrenheit);  // Print as integer if it's a whole number\r\n    } else {\r\n        cout << fahrenheit;  // Otherwise print as a float\r\n    }\r\n\r\n    cout << \" F is \" << celsius << \" C\" << endl;\r\n    \r\n    return 0;\r\n}",
      "fileName": "ofrancisco_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "ofrancisco",
      "learner_id": "6812e6570309aaaf4ec0c8ba",
      "timestamp": "2025-05-02 19:27:10.438000"
    },
    {
      "code": "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nint main() {\n    int F;\n    cin >> F;\n    double result = (F - 32) * 5 / 9;\n\n    cout << fixed << setprecision (2);\n    cout << F << \" F is \" << result << \" C \" << endl;\n    return 0;\n}",
      "fileName": "cjoguan_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "cjoguan",
      "learner_id": "6815183e17d4c26021f0b1bc",
      "timestamp": "2025-05-02 19:56:02.917000"
    },
    {
      "code": "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nint main() {\n    \n    int F;\n    cin >> F;\n    double result = (F - 32) * 5 / 9;\n    cout << fixed << setprecision (2);\n    cout << F << \" F is \" << result << \" C \" << endl;\n    return 0;\n}",
      "fileName": "cjoguan_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "cjoguan",
      "learner_id": "6815183e17d4c26021f0b1bc",
      "timestamp": "2025-05-02 19:57:49.254000"
    },
    {
      "code": "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nint main() {\n    \n    int F;\n    cin >> F;\n    float result = (F - 32) * 5 / 9;\n    cout << fixed << setprecision (2);\n    cout << F << \" F is \" << result << \" C \" << endl;\n    return 0;\n}",
      "fileName": "cjoguan_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "cjoguan",
      "learner_id": "6815183e17d4c26021f0b1bc",
      "timestamp": "2025-05-02 19:59:05.450000"
    },
    {
      "code": "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\ndouble celsius(double F){\n    return (F - 32) * 5 / 9;\n}\n\nint main() {\n    \n    int F;\n    cin >> F;\n    double result = celsius(F);\n    cout << fixed << setprecision (2);\n    cout << F << \" F is \" << result << \" C \" << endl;\n    return 0;\n}",
      "fileName": "cjoguan_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "cjoguan",
      "learner_id": "6815183e17d4c26021f0b1bc",
      "timestamp": "2025-05-02 20:08:21.466000"
    },
    {
      "code": "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\ndouble celsius(double F){\n    return (F - 32) * 5 / 9;\n}\n\nint main() {\n    \n    double F;\n    cin >> F;\n    double result = celsius(F);\n    cout << fixed << setprecision (2);\n    cout << (int)F << \" F is \" << result << \" C \" << endl;\n    return 0;\n}",
      "fileName": "cjoguan_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "cjoguan",
      "learner_id": "6815183e17d4c26021f0b1bc",
      "timestamp": "2025-05-02 20:09:37.178000"
    },
    {
      "code": "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\ndouble celsius(float F){\n    return (F - 32) * 5 / 9;\n}\n\nint main() {\n    \n    float F;\n    cin >> F;\n    float result = celsius(F);\n    cout << fixed << setprecision (2);\n    cout << (int)F << \" F is \" << result << \" C \" << endl;\n    return 0;\n}",
      "fileName": "cjoguan_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "cjoguan",
      "learner_id": "6815183e17d4c26021f0b1bc",
      "timestamp": "2025-05-02 20:10:36.593000"
    },
    {
      "code": "#include <iostream>\r\n#include <iomanip>\r\nusing namespace std;\r\n\r\ndouble toCelsius(double fahrenheit) {\r\n    fahrenheit = (fahrenheit - 32) * 5/9;\r\n    return fahrenheit;\r\n}\r\n\r\nint main() {\r\n    double F;\r\n    cin >> F;\r\n\r\n    if (F >= -100 && F <= 500) {\r\n        cout << F << \" F is \" << setprecision(2) << fixed << toCelsius(F) << \" C\";\r\n    }\r\n    return 0;\r\n}",
      "fileName": "kyle_fahrenheit-to-celsius-converter-8133077604.js",
      "learner": "kyle",
      "learner_id": "6818a151121fbec68421fa4b",
      "timestamp": "2025-05-05 11:54:13.938000"
    }
  ],
  "success": true
}