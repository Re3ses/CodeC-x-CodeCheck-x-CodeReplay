{
  "formatted_snapshots": [
    {
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    // Your code here\n    return 0;\n}",
      "learner_id": "68150661a62d51ae3b4c6a35",
      "submission_id": "681507372a2bfd6ab4742790",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <sstream>\n#include <cctype>\nusing namespace std;\n\nint main() {\n    string line;\n    getline(cin, line); // Read the entire line of input\n\n    stringstream ss(line);\n    string token;\n    int count = 0;\n\n    while (ss >> token && count < 20) {\n        char ch = token[0]; // Only consider the first character of each token\n\n        if (isalpha(ch)) {\n            cout << ch << \" is a letter!\" << endl;\n        } else if (isdigit(ch)) {\n            cout << ch << \" is a digit!\" << endl;\n        } else if (ispunct(ch)) {\n            cout << ch << \" is a punctuation character!\" << endl;\n        }\n\n        count++;\n    }\n\n    return 0;\n}",
      "learner_id": "68150661a62d51ae3b4c6a35",
      "submission_id": "681507522a2bfd6ab4742795",
      "timestamp": ""
    }
  ],
  "sequentialSimilarities": [
    {
      "codebert_score": 43,
      "from_index": 0,
      "learner_id": "68150661a62d51ae3b4c6a35",
      "similarity": 43,
      "to_index": 1
    }
  ],
  "snapshots": [
    {
      "__v": 0,
      "_id": "681507372a2bfd6ab4742790",
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    // Your code here\n    return 0;\n}",
      "learner_id": "68150661a62d51ae3b4c6a35",
      "problemId": "character-inspector-4333782441",
      "roomId": "comp-Dx7fgmm4GB",
      "submissionId": "submission-1746208565055",
      "timestamp": "Fri, 02 May 2025 17:56:07 GMT",
      "version": 1
    },
    {
      "__v": 0,
      "_id": "681507522a2bfd6ab4742795",
      "code": "#include <iostream>\n#include <sstream>\n#include <cctype>\nusing namespace std;\n\nint main() {\n    string line;\n    getline(cin, line); // Read the entire line of input\n\n    stringstream ss(line);\n    string token;\n    int count = 0;\n\n    while (ss >> token && count < 20) {\n        char ch = token[0]; // Only consider the first character of each token\n\n        if (isalpha(ch)) {\n            cout << ch << \" is a letter!\" << endl;\n        } else if (isdigit(ch)) {\n            cout << ch << \" is a digit!\" << endl;\n        } else if (ispunct(ch)) {\n            cout << ch << \" is a punctuation character!\" << endl;\n        }\n\n        count++;\n    }\n\n    return 0;\n}",
      "learner_id": "68150661a62d51ae3b4c6a35",
      "problemId": "character-inspector-4333782441",
      "roomId": "comp-Dx7fgmm4GB",
      "submissionId": "submission-1746208592696",
      "timestamp": "Fri, 02 May 2025 17:56:34 GMT",
      "version": 2
    }
  ],
  "success": true
}