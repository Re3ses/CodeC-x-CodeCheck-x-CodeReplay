{
  "formatted_snapshots": [
    {
      "code": "#include <iostream>\n#include <iomanip>\n#include <csmath>\nusing namespace std;\n\nint main() {\n    int N;\n   cout << \" Enter an integer ( 0 to 10,000):\";\n   cin >> N;\n   \n   if (N < 0 || N > 10000){\n    \n   }\n\n\n    return 0;\n}",
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "submission_id": "681789fdebea7c9edfcd4dda",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <iomanip>\n#include <csmath>\nusing namespace std;\n\nint main() {\n    int N;\n   cout << \" Enter an integer ( 0 to 10,000):\";\n   cin >> N;\n   \n   if (N < 0 || N > 10000){\n    cout << \" Invalid Input please enter a number between 0 and 10,000.\" << endl;\n    retrun 1;\n   }\ndouble root = sqrt(N);\ncout << fixed << setprecision(2);\ncout << \" The square root of\" << N << \" is \" << root << endl;\n\n    return 0;\n}",
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "submission_id": "68178a8eebea7c9edfcd4ddd",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <iomanip>\n#include <cmath>\nusing namespace std;\n\nint main() {\n    int N;\n   cout << \" Enter an integer ( 0 to 10,000):\";\n   cin >> N;\n   \n   if (N < 0 || N > 10000){\n    cout << \" Invalid Input please enter a number between 0 and 10,000.\" << endl;\n    retrun 1;\n   }\ndouble root = sqrt(N);\ncout << fixed << setprecision(2);\ncout << \" The square root of\" << N << \" is \" << root << endl;\n\n    return 0;\n}",
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "submission_id": "68178a9debea7c9edfcd4de0",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <iomanip>\n#include <cmath>\nusing namespace std;\n\nint main() {\n    int N;\n   cout << \" Enter an integer ( 0 to 10,000):\";\n   cin >> N;\n   \n   if (N < 0 || N > 10000){\n    cout << \" Invalid Input please enter a number between 0 and 10,000.\" << endl;\n    \n   }\ndouble root = sqrt(N);\ncout << fixed << setprecision(2);\ncout << \" The square root of\" << N << \" is \" << root << endl;\n\n    return 0;\n}",
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "submission_id": "68178abcebea7c9edfcd4de3",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <iomanip>\n#include <cmath>\nusing namespace std;\n\nint main() {\n    int N;\n   cout << \" Enter an integer ( 0 to 10,000):\";\n   cin >> N;\n   \n   if (N < 0 || N > 10000){\n    cout << \" Invalid Input please enter a number between 0 and 10,000.\" << endl;\n    break;\n   }\ndouble root = sqrt(N);\ncout << fixed << setprecision(2);\ncout << \" The square root of\" << N << \" is \" << root << endl;\n\n    return 0;\n}",
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "submission_id": "68178ad6ebea7c9edfcd4de6",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <iomanip>\n#include <cmath>\nusing namespace std;\n\nint main() {\n    int N;\n   cout << \" Enter an integer ( 0 to 10,000):\";\n   cin >> N;\n   \n   if (N < 0 || N > 10000){\n    cout << \" Invalid Input please enter a number between 0 and 10,000.\" << endl;\n    \n   }\ndouble root = sqrt(N);\ncout << fixed << setprecision(2);\ncout << \" The square root of\" << N << \" is \" << root << endl;\n\n    return 0;\n}",
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "submission_id": "68178aedebea7c9edfcd4de9",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <iomanip>\n#include <cmath>\nusing namespace std;\n\nint main() {\n    int N;\n   cout << \" Enter an integer ( 0 to 10,000):\";\n   cin >> N;\n   \n   if (N < 0 || N > 10000){\n    cout << \" Invalid Input please enter a number between 0 and 10,000.\" << endl;\n    return 1;\n   }\ndouble root = sqrt(N);\ncout << fixed << setprecision(2);\ncout << \" The square root of\" << N << \" is \" << root << endl;\n\n    return 0;\n}",
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "submission_id": "68178afbebea7c9edfcd4dec",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <iomanip>\n#include <cmath>\nusing namespace std;\n\nint main() {\n    int N;\n   cout << \" Enter an integer ( 0 to 10,000):\";\n   cin >> N;\n   \n   if (N < 0 || N > 10000){\n    cout << \" Invalid Input please enter a number between 0 and 10,000.\" << endl;\n    return 1;\n   }\ndouble root = sqrt(N);\ncout << fixed << setprecision(2);\ncout << \" The square root of \" << N << \" is \" << root << endl;\n\n    return 0;\n}",
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "submission_id": "68178b20ebea7c9edfcd4def",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <iomanip>\n#include <cmath>\nusing namespace std;\n\nint main() {\n    int N;\n   cin >> N;\n   \n   if (N < 0 || N > 10000){\n    cout << \" Invalid Input please enter a number between 0 and 10,000.\" << endl;\n    return 1;\n   }\ndouble root = sqrt(N);\ncout << fixed << setprecision(2);\ncout << \" The square root of \" << N << \" is \" << root << endl;\n\n    return 0;\n}",
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "submission_id": "68178bf1ebea7c9edfcd4df2",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <iomanip>\n#include <cmath>\nusing namespace std;\n\nint main() {\n    int N;\n   cin >> N;\n   \n   if (N < 0 || N > 10000){\n    cout << \" Invalid Input please enter a number between 0 and 10,000.\" << endl;\n    return 1;\n   }\ndouble root = sqrt(N);\ncout << fixed << setprecision(2);\ncout << \"The square root of \" << N << \" is \" << root << endl;\n\n    return 0;\n}",
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "submission_id": "68178c0cebea7c9edfcd4df5",
      "timestamp": ""
    }
  ],
  "sequentialSimilarities": [
    {
      "codebert_score": 65,
      "from_index": 0,
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "similarity": 65,
      "to_index": 1
    },
    {
      "codebert_score": 92,
      "from_index": 1,
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "similarity": 92,
      "to_index": 2
    },
    {
      "codebert_score": 90,
      "from_index": 2,
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "similarity": 90,
      "to_index": 3
    },
    {
      "codebert_score": 90,
      "from_index": 3,
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "similarity": 90,
      "to_index": 4
    },
    {
      "codebert_score": 90,
      "from_index": 4,
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "similarity": 90,
      "to_index": 5
    },
    {
      "codebert_score": 88,
      "from_index": 5,
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "similarity": 88,
      "to_index": 6
    },
    {
      "codebert_score": 97,
      "from_index": 6,
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "similarity": 97,
      "to_index": 7
    },
    {
      "codebert_score": 82,
      "from_index": 7,
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "similarity": 82,
      "to_index": 8
    },
    {
      "codebert_score": 96,
      "from_index": 8,
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "similarity": 96,
      "to_index": 9
    }
  ],
  "snapshots": [
    {
      "__v": 0,
      "_id": "681789fdebea7c9edfcd4dda",
      "code": "#include <iostream>\n#include <iomanip>\n#include <csmath>\nusing namespace std;\n\nint main() {\n    int N;\n   cout << \" Enter an integer ( 0 to 10,000):\";\n   cin >> N;\n   \n   if (N < 0 || N > 10000){\n    \n   }\n\n\n    return 0;\n}",
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "problemId": "perfectly-rooted-5136456806",
      "roomId": "comp-Dx7fgmm4GB",
      "submissionId": "submission-1746373117278",
      "timestamp": "Sun, 04 May 2025 15:38:37 GMT",
      "version": 1
    },
    {
      "__v": 0,
      "_id": "68178a8eebea7c9edfcd4ddd",
      "code": "#include <iostream>\n#include <iomanip>\n#include <csmath>\nusing namespace std;\n\nint main() {\n    int N;\n   cout << \" Enter an integer ( 0 to 10,000):\";\n   cin >> N;\n   \n   if (N < 0 || N > 10000){\n    cout << \" Invalid Input please enter a number between 0 and 10,000.\" << endl;\n    retrun 1;\n   }\ndouble root = sqrt(N);\ncout << fixed << setprecision(2);\ncout << \" The square root of\" << N << \" is \" << root << endl;\n\n    return 0;\n}",
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "problemId": "perfectly-rooted-5136456806",
      "roomId": "comp-Dx7fgmm4GB",
      "submissionId": "submission-1746373262762",
      "timestamp": "Sun, 04 May 2025 15:41:02 GMT",
      "version": 2
    },
    {
      "__v": 0,
      "_id": "68178a9debea7c9edfcd4de0",
      "code": "#include <iostream>\n#include <iomanip>\n#include <cmath>\nusing namespace std;\n\nint main() {\n    int N;\n   cout << \" Enter an integer ( 0 to 10,000):\";\n   cin >> N;\n   \n   if (N < 0 || N > 10000){\n    cout << \" Invalid Input please enter a number between 0 and 10,000.\" << endl;\n    retrun 1;\n   }\ndouble root = sqrt(N);\ncout << fixed << setprecision(2);\ncout << \" The square root of\" << N << \" is \" << root << endl;\n\n    return 0;\n}",
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "problemId": "perfectly-rooted-5136456806",
      "roomId": "comp-Dx7fgmm4GB",
      "submissionId": "submission-1746373277487",
      "timestamp": "Sun, 04 May 2025 15:41:17 GMT",
      "version": 3
    },
    {
      "__v": 0,
      "_id": "68178abcebea7c9edfcd4de3",
      "code": "#include <iostream>\n#include <iomanip>\n#include <cmath>\nusing namespace std;\n\nint main() {\n    int N;\n   cout << \" Enter an integer ( 0 to 10,000):\";\n   cin >> N;\n   \n   if (N < 0 || N > 10000){\n    cout << \" Invalid Input please enter a number between 0 and 10,000.\" << endl;\n    \n   }\ndouble root = sqrt(N);\ncout << fixed << setprecision(2);\ncout << \" The square root of\" << N << \" is \" << root << endl;\n\n    return 0;\n}",
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "problemId": "perfectly-rooted-5136456806",
      "roomId": "comp-Dx7fgmm4GB",
      "submissionId": "submission-1746373308599",
      "timestamp": "Sun, 04 May 2025 15:41:48 GMT",
      "version": 4
    },
    {
      "__v": 0,
      "_id": "68178ad6ebea7c9edfcd4de6",
      "code": "#include <iostream>\n#include <iomanip>\n#include <cmath>\nusing namespace std;\n\nint main() {\n    int N;\n   cout << \" Enter an integer ( 0 to 10,000):\";\n   cin >> N;\n   \n   if (N < 0 || N > 10000){\n    cout << \" Invalid Input please enter a number between 0 and 10,000.\" << endl;\n    break;\n   }\ndouble root = sqrt(N);\ncout << fixed << setprecision(2);\ncout << \" The square root of\" << N << \" is \" << root << endl;\n\n    return 0;\n}",
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "problemId": "perfectly-rooted-5136456806",
      "roomId": "comp-Dx7fgmm4GB",
      "submissionId": "submission-1746373334505",
      "timestamp": "Sun, 04 May 2025 15:42:14 GMT",
      "version": 5
    },
    {
      "__v": 0,
      "_id": "68178aedebea7c9edfcd4de9",
      "code": "#include <iostream>\n#include <iomanip>\n#include <cmath>\nusing namespace std;\n\nint main() {\n    int N;\n   cout << \" Enter an integer ( 0 to 10,000):\";\n   cin >> N;\n   \n   if (N < 0 || N > 10000){\n    cout << \" Invalid Input please enter a number between 0 and 10,000.\" << endl;\n    \n   }\ndouble root = sqrt(N);\ncout << fixed << setprecision(2);\ncout << \" The square root of\" << N << \" is \" << root << endl;\n\n    return 0;\n}",
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "problemId": "perfectly-rooted-5136456806",
      "roomId": "comp-Dx7fgmm4GB",
      "submissionId": "submission-1746373357129",
      "timestamp": "Sun, 04 May 2025 15:42:37 GMT",
      "version": 6
    },
    {
      "__v": 0,
      "_id": "68178afbebea7c9edfcd4dec",
      "code": "#include <iostream>\n#include <iomanip>\n#include <cmath>\nusing namespace std;\n\nint main() {\n    int N;\n   cout << \" Enter an integer ( 0 to 10,000):\";\n   cin >> N;\n   \n   if (N < 0 || N > 10000){\n    cout << \" Invalid Input please enter a number between 0 and 10,000.\" << endl;\n    return 1;\n   }\ndouble root = sqrt(N);\ncout << fixed << setprecision(2);\ncout << \" The square root of\" << N << \" is \" << root << endl;\n\n    return 0;\n}",
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "problemId": "perfectly-rooted-5136456806",
      "roomId": "comp-Dx7fgmm4GB",
      "submissionId": "submission-1746373371824",
      "timestamp": "Sun, 04 May 2025 15:42:51 GMT",
      "version": 7
    },
    {
      "__v": 0,
      "_id": "68178b20ebea7c9edfcd4def",
      "code": "#include <iostream>\n#include <iomanip>\n#include <cmath>\nusing namespace std;\n\nint main() {\n    int N;\n   cout << \" Enter an integer ( 0 to 10,000):\";\n   cin >> N;\n   \n   if (N < 0 || N > 10000){\n    cout << \" Invalid Input please enter a number between 0 and 10,000.\" << endl;\n    return 1;\n   }\ndouble root = sqrt(N);\ncout << fixed << setprecision(2);\ncout << \" The square root of \" << N << \" is \" << root << endl;\n\n    return 0;\n}",
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "problemId": "perfectly-rooted-5136456806",
      "roomId": "comp-Dx7fgmm4GB",
      "submissionId": "submission-1746373408518",
      "timestamp": "Sun, 04 May 2025 15:43:28 GMT",
      "version": 8
    },
    {
      "__v": 0,
      "_id": "68178bf1ebea7c9edfcd4df2",
      "code": "#include <iostream>\n#include <iomanip>\n#include <cmath>\nusing namespace std;\n\nint main() {\n    int N;\n   cin >> N;\n   \n   if (N < 0 || N > 10000){\n    cout << \" Invalid Input please enter a number between 0 and 10,000.\" << endl;\n    return 1;\n   }\ndouble root = sqrt(N);\ncout << fixed << setprecision(2);\ncout << \" The square root of \" << N << \" is \" << root << endl;\n\n    return 0;\n}",
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "problemId": "perfectly-rooted-5136456806",
      "roomId": "comp-Dx7fgmm4GB",
      "submissionId": "submission-1746373616911",
      "timestamp": "Sun, 04 May 2025 15:46:57 GMT",
      "version": 9
    },
    {
      "__v": 0,
      "_id": "68178c0cebea7c9edfcd4df5",
      "code": "#include <iostream>\n#include <iomanip>\n#include <cmath>\nusing namespace std;\n\nint main() {\n    int N;\n   cin >> N;\n   \n   if (N < 0 || N > 10000){\n    cout << \" Invalid Input please enter a number between 0 and 10,000.\" << endl;\n    return 1;\n   }\ndouble root = sqrt(N);\ncout << fixed << setprecision(2);\ncout << \"The square root of \" << N << \" is \" << root << endl;\n\n    return 0;\n}",
      "learner_id": "68177e6fcdb47e4e1c97a4c9",
      "problemId": "perfectly-rooted-5136456806",
      "roomId": "comp-Dx7fgmm4GB",
      "submissionId": "submission-1746373644614",
      "timestamp": "Sun, 04 May 2025 15:47:24 GMT",
      "version": 10
    }
  ],
  "success": true
}