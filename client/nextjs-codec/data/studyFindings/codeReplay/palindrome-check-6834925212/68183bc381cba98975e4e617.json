{
  "formatted_snapshots": [
    {
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    // Your code here\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "submission_id": "68184727b578ef7fb8722e2e",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    cin >> s;\n\n    for (int i = 0; i < s.length(); i++){\n        \n    }\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "submission_id": "68184790b578ef7fb8722e34",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, s2;\n    cin >> s;\n\n    for (int i = 0; i < s.length(); i++){\n        s2 = reverse(s.begin(), s.end());\n    }\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "submission_id": "68184817627d9858dce00cec",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, s2;\n    cin >> s;\n\n    for (int i = 0; i < s.length(); i++){\n        s2 = reverse(s.begin(), s.end());\n    }\n\n    if (s1 )\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "submission_id": "68184850627d9858dce00cf8",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, s2;\n    cin >> s;\n\n    for (int i = 0; i < s.length(); i++){\n        s2 = reverse(s.begin(), s.end());\n    }\n\n    if (s.compare(s2) == !0){\n        cout << \n    }\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "submission_id": "68184867627d9858dce00cfe",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, s2;\n    cin >> s;\n\n    for (int i = 0; i < s.length(); i++){\n        s2 = reverse(s.begin(), s.end());\n    }\n\n    if (s.compare(s2) == !0){\n        cout << \"Not a palindrome\" << endl;\n    }\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "submission_id": "68184889627d9858dce00d0e",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, s2;\n    cin >> s;\n\n    for (int i = 0; i < s.length(); i++){\n        s2 = reverse(s.begin(), s.end());\n    }\n\n    if (s.compare(s2) == !0){\n        cout << \"Not a palindrome\" << endl;\n    }\n    else{\n        cout << \"Palindrome\" << endl;\n    }\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "submission_id": "681848a7627d9858dce00d16",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, s2;\n    cin >> s;\n\n    s2 = s;\n\n    s2 = reverse(s.begin(), s.end());\n\n    if (s.compare(s2) == !0){\n        cout << \"Not a palindrome\" << endl;\n    }\n    else{\n        cout << \"Palindrome\" << endl;\n    }\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "submission_id": "6818492c627d9858dce00d2b",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, s2;\n    cin >> s;\n\n    s2 = s;\n\n    reverse(s2.begin(), s2.end());\n\n    if (s.compare(s2) == !0){\n        cout << \"Not a palindrome\" << endl;\n    }\n    else{\n        cout << \"Palindrome\" << endl;\n    }\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "submission_id": "6818493e627d9858dce00d2e",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, s2;\n    cin >> s;\n\n    s2 = reverse(s2.begin(), s2.end());\n\n    if (s.compare(s2) == !0){\n        cout << \"Not a palindrome\" << endl;\n    }\n    else{\n        cout << \"Palindrome\" << endl;\n    }\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "submission_id": "681849a8627d9858dce00d3e",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, s2;\n    cin >> s;\n\n    s2 = string(s.begin(), s.end());\n\n    if (s.compare(s2) == !0){\n        cout << \"Not a palindrome\" << endl;\n    }\n    else{\n        cout << \"Palindrome\" << endl;\n    }\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "submission_id": "681849c3627d9858dce00d45",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, s2;\n    cin >> s;\n\n    s2 = string(s.rbegin(), s.rend());\n\n    if (s.compare(s2) == !0){\n        cout << \"Not a palindrome\" << endl;\n    }\n    else{\n        cout << \"Palindrome\" << endl;\n    }\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "submission_id": "681849f1627d9858dce00d56",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, s2;\n    cin >> s;\n\n    s2 = string(s.rbegin(), s.rend());\n\n    if (s.compare(s2) == 0){\n        cout << \"Palindrome\" << endl;\n    }\n    else{\n        cout << \"Not a palindrome\" << endl;\n    }\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "submission_id": "68184a1bb578ef7fb8722e49",
      "timestamp": ""
    }
  ],
  "sequentialSimilarities": [
    {
      "codebert_score": 56,
      "from_index": 0,
      "learner_id": "68183bc381cba98975e4e617",
      "similarity": 56,
      "to_index": 1
    },
    {
      "codebert_score": 74,
      "from_index": 1,
      "learner_id": "68183bc381cba98975e4e617",
      "similarity": 74,
      "to_index": 2
    },
    {
      "codebert_score": 81,
      "from_index": 2,
      "learner_id": "68183bc381cba98975e4e617",
      "similarity": 81,
      "to_index": 3
    },
    {
      "codebert_score": 75,
      "from_index": 3,
      "learner_id": "68183bc381cba98975e4e617",
      "similarity": 75,
      "to_index": 4
    },
    {
      "codebert_score": 84,
      "from_index": 4,
      "learner_id": "68183bc381cba98975e4e617",
      "similarity": 84,
      "to_index": 5
    },
    {
      "codebert_score": 82,
      "from_index": 5,
      "learner_id": "68183bc381cba98975e4e617",
      "similarity": 82,
      "to_index": 6
    },
    {
      "codebert_score": 78,
      "from_index": 6,
      "learner_id": "68183bc381cba98975e4e617",
      "similarity": 78,
      "to_index": 7
    },
    {
      "codebert_score": 90,
      "from_index": 7,
      "learner_id": "68183bc381cba98975e4e617",
      "similarity": 90,
      "to_index": 8
    },
    {
      "codebert_score": 89,
      "from_index": 8,
      "learner_id": "68183bc381cba98975e4e617",
      "similarity": 89,
      "to_index": 9
    },
    {
      "codebert_score": 88,
      "from_index": 9,
      "learner_id": "68183bc381cba98975e4e617",
      "similarity": 88,
      "to_index": 10
    },
    {
      "codebert_score": 85,
      "from_index": 10,
      "learner_id": "68183bc381cba98975e4e617",
      "similarity": 85,
      "to_index": 11
    },
    {
      "codebert_score": 86,
      "from_index": 11,
      "learner_id": "68183bc381cba98975e4e617",
      "similarity": 86,
      "to_index": 12
    }
  ],
  "snapshots": [
    {
      "__v": 0,
      "_id": "68184727b578ef7fb8722e2e",
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    // Your code here\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746421530537",
      "timestamp": "Mon, 05 May 2025 05:05:43 GMT",
      "version": 1
    },
    {
      "__v": 0,
      "_id": "68184790b578ef7fb8722e34",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    cin >> s;\n\n    for (int i = 0; i < s.length(); i++){\n        \n    }\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746421635591",
      "timestamp": "Mon, 05 May 2025 05:07:28 GMT",
      "version": 2
    },
    {
      "__v": 0,
      "_id": "68184817627d9858dce00cec",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, s2;\n    cin >> s;\n\n    for (int i = 0; i < s.length(); i++){\n        s2 = reverse(s.begin(), s.end());\n    }\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746421770312",
      "timestamp": "Mon, 05 May 2025 05:09:43 GMT",
      "version": 3
    },
    {
      "__v": 0,
      "_id": "68184850627d9858dce00cf8",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, s2;\n    cin >> s;\n\n    for (int i = 0; i < s.length(); i++){\n        s2 = reverse(s.begin(), s.end());\n    }\n\n    if (s1 )\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746421827635",
      "timestamp": "Mon, 05 May 2025 05:10:40 GMT",
      "version": 4
    },
    {
      "__v": 0,
      "_id": "68184867627d9858dce00cfe",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, s2;\n    cin >> s;\n\n    for (int i = 0; i < s.length(); i++){\n        s2 = reverse(s.begin(), s.end());\n    }\n\n    if (s.compare(s2) == !0){\n        cout << \n    }\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746421850989",
      "timestamp": "Mon, 05 May 2025 05:11:03 GMT",
      "version": 5
    },
    {
      "__v": 0,
      "_id": "68184889627d9858dce00d0e",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, s2;\n    cin >> s;\n\n    for (int i = 0; i < s.length(); i++){\n        s2 = reverse(s.begin(), s.end());\n    }\n\n    if (s.compare(s2) == !0){\n        cout << \"Not a palindrome\" << endl;\n    }\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746421884631",
      "timestamp": "Mon, 05 May 2025 05:11:37 GMT",
      "version": 6
    },
    {
      "__v": 0,
      "_id": "681848a7627d9858dce00d16",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, s2;\n    cin >> s;\n\n    for (int i = 0; i < s.length(); i++){\n        s2 = reverse(s.begin(), s.end());\n    }\n\n    if (s.compare(s2) == !0){\n        cout << \"Not a palindrome\" << endl;\n    }\n    else{\n        cout << \"Palindrome\" << endl;\n    }\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746421914804",
      "timestamp": "Mon, 05 May 2025 05:12:07 GMT",
      "version": 7
    },
    {
      "__v": 0,
      "_id": "6818492c627d9858dce00d2b",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, s2;\n    cin >> s;\n\n    s2 = s;\n\n    s2 = reverse(s.begin(), s.end());\n\n    if (s.compare(s2) == !0){\n        cout << \"Not a palindrome\" << endl;\n    }\n    else{\n        cout << \"Palindrome\" << endl;\n    }\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746422048180",
      "timestamp": "Mon, 05 May 2025 05:14:20 GMT",
      "version": 8
    },
    {
      "__v": 0,
      "_id": "6818493e627d9858dce00d2e",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, s2;\n    cin >> s;\n\n    s2 = s;\n\n    reverse(s2.begin(), s2.end());\n\n    if (s.compare(s2) == !0){\n        cout << \"Not a palindrome\" << endl;\n    }\n    else{\n        cout << \"Palindrome\" << endl;\n    }\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746422066243",
      "timestamp": "Mon, 05 May 2025 05:14:38 GMT",
      "version": 9
    },
    {
      "__v": 0,
      "_id": "681849a8627d9858dce00d3e",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, s2;\n    cin >> s;\n\n    s2 = reverse(s2.begin(), s2.end());\n\n    if (s.compare(s2) == !0){\n        cout << \"Not a palindrome\" << endl;\n    }\n    else{\n        cout << \"Palindrome\" << endl;\n    }\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746422172064",
      "timestamp": "Mon, 05 May 2025 05:16:24 GMT",
      "version": 10
    },
    {
      "__v": 0,
      "_id": "681849c3627d9858dce00d45",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, s2;\n    cin >> s;\n\n    s2 = string(s.begin(), s.end());\n\n    if (s.compare(s2) == !0){\n        cout << \"Not a palindrome\" << endl;\n    }\n    else{\n        cout << \"Palindrome\" << endl;\n    }\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746422198436",
      "timestamp": "Mon, 05 May 2025 05:16:51 GMT",
      "version": 11
    },
    {
      "__v": 0,
      "_id": "681849f1627d9858dce00d56",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, s2;\n    cin >> s;\n\n    s2 = string(s.rbegin(), s.rend());\n\n    if (s.compare(s2) == !0){\n        cout << \"Not a palindrome\" << endl;\n    }\n    else{\n        cout << \"Palindrome\" << endl;\n    }\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746422245235",
      "timestamp": "Mon, 05 May 2025 05:17:37 GMT",
      "version": 12
    },
    {
      "__v": 0,
      "_id": "68184a1bb578ef7fb8722e49",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, s2;\n    cin >> s;\n\n    s2 = string(s.rbegin(), s.rend());\n\n    if (s.compare(s2) == 0){\n        cout << \"Palindrome\" << endl;\n    }\n    else{\n        cout << \"Not a palindrome\" << endl;\n    }\n\n    return 0;\n}",
      "learner_id": "68183bc381cba98975e4e617",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746422286972",
      "timestamp": "Mon, 05 May 2025 05:18:19 GMT",
      "version": 13
    }
  ],
  "success": true
}