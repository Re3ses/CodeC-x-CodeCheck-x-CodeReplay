{
  "formatted_snapshots": [
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    int vowel=0;\n    getline (cin, s);\n\n    for (char i: s) {\n        if (i>='a' && i<='z') {\n            if (i=='a' ||i=='e' ||i=='i' ||i=='o' ||i=='u') {\n                vowel++;\n            }\n        }\n        else {\n            cout << \"Invalid!\";\n            return 0;\n\n        }\n    }\n\n    cout << vowel;\n\n    /* \n    1. prompt user to insert string\n    2. take string\n    3. scan if there is lowercase letters and constraint\n    4. scan if vowel, add to counter if yes\n    5. output\n    */\n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "submission_id": "6814d3ef0ee46fb951c71668",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    int vowel=0;\n    getline (cin, s);\n\n    for (int i = s.length(); i<0; i++) {\n        cout << \n    }\n  \n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "submission_id": "6814d43556c3a8f3394c97aa",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    int vowel=0;\n    getline (cin, s);\n\n    for (int i = s.length(); i<0; i++) {\n        cout << s[i];\n    }\n  \n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "submission_id": "6814d4f056c3a8f3394c97bc",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    int vowel=0;\n    getline (cin, s);\n\n    for (int i = s.length(); i<0; i--) {\n        cout << s[i];\n    }\n  \n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "submission_id": "6814d4ff56c3a8f3394c97bf",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    int vowel=0;\n    getline (cin, s);\n\n    for (int i = s.length(); i>0; i--) {\n        cout << s[i];\n    }\n  \n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "submission_id": "6814d51d56c3a8f3394c97c4",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    getline (cin, s);\n\n    for (int i = s.length(); i>0; i--) {\n        cout << s[i];\n    }\n  \n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "submission_id": "6814d53556c3a8f3394c97ce",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    getline (cin, s);\n\n    for (int i = s.length(); i>=0; i--) {\n        cout << s[i];\n    }\n  \n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "submission_id": "6814d57156c3a8f3394c97db",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    getline (cin, s);\n\n    for (int i = s.length(); i>=0; i--) {\n        if \n    }\n  \n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "submission_id": "6814d59256c3a8f3394c97e4",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    getline (cin, s);\n\n    for (int i = s.length(); i>=0; i--) {\n        if s[i] = \n    }\n  \n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "submission_id": "6814d5af56c3a8f3394c97e7",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    getline (cin, s);\n\n/* \n1. read the string\n2. get first letter and last letter and compare\n3. advance to the next letters and compare\n4. once in the middle, stop.\n*/\n\n    for (int i=0; i<=s.length()/2; i++) {\n        \n\n\n    }\n\n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "submission_id": "6814d65f56c3a8f3394c97f4",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    getline (cin, s);\n\n/* \n1. read the string\n2. get first letter and last letter and compare\n3. advance to the next letters and compare\n4. once in the middle, stop.\n*/\n\n    for (int i=0; i<=s.length()/2; i++) {\n        if (s[i] != s[length()-1]) {\n            cout << \"Not a palindrome\";\n            return 0;\n        }\n\n        else {\n            cout << \"Palindrome\";\n        }\n\n    }\n\n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "submission_id": "6814d6b156c3a8f3394c9801",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    getline (cin, s);\n\n/* \n1. read the string\n2. get first letter and last letter and compare\n3. advance to the next letters and compare\n4. once in the middle, stop.\n*/\n\n    for (int i=0; i<=s.length()/2; i++) {\n        if (s[i] != s[s.length()-1]) {\n            cout << \"Not a palindrome\";\n            return 0;\n        }\n\n        else {\n            cout << \"Palindrome\";\n        }\n\n    }\n\n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "submission_id": "6814d6de56c3a8f3394c9805",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    getline (cin, s);\n\n/* \n1. read the string\n2. get first letter and last letter and compare\n3. advance to the next letters and compare\n4. once in the middle, stop.\n*/\n\n    for (int i=0; i<=s.length()/2 -1; i++) {\n        if (s[i] != s[s.length()-1]) {\n            cout << \"Not a palindrome\";\n            return 0;\n        }\n\n        else {\n            cout << \"Palindrome\";\n        }\n\n    }\n\n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "submission_id": "6814d70356c3a8f3394c9808",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    getline (cin, s);\n\n/* \n1. read the string\n2. get first letter and last letter and compare\n3. advance to the next letters and compare\n4. once in the middle, stop.\n*/\n\n    for (int i=0; i<=(s.length()/2)-1; i++) {\n        if (s[i] != s[s.length()-1]) {\n            cout << \"Not a palindrome\";\n            return 0;\n        }\n\n        else {\n            cout << \"Palindrome\";\n        }\n\n    }\n\n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "submission_id": "6814d71356c3a8f3394c980b",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    getline (cin, s);\n\n/* \n1. read the string\n2. get first letter and last letter and compare\n3. advance to the next letters and compare\n4. once in the middle, stop.\n*/\n\n    for (int i=0; i<=(s.length()/2)-1; i++) {\n        if (s[i] != s[s.length()-1]) {\n            cout << \"Not a palindrome\";\n            return 0;\n        }\n\n        else {\n            cout << \"Palindrome\";\n            return 0;\n        }\n\n    }\n\n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "submission_id": "6814d73056c3a8f3394c980e",
      "timestamp": ""
    }
  ],
  "sequentialSimilarities": [
    {
      "codebert_score": 53,
      "from_index": 0,
      "learner_id": "6811b20988362505107a60be",
      "similarity": 53,
      "to_index": 1
    },
    {
      "codebert_score": 78,
      "from_index": 1,
      "learner_id": "6811b20988362505107a60be",
      "similarity": 78,
      "to_index": 2
    },
    {
      "codebert_score": 84,
      "from_index": 2,
      "learner_id": "6811b20988362505107a60be",
      "similarity": 84,
      "to_index": 3
    },
    {
      "codebert_score": 90,
      "from_index": 3,
      "learner_id": "6811b20988362505107a60be",
      "similarity": 90,
      "to_index": 4
    },
    {
      "codebert_score": 84,
      "from_index": 4,
      "learner_id": "6811b20988362505107a60be",
      "similarity": 84,
      "to_index": 5
    },
    {
      "codebert_score": 91,
      "from_index": 5,
      "learner_id": "6811b20988362505107a60be",
      "similarity": 91,
      "to_index": 6
    },
    {
      "codebert_score": 78,
      "from_index": 6,
      "learner_id": "6811b20988362505107a60be",
      "similarity": 78,
      "to_index": 7
    },
    {
      "codebert_score": 83,
      "from_index": 7,
      "learner_id": "6811b20988362505107a60be",
      "similarity": 83,
      "to_index": 8
    },
    {
      "codebert_score": 64,
      "from_index": 8,
      "learner_id": "6811b20988362505107a60be",
      "similarity": 64,
      "to_index": 9
    },
    {
      "codebert_score": 75,
      "from_index": 9,
      "learner_id": "6811b20988362505107a60be",
      "similarity": 75,
      "to_index": 10
    },
    {
      "codebert_score": 86,
      "from_index": 10,
      "learner_id": "6811b20988362505107a60be",
      "similarity": 86,
      "to_index": 11
    },
    {
      "codebert_score": 91,
      "from_index": 11,
      "learner_id": "6811b20988362505107a60be",
      "similarity": 91,
      "to_index": 12
    },
    {
      "codebert_score": 92,
      "from_index": 12,
      "learner_id": "6811b20988362505107a60be",
      "similarity": 92,
      "to_index": 13
    },
    {
      "codebert_score": 92,
      "from_index": 13,
      "learner_id": "6811b20988362505107a60be",
      "similarity": 92,
      "to_index": 14
    }
  ],
  "snapshots": [
    {
      "__v": 0,
      "_id": "6814d3ef0ee46fb951c71668",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    int vowel=0;\n    getline (cin, s);\n\n    for (char i: s) {\n        if (i>='a' && i<='z') {\n            if (i=='a' ||i=='e' ||i=='i' ||i=='o' ||i=='u') {\n                vowel++;\n            }\n        }\n        else {\n            cout << \"Invalid!\";\n            return 0;\n\n        }\n    }\n\n    cout << vowel;\n\n    /* \n    1. prompt user to insert string\n    2. take string\n    3. scan if there is lowercase letters and constraint\n    4. scan if vowel, add to counter if yes\n    5. output\n    */\n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746195439398",
      "timestamp": "Fri, 02 May 2025 14:17:19 GMT",
      "version": 1
    },
    {
      "__v": 0,
      "_id": "6814d43556c3a8f3394c97aa",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    int vowel=0;\n    getline (cin, s);\n\n    for (int i = s.length(); i<0; i++) {\n        cout << \n    }\n  \n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746195509295",
      "timestamp": "Fri, 02 May 2025 14:18:29 GMT",
      "version": 2
    },
    {
      "__v": 0,
      "_id": "6814d4f056c3a8f3394c97bc",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    int vowel=0;\n    getline (cin, s);\n\n    for (int i = s.length(); i<0; i++) {\n        cout << s[i];\n    }\n  \n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746195696741",
      "timestamp": "Fri, 02 May 2025 14:21:36 GMT",
      "version": 3
    },
    {
      "__v": 0,
      "_id": "6814d4ff56c3a8f3394c97bf",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    int vowel=0;\n    getline (cin, s);\n\n    for (int i = s.length(); i<0; i--) {\n        cout << s[i];\n    }\n  \n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746195711140",
      "timestamp": "Fri, 02 May 2025 14:21:51 GMT",
      "version": 4
    },
    {
      "__v": 0,
      "_id": "6814d51d56c3a8f3394c97c4",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    int vowel=0;\n    getline (cin, s);\n\n    for (int i = s.length(); i>0; i--) {\n        cout << s[i];\n    }\n  \n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746195741620",
      "timestamp": "Fri, 02 May 2025 14:22:21 GMT",
      "version": 5
    },
    {
      "__v": 0,
      "_id": "6814d53556c3a8f3394c97ce",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    getline (cin, s);\n\n    for (int i = s.length(); i>0; i--) {\n        cout << s[i];\n    }\n  \n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746195765091",
      "timestamp": "Fri, 02 May 2025 14:22:45 GMT",
      "version": 6
    },
    {
      "__v": 0,
      "_id": "6814d57156c3a8f3394c97db",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    getline (cin, s);\n\n    for (int i = s.length(); i>=0; i--) {\n        cout << s[i];\n    }\n  \n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746195825322",
      "timestamp": "Fri, 02 May 2025 14:23:45 GMT",
      "version": 7
    },
    {
      "__v": 0,
      "_id": "6814d59256c3a8f3394c97e4",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    getline (cin, s);\n\n    for (int i = s.length(); i>=0; i--) {\n        if \n    }\n  \n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746195858676",
      "timestamp": "Fri, 02 May 2025 14:24:18 GMT",
      "version": 8
    },
    {
      "__v": 0,
      "_id": "6814d5af56c3a8f3394c97e7",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    getline (cin, s);\n\n    for (int i = s.length(); i>=0; i--) {\n        if s[i] = \n    }\n  \n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746195887016",
      "timestamp": "Fri, 02 May 2025 14:24:47 GMT",
      "version": 9
    },
    {
      "__v": 0,
      "_id": "6814d65f56c3a8f3394c97f4",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    getline (cin, s);\n\n/* \n1. read the string\n2. get first letter and last letter and compare\n3. advance to the next letters and compare\n4. once in the middle, stop.\n*/\n\n    for (int i=0; i<=s.length()/2; i++) {\n        \n\n\n    }\n\n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746196063716",
      "timestamp": "Fri, 02 May 2025 14:27:43 GMT",
      "version": 10
    },
    {
      "__v": 0,
      "_id": "6814d6b156c3a8f3394c9801",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    getline (cin, s);\n\n/* \n1. read the string\n2. get first letter and last letter and compare\n3. advance to the next letters and compare\n4. once in the middle, stop.\n*/\n\n    for (int i=0; i<=s.length()/2; i++) {\n        if (s[i] != s[length()-1]) {\n            cout << \"Not a palindrome\";\n            return 0;\n        }\n\n        else {\n            cout << \"Palindrome\";\n        }\n\n    }\n\n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746196145589",
      "timestamp": "Fri, 02 May 2025 14:29:05 GMT",
      "version": 11
    },
    {
      "__v": 0,
      "_id": "6814d6de56c3a8f3394c9805",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    getline (cin, s);\n\n/* \n1. read the string\n2. get first letter and last letter and compare\n3. advance to the next letters and compare\n4. once in the middle, stop.\n*/\n\n    for (int i=0; i<=s.length()/2; i++) {\n        if (s[i] != s[s.length()-1]) {\n            cout << \"Not a palindrome\";\n            return 0;\n        }\n\n        else {\n            cout << \"Palindrome\";\n        }\n\n    }\n\n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746196190890",
      "timestamp": "Fri, 02 May 2025 14:29:50 GMT",
      "version": 12
    },
    {
      "__v": 0,
      "_id": "6814d70356c3a8f3394c9808",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    getline (cin, s);\n\n/* \n1. read the string\n2. get first letter and last letter and compare\n3. advance to the next letters and compare\n4. once in the middle, stop.\n*/\n\n    for (int i=0; i<=s.length()/2 -1; i++) {\n        if (s[i] != s[s.length()-1]) {\n            cout << \"Not a palindrome\";\n            return 0;\n        }\n\n        else {\n            cout << \"Palindrome\";\n        }\n\n    }\n\n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746196227221",
      "timestamp": "Fri, 02 May 2025 14:30:27 GMT",
      "version": 13
    },
    {
      "__v": 0,
      "_id": "6814d71356c3a8f3394c980b",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    getline (cin, s);\n\n/* \n1. read the string\n2. get first letter and last letter and compare\n3. advance to the next letters and compare\n4. once in the middle, stop.\n*/\n\n    for (int i=0; i<=(s.length()/2)-1; i++) {\n        if (s[i] != s[s.length()-1]) {\n            cout << \"Not a palindrome\";\n            return 0;\n        }\n\n        else {\n            cout << \"Palindrome\";\n        }\n\n    }\n\n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746196243866",
      "timestamp": "Fri, 02 May 2025 14:30:43 GMT",
      "version": 14
    },
    {
      "__v": 0,
      "_id": "6814d73056c3a8f3394c980e",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    getline (cin, s);\n\n/* \n1. read the string\n2. get first letter and last letter and compare\n3. advance to the next letters and compare\n4. once in the middle, stop.\n*/\n\n    for (int i=0; i<=(s.length()/2)-1; i++) {\n        if (s[i] != s[s.length()-1]) {\n            cout << \"Not a palindrome\";\n            return 0;\n        }\n\n        else {\n            cout << \"Palindrome\";\n            return 0;\n        }\n\n    }\n\n    return 0;\n}",
      "learner_id": "6811b20988362505107a60be",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746196272069",
      "timestamp": "Fri, 02 May 2025 14:31:12 GMT",
      "version": 15
    }
  ],
  "success": true
}