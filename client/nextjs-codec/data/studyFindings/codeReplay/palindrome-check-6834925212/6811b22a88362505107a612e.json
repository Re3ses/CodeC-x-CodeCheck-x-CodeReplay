{
  "formatted_snapshots": [
    {
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    // Your code here\n    return 0;\n}",
      "learner_id": "6811b22a88362505107a612e",
      "submission_id": "68180bed0bffcfa5b5aa1a13",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s;\n    cin>>s;\n\n    bool isPalindrome=true;\n\n    for (int i=0; i<)\n    return 0;\n}",
      "learner_id": "6811b22a88362505107a612e",
      "submission_id": "6818126a968bffa39214c637",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s;\n    cin>>s;\n\n    bool isPalindrome=true;\n    int length = ;\n\n    for (int i=0; i<length; ++i){\n        if (s[i] !=s[length-1-i]){\n            isPalindrom\n        }\n    }\n    return 0;\n}",
      "learner_id": "6811b22a88362505107a612e",
      "submission_id": "681812c1968bffa39214c64d",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s;\n    cin>>s;\n\n    bool isPalindrome=true;\n    int length = ;\n\n    for (int i=0; i<length; ++i){\n        if (s[i] !=s[length-1-i]){\n            isPalindrome = false;\n            break;\n        }\n    }\n\n    if(isPalindrome)\n        cout<<\"Palindrome\"<<endl;\n    else\n        cout<< \n    return 0;\n}",
      "learner_id": "6811b22a88362505107a612e",
      "submission_id": "6818146d968bffa39214c66b",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s;\n    cin>>s;\n\n    bool isPalindrome=true;\n    int length = ;\n\n    for (int i=0; i<length; ++i){\n        if (s[i] !=s[length-1-i]){\n            isPalindrome = false;\n            break;\n        }\n    }\n\n    if(isPalindrome)\n        cout<<\"Palindrome\"<<endl;\n    else\n        cout<<\"Not a palindrome\"<<endl; \n    return 0;\n}",
      "learner_id": "6811b22a88362505107a612e",
      "submission_id": "68181488968bffa39214c66f",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s;\n    cin>>s;\n\n    bool isPalindrome=true;\n    int length = s.length;\n\n    for (int i=0; i<length; ++i){\n        if (s[i] !=s[length-1-i]){\n            isPalindrome = false;\n            break;\n        }\n    }\n\n    if(isPalindrome)\n        cout<<\"Palindrome\"<<endl;\n    else\n        cout<<\"Not a palindrome\"<<endl; \n    return 0;\n}",
      "learner_id": "6811b22a88362505107a612e",
      "submission_id": "6818149c968bffa39214c672",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    cin>>s;\n\n    bool isPalindrome=true;\n    int length = s.length;\n\n    for (int i=0; i<length; ++i){\n        if (s[i] !=s[length-1-i]){\n            isPalindrome = false;\n            break;\n        }\n    }\n\n    if(isPalindrome)\n        cout<<\"Palindrome\"<<endl;\n    else\n        cout<<\"Not a palindrome\"<<endl; \n    return 0;\n}",
      "learner_id": "6811b22a88362505107a612e",
      "submission_id": "681814b6968bffa39214c675",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    cin>>s;\n\n    bool isPalindrome=true;\n    int length = s.length;\n\n    for (int i=0; i<length/2; ++i){\n        if (s[i] !=s[length-1-i]){\n            isPalindrome = false;\n            break;\n        }\n    }\n\n    if(isPalindrome)\n        cout<<\"Palindrome\"<<endl;\n    else\n        cout<<\"Not a palindrome\"<<endl; \n    return 0;\n}",
      "learner_id": "6811b22a88362505107a612e",
      "submission_id": "681814c9968bffa39214c678",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    cin>>s;\n\n    bool isPalindrome=true;\n    int leng = s.length;\n\n    for (int i=0; i<leng/2; ++i){\n        if (s[i] !=s[leng-1-i]){\n            isPalindrome = false;\n            break;\n        }\n    }\n\n    if(isPalindrome)\n        cout<<\"Palindrome\"<<endl;\n    else\n        cout<<\"Not a palindrome\"<<endl; \n    return 0;\n}",
      "learner_id": "6811b22a88362505107a612e",
      "submission_id": "681814e8968bffa39214c67b",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    cin>>s;\n\n    bool isPalindrome=true;\n    int leng = s.length();\n\n    for (int i=0; i<leng/2; ++i){\n        if (s[i] !=s[leng-1-i]){\n            isPalindrome = false;\n            break;\n        }\n    }\n\n    if(isPalindrome)\n        cout<<\"Palindrome\"<<endl;\n    else\n        cout<<\"Not a palindrome\"<<endl; \n    return 0;\n}",
      "learner_id": "6811b22a88362505107a612e",
      "submission_id": "681814fe968bffa39214c67e",
      "timestamp": ""
    }
  ],
  "sequentialSimilarities": [
    {
      "codebert_score": 61,
      "from_index": 0,
      "learner_id": "6811b22a88362505107a612e",
      "similarity": 61,
      "to_index": 1
    },
    {
      "codebert_score": 53,
      "from_index": 1,
      "learner_id": "6811b22a88362505107a612e",
      "similarity": 53,
      "to_index": 2
    },
    {
      "codebert_score": 73,
      "from_index": 2,
      "learner_id": "6811b22a88362505107a612e",
      "similarity": 73,
      "to_index": 3
    },
    {
      "codebert_score": 80,
      "from_index": 3,
      "learner_id": "6811b22a88362505107a612e",
      "similarity": 80,
      "to_index": 4
    },
    {
      "codebert_score": 83,
      "from_index": 4,
      "learner_id": "6811b22a88362505107a612e",
      "similarity": 83,
      "to_index": 5
    },
    {
      "codebert_score": 88,
      "from_index": 5,
      "learner_id": "6811b22a88362505107a612e",
      "similarity": 88,
      "to_index": 6
    },
    {
      "codebert_score": 89,
      "from_index": 6,
      "learner_id": "6811b22a88362505107a612e",
      "similarity": 89,
      "to_index": 7
    },
    {
      "codebert_score": 89,
      "from_index": 7,
      "learner_id": "6811b22a88362505107a612e",
      "similarity": 89,
      "to_index": 8
    },
    {
      "codebert_score": 87,
      "from_index": 8,
      "learner_id": "6811b22a88362505107a612e",
      "similarity": 87,
      "to_index": 9
    }
  ],
  "snapshots": [
    {
      "__v": 0,
      "_id": "68180bed0bffcfa5b5aa1a13",
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    // Your code here\n    return 0;\n}",
      "learner_id": "6811b22a88362505107a612e",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746406381204",
      "timestamp": "Mon, 05 May 2025 00:53:01 GMT",
      "version": 1
    },
    {
      "__v": 0,
      "_id": "6818126a968bffa39214c637",
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s;\n    cin>>s;\n\n    bool isPalindrome=true;\n\n    for (int i=0; i<)\n    return 0;\n}",
      "learner_id": "6811b22a88362505107a612e",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746408042199",
      "timestamp": "Mon, 05 May 2025 01:20:42 GMT",
      "version": 2
    },
    {
      "__v": 0,
      "_id": "681812c1968bffa39214c64d",
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s;\n    cin>>s;\n\n    bool isPalindrome=true;\n    int length = ;\n\n    for (int i=0; i<length; ++i){\n        if (s[i] !=s[length-1-i]){\n            isPalindrom\n        }\n    }\n    return 0;\n}",
      "learner_id": "6811b22a88362505107a612e",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746408129437",
      "timestamp": "Mon, 05 May 2025 01:22:09 GMT",
      "version": 3
    },
    {
      "__v": 0,
      "_id": "6818146d968bffa39214c66b",
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s;\n    cin>>s;\n\n    bool isPalindrome=true;\n    int length = ;\n\n    for (int i=0; i<length; ++i){\n        if (s[i] !=s[length-1-i]){\n            isPalindrome = false;\n            break;\n        }\n    }\n\n    if(isPalindrome)\n        cout<<\"Palindrome\"<<endl;\n    else\n        cout<< \n    return 0;\n}",
      "learner_id": "6811b22a88362505107a612e",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746408556928",
      "timestamp": "Mon, 05 May 2025 01:29:17 GMT",
      "version": 4
    },
    {
      "__v": 0,
      "_id": "68181488968bffa39214c66f",
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s;\n    cin>>s;\n\n    bool isPalindrome=true;\n    int length = ;\n\n    for (int i=0; i<length; ++i){\n        if (s[i] !=s[length-1-i]){\n            isPalindrome = false;\n            break;\n        }\n    }\n\n    if(isPalindrome)\n        cout<<\"Palindrome\"<<endl;\n    else\n        cout<<\"Not a palindrome\"<<endl; \n    return 0;\n}",
      "learner_id": "6811b22a88362505107a612e",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746408583896",
      "timestamp": "Mon, 05 May 2025 01:29:44 GMT",
      "version": 5
    },
    {
      "__v": 0,
      "_id": "6818149c968bffa39214c672",
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s;\n    cin>>s;\n\n    bool isPalindrome=true;\n    int length = s.length;\n\n    for (int i=0; i<length; ++i){\n        if (s[i] !=s[length-1-i]){\n            isPalindrome = false;\n            break;\n        }\n    }\n\n    if(isPalindrome)\n        cout<<\"Palindrome\"<<endl;\n    else\n        cout<<\"Not a palindrome\"<<endl; \n    return 0;\n}",
      "learner_id": "6811b22a88362505107a612e",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746408603714",
      "timestamp": "Mon, 05 May 2025 01:30:04 GMT",
      "version": 6
    },
    {
      "__v": 0,
      "_id": "681814b6968bffa39214c675",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    cin>>s;\n\n    bool isPalindrome=true;\n    int length = s.length;\n\n    for (int i=0; i<length; ++i){\n        if (s[i] !=s[length-1-i]){\n            isPalindrome = false;\n            break;\n        }\n    }\n\n    if(isPalindrome)\n        cout<<\"Palindrome\"<<endl;\n    else\n        cout<<\"Not a palindrome\"<<endl; \n    return 0;\n}",
      "learner_id": "6811b22a88362505107a612e",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746408630306",
      "timestamp": "Mon, 05 May 2025 01:30:30 GMT",
      "version": 7
    },
    {
      "__v": 0,
      "_id": "681814c9968bffa39214c678",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    cin>>s;\n\n    bool isPalindrome=true;\n    int length = s.length;\n\n    for (int i=0; i<length/2; ++i){\n        if (s[i] !=s[length-1-i]){\n            isPalindrome = false;\n            break;\n        }\n    }\n\n    if(isPalindrome)\n        cout<<\"Palindrome\"<<endl;\n    else\n        cout<<\"Not a palindrome\"<<endl; \n    return 0;\n}",
      "learner_id": "6811b22a88362505107a612e",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746408649329",
      "timestamp": "Mon, 05 May 2025 01:30:49 GMT",
      "version": 8
    },
    {
      "__v": 0,
      "_id": "681814e8968bffa39214c67b",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    cin>>s;\n\n    bool isPalindrome=true;\n    int leng = s.length;\n\n    for (int i=0; i<leng/2; ++i){\n        if (s[i] !=s[leng-1-i]){\n            isPalindrome = false;\n            break;\n        }\n    }\n\n    if(isPalindrome)\n        cout<<\"Palindrome\"<<endl;\n    else\n        cout<<\"Not a palindrome\"<<endl; \n    return 0;\n}",
      "learner_id": "6811b22a88362505107a612e",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746408680542",
      "timestamp": "Mon, 05 May 2025 01:31:20 GMT",
      "version": 9
    },
    {
      "__v": 0,
      "_id": "681814fe968bffa39214c67e",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s;\n    cin>>s;\n\n    bool isPalindrome=true;\n    int leng = s.length();\n\n    for (int i=0; i<leng/2; ++i){\n        if (s[i] !=s[leng-1-i]){\n            isPalindrome = false;\n            break;\n        }\n    }\n\n    if(isPalindrome)\n        cout<<\"Palindrome\"<<endl;\n    else\n        cout<<\"Not a palindrome\"<<endl; \n    return 0;\n}",
      "learner_id": "6811b22a88362505107a612e",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746408702587",
      "timestamp": "Mon, 05 May 2025 01:31:42 GMT",
      "version": 10
    }
  ],
  "success": true
}