{
  "formatted_snapshots": [
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    cin>>s;\n    s2=s1;\n    for (int i=0;i<s1.size();i++){\n        if ( s1[i]!=s2[i]){\n            cout<<\"Not a Palindrome\";\n            return 0;\n        }\n        else {\n            int count = 1;\n            break;\n        }\n    }\n    if (count==1){\n        cout<<\"Not a Palindrome\";\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "submission_id": "6817e1a2ebd1827a1d57005a",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    int count;\n    cin>>s1;\n    s2=s1;\n    for (int i=0,j=s2.size()-1;i<s1.size();i++){\n        if ( s1[i] != s2[j]){\n            cout<<\"Not a palindrome\";\n            return 0;\n        }\n        else {\n            count = 1;\n            break;\n        }\n    }\n    if (count==1){\n        cout<<\"Palindrome\";\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "submission_id": "6817e3b0ebd1827a1d570074",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    int count;\n    cin>>s1;\n    s2=s1;\n    for (int i=0,j=s2.size()-1;i<s1.size();i++){\n        if ( s1[i] != s2[j]){\n            cout<<\"Not a Palindrome\";\n            return 0;\n        }\n        else {\n            count = 1;\n            break;\n        }\n    }\n    if (count==1){\n        cout<<\"Palindrome\";\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "submission_id": "6817e399ebd1827a1d570071",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    int count;\n    cin>>s1;\n    s2=s1;\n    for (int i=0,j=s2.size()-1;i<s1.size();i++){\n        if ( s1[i] != s2[i]){\n            cout<<\"Not a Palindrome\";\n            return 0;\n        }\n        else {\n            count = 1;\n            break;\n        }\n    }\n    if (count==1){\n        cout<<\"Palindrome\";\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "submission_id": "6817e36cebd1827a1d57006e",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    int count;\n    cin>>s1;\n    s2=s1;\n    for (int i=0;i<s1.size();i++){\n        if ( s1[i] != s2[i]){\n            cout<<\"Not a Palindrome\";\n            return 0;\n        }\n        else {\n            count = 1;\n            break;\n        }\n    }\n    if (count==1){\n        cout<<\"Palindrome\";\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "submission_id": "6817e305ebd1827a1d570069",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    int count;\n    cin>>s1;\n    s2=s1;\n    for (int i=0;i<s1.size();i++){\n        if ( s1[i] != s2[i]){\n            cout<<\"Not a Palindrome\";\n            return 0;\n        }\n        else {\n            count = 1;\n            break;\n        }\n    }\n    if (count==1){\n        cout<<\"Not a palindrome\";\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "submission_id": "6817e1eeebd1827a1d570066",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    int count;\n    cin>>s1;\n    s2=s1;\n    for (int i=0;i<s1.size();i++){\n        if ( s1[i]!=s2[i]){\n            cout<<\"Not a Palindrome\";\n            return 0;\n        }\n        else {\n            count = 1;\n            break;\n        }\n    }\n    if (count==1){\n        cout<<\"Not a palindrome\";\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "submission_id": "6817e1d2ebd1827a1d570063",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    int count;\n    cin>>s1;\n    s2=s1;\n    for (int i=0;i<s1.size();i++){\n        if ( s1[i]!=s2[i]){\n            cout<<\"Not a Palindrome\";\n            return 0;\n        }\n        else {\n            count = 1;\n            break;\n        }\n    }\n    if (count==1){\n        cout<<\"Not a Palindrome\";\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "submission_id": "6817e1baebd1827a1d570060",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    int count;\n    cin>>s;\n    s2=s1;\n    for (int i=0;i<s1.size();i++){\n        if ( s1[i]!=s2[i]){\n            cout<<\"Not a Palindrome\";\n            return 0;\n        }\n        else {\n            count = 1;\n            break;\n        }\n    }\n    if (count==1){\n        cout<<\"Not a Palindrome\";\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "submission_id": "6817e1a9ebd1827a1d57005d",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    // Your code here\n    return 0;\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "submission_id": "6817e004ebd1827a1d57003c",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    cin>>s;\n    s2=s1;\n    for (int i=0;i<s1.size();i++){\n        if (if s1[i]!=s2[i]){\n            cout<<\"Not a Palindrome\";\n            return 0;\n        }\n        else {\n            int count = 1;\n            break;\n        }\n    }\n    if (count==1){\n        cout<<\"Not a Palindrome\";\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "submission_id": "6817e196ebd1827a1d570057",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    cin>>s;\n    s2=s1;\n    for (int i=0;i<s1.size();i++){\n        if (if s1[i]!=s2[i]){\n            cout<<\"Not a Palindrome\";\n            return 0;\n        }\n        else {\n            int count = 1;\n            break;\n        }\n    }\n    if (count==1){\n        cout<<\"Not a Palindrome\";\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "submission_id": "6817e172ebd1827a1d570054",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    cin>>s;\n    s2=s1;\n    for (int i=0;i<s1.size();i++){\n        if (if s1[i]!=s2[i]){\n            cout<<\"Not a Palindrome\";\n            return 0;\n        }\n        else {\n            int count = 1;\n        }\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "submission_id": "6817e15bebd1827a1d570051",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    cin>>s;\n    s2=s1;\n    for (int i=0;i<s1.size();i++){\n        if (if s1[i]!=s2[i]){\n            cout<<\"\"\n        }\n\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "submission_id": "6817e130ebd1827a1d57004e",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    cin>>s;\n    s2=s1;\n    for (int i=0;i<s1.size();i++){\n        if ()\n\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "submission_id": "6817e10aebd1827a1d57004b",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    cin>>s;\n    for (int i=0;i<s1.size();i++){\n        \n\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "submission_id": "6817e09aebd1827a1d570047",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    cin>>s;\n    for (int i=0;i<s1.size)\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "submission_id": "6817e063ebd1827a1d570043",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    cin>>s;\n    for (int i=0;i)\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "submission_id": "6817e04bebd1827a1d570040",
      "timestamp": ""
    }
  ],
  "sequentialSimilarities": [
    {
      "codebert_score": 79,
      "from_index": 0,
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "similarity": 79,
      "to_index": 1
    },
    {
      "codebert_score": 94,
      "from_index": 1,
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "similarity": 94,
      "to_index": 2
    },
    {
      "codebert_score": 92,
      "from_index": 2,
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "similarity": 92,
      "to_index": 3
    },
    {
      "codebert_score": 82,
      "from_index": 3,
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "similarity": 82,
      "to_index": 4
    },
    {
      "codebert_score": 90,
      "from_index": 4,
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "similarity": 90,
      "to_index": 5
    },
    {
      "codebert_score": 92,
      "from_index": 5,
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "similarity": 92,
      "to_index": 6
    },
    {
      "codebert_score": 95,
      "from_index": 6,
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "similarity": 95,
      "to_index": 7
    },
    {
      "codebert_score": 92,
      "from_index": 7,
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "similarity": 92,
      "to_index": 8
    },
    {
      "codebert_score": 44,
      "from_index": 8,
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "similarity": 44,
      "to_index": 9
    },
    {
      "codebert_score": 47,
      "from_index": 9,
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "similarity": 47,
      "to_index": 10
    },
    {
      "codebert_score": 82,
      "from_index": 10,
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "similarity": 82,
      "to_index": 11
    },
    {
      "codebert_score": 81,
      "from_index": 11,
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "similarity": 81,
      "to_index": 12
    },
    {
      "codebert_score": 78,
      "from_index": 12,
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "similarity": 78,
      "to_index": 13
    },
    {
      "codebert_score": 68,
      "from_index": 13,
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "similarity": 68,
      "to_index": 14
    },
    {
      "codebert_score": 80,
      "from_index": 14,
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "similarity": 80,
      "to_index": 15
    },
    {
      "codebert_score": 68,
      "from_index": 15,
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "similarity": 68,
      "to_index": 16
    },
    {
      "codebert_score": 81,
      "from_index": 16,
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "similarity": 81,
      "to_index": 17
    }
  ],
  "snapshots": [
    {
      "__v": 0,
      "_id": "6817e1a2ebd1827a1d57005a",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    cin>>s;\n    s2=s1;\n    for (int i=0;i<s1.size();i++){\n        if ( s1[i]!=s2[i]){\n            cout<<\"Not a Palindrome\";\n            return 0;\n        }\n        else {\n            int count = 1;\n            break;\n        }\n    }\n    if (count==1){\n        cout<<\"Not a Palindrome\";\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746395553650",
      "timestamp": "Sun, 04 May 2025 21:52:34 GMT",
      "version": 10
    },
    {
      "__v": 0,
      "_id": "6817e3b0ebd1827a1d570074",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    int count;\n    cin>>s1;\n    s2=s1;\n    for (int i=0,j=s2.size()-1;i<s1.size();i++){\n        if ( s1[i] != s2[j]){\n            cout<<\"Not a palindrome\";\n            return 0;\n        }\n        else {\n            count = 1;\n            break;\n        }\n    }\n    if (count==1){\n        cout<<\"Palindrome\";\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746396080123",
      "timestamp": "Sun, 04 May 2025 22:01:20 GMT",
      "version": 18
    },
    {
      "__v": 0,
      "_id": "6817e399ebd1827a1d570071",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    int count;\n    cin>>s1;\n    s2=s1;\n    for (int i=0,j=s2.size()-1;i<s1.size();i++){\n        if ( s1[i] != s2[j]){\n            cout<<\"Not a Palindrome\";\n            return 0;\n        }\n        else {\n            count = 1;\n            break;\n        }\n    }\n    if (count==1){\n        cout<<\"Palindrome\";\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746396057397",
      "timestamp": "Sun, 04 May 2025 22:00:57 GMT",
      "version": 17
    },
    {
      "__v": 0,
      "_id": "6817e36cebd1827a1d57006e",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    int count;\n    cin>>s1;\n    s2=s1;\n    for (int i=0,j=s2.size()-1;i<s1.size();i++){\n        if ( s1[i] != s2[i]){\n            cout<<\"Not a Palindrome\";\n            return 0;\n        }\n        else {\n            count = 1;\n            break;\n        }\n    }\n    if (count==1){\n        cout<<\"Palindrome\";\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746396012489",
      "timestamp": "Sun, 04 May 2025 22:00:12 GMT",
      "version": 16
    },
    {
      "__v": 0,
      "_id": "6817e305ebd1827a1d570069",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    int count;\n    cin>>s1;\n    s2=s1;\n    for (int i=0;i<s1.size();i++){\n        if ( s1[i] != s2[i]){\n            cout<<\"Not a Palindrome\";\n            return 0;\n        }\n        else {\n            count = 1;\n            break;\n        }\n    }\n    if (count==1){\n        cout<<\"Palindrome\";\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746395909591",
      "timestamp": "Sun, 04 May 2025 21:58:29 GMT",
      "version": 15
    },
    {
      "__v": 0,
      "_id": "6817e1eeebd1827a1d570066",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    int count;\n    cin>>s1;\n    s2=s1;\n    for (int i=0;i<s1.size();i++){\n        if ( s1[i] != s2[i]){\n            cout<<\"Not a Palindrome\";\n            return 0;\n        }\n        else {\n            count = 1;\n            break;\n        }\n    }\n    if (count==1){\n        cout<<\"Not a palindrome\";\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746395629696",
      "timestamp": "Sun, 04 May 2025 21:53:50 GMT",
      "version": 14
    },
    {
      "__v": 0,
      "_id": "6817e1d2ebd1827a1d570063",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    int count;\n    cin>>s1;\n    s2=s1;\n    for (int i=0;i<s1.size();i++){\n        if ( s1[i]!=s2[i]){\n            cout<<\"Not a Palindrome\";\n            return 0;\n        }\n        else {\n            count = 1;\n            break;\n        }\n    }\n    if (count==1){\n        cout<<\"Not a palindrome\";\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746395602559",
      "timestamp": "Sun, 04 May 2025 21:53:22 GMT",
      "version": 13
    },
    {
      "__v": 0,
      "_id": "6817e1baebd1827a1d570060",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    int count;\n    cin>>s1;\n    s2=s1;\n    for (int i=0;i<s1.size();i++){\n        if ( s1[i]!=s2[i]){\n            cout<<\"Not a Palindrome\";\n            return 0;\n        }\n        else {\n            count = 1;\n            break;\n        }\n    }\n    if (count==1){\n        cout<<\"Not a Palindrome\";\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746395578160",
      "timestamp": "Sun, 04 May 2025 21:52:58 GMT",
      "version": 12
    },
    {
      "__v": 0,
      "_id": "6817e1a9ebd1827a1d57005d",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    int count;\n    cin>>s;\n    s2=s1;\n    for (int i=0;i<s1.size();i++){\n        if ( s1[i]!=s2[i]){\n            cout<<\"Not a Palindrome\";\n            return 0;\n        }\n        else {\n            count = 1;\n            break;\n        }\n    }\n    if (count==1){\n        cout<<\"Not a Palindrome\";\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746395561112",
      "timestamp": "Sun, 04 May 2025 21:52:41 GMT",
      "version": 11
    },
    {
      "__v": 0,
      "_id": "6817e004ebd1827a1d57003c",
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    // Your code here\n    return 0;\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746395140228",
      "timestamp": "Sun, 04 May 2025 21:45:40 GMT",
      "version": 1
    },
    {
      "__v": 0,
      "_id": "6817e196ebd1827a1d570057",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    cin>>s;\n    s2=s1;\n    for (int i=0;i<s1.size();i++){\n        if (if s1[i]!=s2[i]){\n            cout<<\"Not a Palindrome\";\n            return 0;\n        }\n        else {\n            int count = 1;\n            break;\n        }\n    }\n    if (count==1){\n        cout<<\"Not a Palindrome\";\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746395541745",
      "timestamp": "Sun, 04 May 2025 21:52:22 GMT",
      "version": 9
    },
    {
      "__v": 0,
      "_id": "6817e172ebd1827a1d570054",
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    cin>>s;\n    s2=s1;\n    for (int i=0;i<s1.size();i++){\n        if (if s1[i]!=s2[i]){\n            cout<<\"Not a Palindrome\";\n            return 0;\n        }\n        else {\n            int count = 1;\n            break;\n        }\n    }\n    if (count==1){\n        cout<<\"Not a Palindrome\";\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746395505848",
      "timestamp": "Sun, 04 May 2025 21:51:46 GMT",
      "version": 8
    },
    {
      "__v": 0,
      "_id": "6817e15bebd1827a1d570051",
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    cin>>s;\n    s2=s1;\n    for (int i=0;i<s1.size();i++){\n        if (if s1[i]!=s2[i]){\n            cout<<\"Not a Palindrome\";\n            return 0;\n        }\n        else {\n            int count = 1;\n        }\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746395482698",
      "timestamp": "Sun, 04 May 2025 21:51:23 GMT",
      "version": 7
    },
    {
      "__v": 0,
      "_id": "6817e130ebd1827a1d57004e",
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    cin>>s;\n    s2=s1;\n    for (int i=0;i<s1.size();i++){\n        if (if s1[i]!=s2[i]){\n            cout<<\"\"\n        }\n\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746395439986",
      "timestamp": "Sun, 04 May 2025 21:50:40 GMT",
      "version": 6
    },
    {
      "__v": 0,
      "_id": "6817e10aebd1827a1d57004b",
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    cin>>s;\n    s2=s1;\n    for (int i=0;i<s1.size();i++){\n        if ()\n\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746395401893",
      "timestamp": "Sun, 04 May 2025 21:50:02 GMT",
      "version": 5
    },
    {
      "__v": 0,
      "_id": "6817e09aebd1827a1d570047",
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    cin>>s;\n    for (int i=0;i<s1.size();i++){\n        \n\n    }\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746395289629",
      "timestamp": "Sun, 04 May 2025 21:48:10 GMT",
      "version": 4
    },
    {
      "__v": 0,
      "_id": "6817e063ebd1827a1d570043",
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    cin>>s;\n    for (int i=0;i<s1.size)\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746395235175",
      "timestamp": "Sun, 04 May 2025 21:47:15 GMT",
      "version": 3
    },
    {
      "__v": 0,
      "_id": "6817e04bebd1827a1d570040",
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    string s1,s2;\n    cin>>s;\n    for (int i=0;i)\n}",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746395210919",
      "timestamp": "Sun, 04 May 2025 21:46:51 GMT",
      "version": 2
    }
  ],
  "success": true
}