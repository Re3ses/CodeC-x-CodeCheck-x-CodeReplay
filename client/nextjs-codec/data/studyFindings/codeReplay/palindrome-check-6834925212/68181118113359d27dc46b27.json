{
  "formatted_snapshots": [
    {
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    // Your code here\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "submission_id": "681813da968bffa39214c664",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Your code here\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "submission_id": "6818141e968bffa39214c667",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs;\n\n    cin>>s;\n    for(int i; i<s.length(); i++)\n    \n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "submission_id": "68181651d8ea54c71d71c71a",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs;\n\n    cin>>s;\n    for(int i; i<s.length(); i--)\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "submission_id": "68181657d8ea54c71d71c71e",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs;\n\n    cin>>s;\n    for(int i= s.length(); i<; i--)\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "submission_id": "68181663d8ea54c71d71c722",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs;\n\n    cin>>s;\n    for(int i= s.length()-1; i<; i--)\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "submission_id": "6818166bd8ea54c71d71c727",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs;\n\n    cin>>s;\n    for(int i= s.length()-1; i>=0; i--){\n        revs = \n    }\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "submission_id": "6818167ad8ea54c71d71c72b",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs;\n\n    cin>>s;\n    for(int i= s.length()-1; i>=0; i--){\n        revs = revs+s\n    }\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "submission_id": "68181682d8ea54c71d71c730",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs;\n\n    cin>>s;\n    for(int i= s.length()-1; i>=0; i--){\n        revs = revs+s[i]\n    }\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "submission_id": "6818168ed8ea54c71d71c734",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs;\n\n    cin>>s;\n    for(int i= s.length()-1; i>=0; i--){\n        revs = revs+s[i];\n    }\n\n    if (s == revs){\n        cout<<\"Palindrome\";\n    } else {\n        cout<<\"Not a Palindrome\";\n    }\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "submission_id": "681816f4d8ea54c71d71c744",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs;\n\n    cin>>s;\n    for(int i= s.length()-1; i>=0; i--){\n        revs +=[i];\n    }\n\n    if (s == revs){\n        cout<<\"Palindrome\";\n    } else {\n        cout<<\"Not a Palindrome\";\n    }\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "submission_id": "6818173dd8ea54c71d71c74c",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs;\n\n    cin>>s;\n    for(int i= s.length()-1; i>=0; i--){\n        revs +=s[i];\n    }\n\n    if (s == revs){\n        cout<<\"Palindrome\";\n    } else {\n        cout<<\"Not a Palindrome\";\n    }\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "submission_id": "68181745d8ea54c71d71c750",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs;\n\n    cin>>s;\n    for(int i= s.length()-1; i>=0; i--){\n        revs +=s[i];\n    }\n\n    if (s == revs){\n        cout<<\"Palindrome\";\n    } else {\n        cout<<\"Not a Palindrome\";\n    }\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "submission_id": "68181746d8ea54c71d71c753",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs=\"\";\n\n    cin>>s;\n    for(int i= s.length()-1; i>=0; i--){\n        revs +=s[i];\n    }\n\n    if (s == revs){\n        cout<<\"Palindrome\";\n    } else {\n        cout<<\"Not a Palindrome\";\n    }\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "submission_id": "68181793d8ea54c71d71c75f",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs=\"\";\n\n    cin>>s;\n    for(int i= s.length()-1; i>=0; i--){\n        revs +=s[i];\n    }\n\n    if (s == revs){\n        cout<<\"Palindrome\";\n    } else {\n        cout<<\"Not a palindrome\";\n    }\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "submission_id": "681817acd8ea54c71d71c763",
      "timestamp": ""
    }
  ],
  "sequentialSimilarities": [
    {
      "codebert_score": 78,
      "from_index": 0,
      "learner_id": "68181118113359d27dc46b27",
      "similarity": 78,
      "to_index": 1
    },
    {
      "codebert_score": 63,
      "from_index": 1,
      "learner_id": "68181118113359d27dc46b27",
      "similarity": 63,
      "to_index": 2
    },
    {
      "codebert_score": 84,
      "from_index": 2,
      "learner_id": "68181118113359d27dc46b27",
      "similarity": 84,
      "to_index": 3
    },
    {
      "codebert_score": 87,
      "from_index": 3,
      "learner_id": "68181118113359d27dc46b27",
      "similarity": 87,
      "to_index": 4
    },
    {
      "codebert_score": 83,
      "from_index": 4,
      "learner_id": "68181118113359d27dc46b27",
      "similarity": 83,
      "to_index": 5
    },
    {
      "codebert_score": 77,
      "from_index": 5,
      "learner_id": "68181118113359d27dc46b27",
      "similarity": 77,
      "to_index": 6
    },
    {
      "codebert_score": 83,
      "from_index": 6,
      "learner_id": "68181118113359d27dc46b27",
      "similarity": 83,
      "to_index": 7
    },
    {
      "codebert_score": 86,
      "from_index": 7,
      "learner_id": "68181118113359d27dc46b27",
      "similarity": 86,
      "to_index": 8
    },
    {
      "codebert_score": 74,
      "from_index": 8,
      "learner_id": "68181118113359d27dc46b27",
      "similarity": 74,
      "to_index": 9
    },
    {
      "codebert_score": 87,
      "from_index": 9,
      "learner_id": "68181118113359d27dc46b27",
      "similarity": 87,
      "to_index": 10
    },
    {
      "codebert_score": 90,
      "from_index": 10,
      "learner_id": "68181118113359d27dc46b27",
      "similarity": 90,
      "to_index": 11
    },
    {
      "codebert_score": 99,
      "from_index": 11,
      "learner_id": "68181118113359d27dc46b27",
      "similarity": 99,
      "to_index": 12
    },
    {
      "codebert_score": 89,
      "from_index": 12,
      "learner_id": "68181118113359d27dc46b27",
      "similarity": 89,
      "to_index": 13
    },
    {
      "codebert_score": 92,
      "from_index": 13,
      "learner_id": "68181118113359d27dc46b27",
      "similarity": 92,
      "to_index": 14
    }
  ],
  "snapshots": [
    {
      "__v": 0,
      "_id": "681813da968bffa39214c664",
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    // Your code here\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746408411773",
      "timestamp": "Mon, 05 May 2025 01:26:50 GMT",
      "version": 1
    },
    {
      "__v": 0,
      "_id": "6818141e968bffa39214c667",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    // Your code here\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746408479264",
      "timestamp": "Mon, 05 May 2025 01:27:58 GMT",
      "version": 2
    },
    {
      "__v": 0,
      "_id": "68181651d8ea54c71d71c71a",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs;\n\n    cin>>s;\n    for(int i; i<s.length(); i++)\n    \n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746409043662",
      "timestamp": "Mon, 05 May 2025 01:37:21 GMT",
      "version": 3
    },
    {
      "__v": 0,
      "_id": "68181657d8ea54c71d71c71e",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs;\n\n    cin>>s;\n    for(int i; i<s.length(); i--)\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746409048930",
      "timestamp": "Mon, 05 May 2025 01:37:27 GMT",
      "version": 4
    },
    {
      "__v": 0,
      "_id": "68181663d8ea54c71d71c722",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs;\n\n    cin>>s;\n    for(int i= s.length(); i<; i--)\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746409061204",
      "timestamp": "Mon, 05 May 2025 01:37:39 GMT",
      "version": 5
    },
    {
      "__v": 0,
      "_id": "6818166bd8ea54c71d71c727",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs;\n\n    cin>>s;\n    for(int i= s.length()-1; i<; i--)\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746409069459",
      "timestamp": "Mon, 05 May 2025 01:37:47 GMT",
      "version": 6
    },
    {
      "__v": 0,
      "_id": "6818167ad8ea54c71d71c72b",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs;\n\n    cin>>s;\n    for(int i= s.length()-1; i>=0; i--){\n        revs = \n    }\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746409083755",
      "timestamp": "Mon, 05 May 2025 01:38:02 GMT",
      "version": 7
    },
    {
      "__v": 0,
      "_id": "68181682d8ea54c71d71c730",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs;\n\n    cin>>s;\n    for(int i= s.length()-1; i>=0; i--){\n        revs = revs+s\n    }\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746409091977",
      "timestamp": "Mon, 05 May 2025 01:38:10 GMT",
      "version": 8
    },
    {
      "__v": 0,
      "_id": "6818168ed8ea54c71d71c734",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs;\n\n    cin>>s;\n    for(int i= s.length()-1; i>=0; i--){\n        revs = revs+s[i]\n    }\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746409104261",
      "timestamp": "Mon, 05 May 2025 01:38:22 GMT",
      "version": 9
    },
    {
      "__v": 0,
      "_id": "681816f4d8ea54c71d71c744",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs;\n\n    cin>>s;\n    for(int i= s.length()-1; i>=0; i--){\n        revs = revs+s[i];\n    }\n\n    if (s == revs){\n        cout<<\"Palindrome\";\n    } else {\n        cout<<\"Not a Palindrome\";\n    }\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746409205870",
      "timestamp": "Mon, 05 May 2025 01:40:04 GMT",
      "version": 10
    },
    {
      "__v": 0,
      "_id": "6818173dd8ea54c71d71c74c",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs;\n\n    cin>>s;\n    for(int i= s.length()-1; i>=0; i--){\n        revs +=[i];\n    }\n\n    if (s == revs){\n        cout<<\"Palindrome\";\n    } else {\n        cout<<\"Not a Palindrome\";\n    }\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746409279651",
      "timestamp": "Mon, 05 May 2025 01:41:17 GMT",
      "version": 11
    },
    {
      "__v": 0,
      "_id": "68181745d8ea54c71d71c750",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs;\n\n    cin>>s;\n    for(int i= s.length()-1; i>=0; i--){\n        revs +=s[i];\n    }\n\n    if (s == revs){\n        cout<<\"Palindrome\";\n    } else {\n        cout<<\"Not a Palindrome\";\n    }\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746409287334",
      "timestamp": "Mon, 05 May 2025 01:41:25 GMT",
      "version": 12
    },
    {
      "__v": 0,
      "_id": "68181746d8ea54c71d71c753",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs;\n\n    cin>>s;\n    for(int i= s.length()-1; i>=0; i--){\n        revs +=s[i];\n    }\n\n    if (s == revs){\n        cout<<\"Palindrome\";\n    } else {\n        cout<<\"Not a Palindrome\";\n    }\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746409287996",
      "timestamp": "Mon, 05 May 2025 01:41:26 GMT",
      "version": 12
    },
    {
      "__v": 0,
      "_id": "68181793d8ea54c71d71c75f",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs=\"\";\n\n    cin>>s;\n    for(int i= s.length()-1; i>=0; i--){\n        revs +=s[i];\n    }\n\n    if (s == revs){\n        cout<<\"Palindrome\";\n    } else {\n        cout<<\"Not a Palindrome\";\n    }\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746409365683",
      "timestamp": "Mon, 05 May 2025 01:42:43 GMT",
      "version": 13
    },
    {
      "__v": 0,
      "_id": "681817acd8ea54c71d71c763",
      "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s, revs=\"\";\n\n    cin>>s;\n    for(int i= s.length()-1; i>=0; i--){\n        revs +=s[i];\n    }\n\n    if (s == revs){\n        cout<<\"Palindrome\";\n    } else {\n        cout<<\"Not a palindrome\";\n    }\n\n    return 0;\n}",
      "learner_id": "68181118113359d27dc46b27",
      "problemId": "palindrome-check-6834925212",
      "roomId": "comp-SmV70Mr-9X",
      "submissionId": "submission-1746409389672",
      "timestamp": "Mon, 05 May 2025 01:43:08 GMT",
      "version": 14
    }
  ],
  "success": true
}