{
  "formatted_snapshots": [
    {
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    // Your code here\n    return 0;\n}",
      "learner_id": "68150661a62d51ae3b4c6a35",
      "submission_id": "681507b92a2bfd6ab47427ab",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\n// User-defined function to convert Fahrenheit to Celsius\ndouble toCelsius(double fahrenheit) {\n    return (fahrenheit - 32) * 5 / 9;\n}\n\nint main() {\n    double F;\n    cin >> F;\n\n    double C = toCelsius(F);\n\n    cout << fixed << setprecision(2);\n    cout << F << \" F is \" << C << \" C\" << endl;\n\n    return 0;\n}\n",
      "learner_id": "68150661a62d51ae3b4c6a35",
      "submission_id": "681507ca2a2bfd6ab47427af",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\ndouble toCelsius(double fahrenheit) {\n    return (fahrenheit - 32) * 5.0 / 9.0;\n}\n\nint main() {\n    double F;\n    cin >> F;\n\n    double C = toCelsius(F);\n\n    cout << fixed << setprecision(2);\n    cout << F << \" F is \" << C << \" C\" << endl;\n\n    return 0;\n}\n",
      "learner_id": "68150661a62d51ae3b4c6a35",
      "submission_id": "681507efa46f8324363cbddd",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\ndouble toCelsius(double fahrenheit) {\n    return (fahrenheit - 32) * 5.0 / 9.0;\n}\n\nint main() {\n    double F;\n    cin >> F;\n\n    double C = toCelsius(F);\n\n    cout << fixed << setprecision(2);\n    cout << F << \" F is \" << C << \" C\" << endl;\n\n    return 0;\n}",
      "learner_id": "68150661a62d51ae3b4c6a35",
      "submission_id": "68150807a46f8324363cbde0",
      "timestamp": ""
    },
    {
      "code": "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\ndouble toCelsius(double fahrenheit) {\n    return (fahrenheit - 32) * 5.0 / 9.0;\n}\n\nint main() {\n    double F;\n    cin >> F;\n\n    double C = toCelsius(F);\n\n    cout << fixed << setprecision(0) << F << \" F is \";\n    cout << fixed << setprecision(2) << C << \" C\" << endl;\n\n    return 0;\n}",
      "learner_id": "68150661a62d51ae3b4c6a35",
      "submission_id": "68150826a46f8324363cbde4",
      "timestamp": ""
    }
  ],
  "sequentialSimilarities": [
    {
      "codebert_score": 50,
      "from_index": 0,
      "learner_id": "68150661a62d51ae3b4c6a35",
      "similarity": 50,
      "to_index": 1
    },
    {
      "codebert_score": 83,
      "from_index": 1,
      "learner_id": "68150661a62d51ae3b4c6a35",
      "similarity": 83,
      "to_index": 2
    },
    {
      "codebert_score": 99,
      "from_index": 2,
      "learner_id": "68150661a62d51ae3b4c6a35",
      "similarity": 99,
      "to_index": 3
    },
    {
      "codebert_score": 79,
      "from_index": 3,
      "learner_id": "68150661a62d51ae3b4c6a35",
      "similarity": 79,
      "to_index": 4
    }
  ],
  "snapshots": [
    {
      "__v": 0,
      "_id": "681507b92a2bfd6ab47427ab",
      "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    // Your code here\n    return 0;\n}",
      "learner_id": "68150661a62d51ae3b4c6a35",
      "problemId": "fahrenheit-to-celsius-converter-8133077604",
      "roomId": "comp-Dx7fgmm4GB",
      "submissionId": "submission-1746208695143",
      "timestamp": "Fri, 02 May 2025 17:58:17 GMT",
      "version": 1
    },
    {
      "__v": 0,
      "_id": "681507ca2a2bfd6ab47427af",
      "code": "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\n// User-defined function to convert Fahrenheit to Celsius\ndouble toCelsius(double fahrenheit) {\n    return (fahrenheit - 32) * 5 / 9;\n}\n\nint main() {\n    double F;\n    cin >> F;\n\n    double C = toCelsius(F);\n\n    cout << fixed << setprecision(2);\n    cout << F << \" F is \" << C << \" C\" << endl;\n\n    return 0;\n}\n",
      "learner_id": "68150661a62d51ae3b4c6a35",
      "problemId": "fahrenheit-to-celsius-converter-8133077604",
      "roomId": "comp-Dx7fgmm4GB",
      "submissionId": "submission-1746208712390",
      "timestamp": "Fri, 02 May 2025 17:58:34 GMT",
      "version": 2
    },
    {
      "__v": 0,
      "_id": "681507efa46f8324363cbddd",
      "code": "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\ndouble toCelsius(double fahrenheit) {\n    return (fahrenheit - 32) * 5.0 / 9.0;\n}\n\nint main() {\n    double F;\n    cin >> F;\n\n    double C = toCelsius(F);\n\n    cout << fixed << setprecision(2);\n    cout << F << \" F is \" << C << \" C\" << endl;\n\n    return 0;\n}\n",
      "learner_id": "68150661a62d51ae3b4c6a35",
      "problemId": "fahrenheit-to-celsius-converter-8133077604",
      "roomId": "comp-Dx7fgmm4GB",
      "submissionId": "submission-1746208747905",
      "timestamp": "Fri, 02 May 2025 17:59:11 GMT",
      "version": 3
    },
    {
      "__v": 0,
      "_id": "68150807a46f8324363cbde0",
      "code": "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\ndouble toCelsius(double fahrenheit) {\n    return (fahrenheit - 32) * 5.0 / 9.0;\n}\n\nint main() {\n    double F;\n    cin >> F;\n\n    double C = toCelsius(F);\n\n    cout << fixed << setprecision(2);\n    cout << F << \" F is \" << C << \" C\" << endl;\n\n    return 0;\n}",
      "learner_id": "68150661a62d51ae3b4c6a35",
      "problemId": "fahrenheit-to-celsius-converter-8133077604",
      "roomId": "comp-Dx7fgmm4GB",
      "submissionId": "submission-1746208773076",
      "timestamp": "Fri, 02 May 2025 17:59:35 GMT",
      "version": 4
    },
    {
      "__v": 0,
      "_id": "68150826a46f8324363cbde4",
      "code": "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\ndouble toCelsius(double fahrenheit) {\n    return (fahrenheit - 32) * 5.0 / 9.0;\n}\n\nint main() {\n    double F;\n    cin >> F;\n\n    double C = toCelsius(F);\n\n    cout << fixed << setprecision(0) << F << \" F is \";\n    cout << fixed << setprecision(2) << C << \" C\" << endl;\n\n    return 0;\n}",
      "learner_id": "68150661a62d51ae3b4c6a35",
      "problemId": "fahrenheit-to-celsius-converter-8133077604",
      "roomId": "comp-Dx7fgmm4GB",
      "submissionId": "submission-1746208804755",
      "timestamp": "Fri, 02 May 2025 18:00:06 GMT",
      "version": 5
    }
  ],
  "success": true
}