{
  "matrix": [
    [
      100,
      61,
      70,
      62,
      67,
      66,
      76,
      66,
      68,
      68,
      69,
      68,
      68,
      72,
      72,
      58
    ],
    [
      61,
      100,
      71,
      61,
      69,
      64,
      60,
      71,
      56,
      66,
      62,
      65,
      64,
      65,
      66,
      62
    ],
    [
      70,
      71,
      100,
      65,
      72,
      69,
      70,
      72,
      64,
      70,
      66,
      69,
      68,
      73,
      74,
      63
    ],
    [
      62,
      61,
      65,
      100,
      66,
      55,
      58,
      63,
      53,
      66,
      66,
      70,
      75,
      66,
      66,
      77
    ],
    [
      67,
      69,
      72,
      66,
      100,
      63,
      63,
      71,
      59,
      73,
      64,
      67,
      67,
      74,
      76,
      65
    ],
    [
      66,
      64,
      69,
      55,
      63,
      100,
      69,
      67,
      69,
      61,
      61,
      60,
      60,
      64,
      66,
      53
    ],
    [
      76,
      60,
      70,
      58,
      63,
      69,
      100,
      64,
      72,
      63,
      66,
      65,
      64,
      68,
      69,
      54
    ],
    [
      66,
      71,
      72,
      63,
      71,
      67,
      64,
      100,
      61,
      71,
      67,
      68,
      68,
      70,
      69,
      63
    ],
    [
      68,
      56,
      64,
      53,
      59,
      69,
      72,
      61,
      100,
      57,
      61,
      58,
      58,
      61,
      65,
      49
    ],
    [
      68,
      66,
      70,
      66,
      73,
      61,
      63,
      71,
      57,
      100,
      66,
      68,
      70,
      82,
      69,
      67
    ],
    [
      69,
      62,
      66,
      66,
      64,
      61,
      66,
      67,
      61,
      66,
      100,
      79,
      73,
      67,
      65,
      63
    ],
    [
      68,
      65,
      69,
      70,
      67,
      60,
      65,
      68,
      58,
      68,
      79,
      100,
      76,
      69,
      65,
      68
    ],
    [
      68,
      64,
      68,
      75,
      67,
      60,
      64,
      68,
      58,
      70,
      73,
      76,
      100,
      70,
      67,
      72
    ],
    [
      72,
      65,
      73,
      66,
      74,
      64,
      68,
      70,
      61,
      82,
      67,
      69,
      70,
      100,
      72,
      65
    ],
    [
      72,
      66,
      74,
      66,
      76,
      66,
      69,
      69,
      65,
      69,
      65,
      65,
      67,
      72,
      100,
      62
    ],
    [
      58,
      62,
      63,
      77,
      65,
      53,
      54,
      63,
      49,
      67,
      63,
      68,
      72,
      65,
      62,
      100
    ]
  ],
  "snippets": [
    {
      "code": "#include<iostream>\r\nusing namespace std;\r\n\r\nint main(){\r\n    string str;\r\n    getline(cin,str);\r\n    string reverse = \"\";\r\n    \r\n    for(int i=str.length()-1; i >=0; --i){\r\n        reverse +=str[i];\r\n    }\r\n    if(str == reverse){\r\n        cout << \"Palindrome\" << endl;\r\n    }\r\n    else{\r\n        cout << \"Not a palindrome\" << endl;\r\n    }\r\n    return 0;\r\n}",
      "fileName": "Brndttbnvnd_palindrome-check-6834925212.js",
      "learner": "Brndttbnvnd",
      "learner_id": "68142d744fe23df7bbc8fdd2",
      "timestamp": "2025-05-02 02:55:08.969000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    getline (cin, s);\r\n\r\n/* \r\n1. read the string\r\n2. get first letter and last letter and compare\r\n3. advance to the next letters and compare\r\n4. once in the middle, stop.\r\n*/\r\n\r\n    for (int i=0; i<=(s.length()/2)-1; i++) {\r\n        if (s[i] != s[s.length()-1]) {\r\n            cout << \"Not a palindrome\";\r\n            return 0;\r\n        }\r\n\r\n        else {\r\n            cout << \"Palindrome\";\r\n            return 0;\r\n        }\r\n\r\n    }\r\n\r\n    return 0;\r\n}",
      "fileName": "jbaladia_palindrome-check-6834925212.js",
      "learner": "jbaladia",
      "learner_id": "6811b20988362505107a60be",
      "timestamp": "2025-05-02 14:31:27.163000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n    int N = s.length();//length of s\r\n    string back = \"\"; //initialize\r\n\r\n    for (int i=s.length()-1; i>=0; i--) {//get each letter backwards\r\n    back += s[i];\r\n    }\r\n    \r\n    //to check\r\n    if (s == back) {\r\n        cout << \"Palindrome\" << endl;\r\n    } else {\r\n        cout << \"Not a palindrome\" << endl;\r\n    }\r\n\r\n    return 0;\r\n}\r\n",
      "fileName": "kquerubin_palindrome-check-6834925212.js",
      "learner": "kquerubin",
      "learner_id": "6811b22588362505107a610e",
      "timestamp": "2025-05-02 15:17:25.628000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n\r\nstring rev = string(s.rbegin(), s.rend());\r\n\r\nif (s == rev)\r\ncout << \"Palindrome\" << endl;\r\nelse\r\ncout << \"Not a palindrome\" << endl;\r\n\r\nreturn 0;\r\n}",
      "fileName": "Althea Cestina_palindrome-check-6834925212.js",
      "learner": "Althea Cestina",
      "learner_id": "6815bfa2ee03b79c65c4bab8",
      "timestamp": "2025-05-03 07:19:44.086000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string test;\r\n    cin >> test;\r\n\r\n    int len = test.length();\r\n    for (int i = 0; i < len/2; i++) {\r\n        if (test[i] != test[len - i - 1]) {\r\n            cout << \"Not a palindrome\";\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    cout << \"Palindrome\";\r\n    return 0;\r\n}",
      "fileName": "jkbraga_palindrome-check-6834925212.js",
      "learner": "jkbraga",
      "learner_id": "6811b22f88362505107a6157",
      "timestamp": "2025-05-03 10:55:35.495000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n\r\n    for (char c : s) {\r\n        if (c < 'a' || c > 'z') {\r\n            cout << \"Invalid!\" << endl;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    bool same = true;\r\n    int n = s.length();\r\n\r\n    for (int i = 0; i < n / 2; i++) {\r\n        if (s[i] != s[n - 1 - i]) {\r\n            same = false;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (same)\r\n        cout << \"Palindrome\" << endl;\r\n    else\r\n        cout << \"Not a palindrome\" << endl;\r\n\r\n    return 0;\r\n}\r\n",
      "fileName": "neil.gojit_palindrome-check-6834925212.js",
      "learner": "neil.gojit",
      "learner_id": "6811b24388362505107a61de",
      "timestamp": "2025-05-04 13:20:25.867000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    getline(cin, s); \r\n\r\n    string reversed = \"\";\r\n\r\n    for (int i = s.length() - 1; i >= 0; i--) {\r\n        reversed += s[i];\r\n    }\r\n\r\n    if (s == reversed) {\r\n        cout << \"Palindrome\" << endl;\r\n    } else {\r\n        cout << \"Not a palindrome\" << endl;\r\n    }\r\n\r\n    return 0;\r\n}",
      "fileName": "jpd435_palindrome-check-6834925212.js",
      "learner": "jpd435",
      "learner_id": "681768692348036a75a0e9bc",
      "timestamp": "2025-05-04 14:01:54.497000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s1,s2;\r\n    int count;\r\n    cin>>s1;\r\n    s2=s1;\r\n    for (int i=0,j=s2.size()-1;i<s1.size();i++){\r\n        if ( s1[i] != s2[j]){\r\n            cout<<\"Not a palindrome\";\r\n            return 0;\r\n        }\r\n        else {\r\n            count = 1;\r\n            break;\r\n        }\r\n    }\r\n    if (count==1){\r\n        cout<<\"Palindrome\";\r\n    }\r\n}",
      "fileName": "Al Francis J. Guerrero_palindrome-check-6834925212.js",
      "learner": "Al Francis J. Guerrero",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "timestamp": "2025-05-04 22:01:41.547000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin>>s;\r\n\r\n    bool isPalindrome=true;\r\n    int leng = s.length();\r\n\r\n    for (int i=0; i<leng/2; ++i){\r\n        if (s[i] !=s[leng-1-i]){\r\n            isPalindrome = false;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if(isPalindrome)\r\n        cout<<\"Palindrome\"<<endl;\r\n    else\r\n        cout<<\"Not a palindrome\"<<endl; \r\n    return 0;\r\n}",
      "fileName": "Ris_palindrome-check-6834925212.js",
      "learner": "Ris",
      "learner_id": "6811b22a88362505107a612e",
      "timestamp": "2025-05-05 01:32:02.331000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s, revs=\"\";\r\n\r\n    cin>>s;\r\n    for(int i= s.length()-1; i>=0; i--){\r\n        revs +=s[i];\r\n    }\r\n\r\n    if (s == revs){\r\n        cout<<\"Palindrome\";\r\n    } else {\r\n        cout<<\"Not a palindrome\";\r\n    }\r\n\r\n    return 0;\r\n}",
      "fileName": "franzhys_abanto_palindrome-check-6834925212.js",
      "learner": "franzhys_abanto",
      "learner_id": "68181118113359d27dc46b27",
      "timestamp": "2025-05-05 01:43:21.292000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\nint main(){\r\n    string s;\r\n    getline(cin, s);\r\n\r\n    string reversedString = s;\r\n    reverse(reversedString.begin(), reversedString.end());\r\n\r\n    if(s==reversedString){\r\n        cout << \"Palindrome\" << endl;\r\n    } else {\r\n        cout << \"Not a palindrome\" << endl;\r\n    }\r\n\r\n    return 0;\r\n}",
      "fileName": "qwertyuiop_palindrome-check-6834925212.js",
      "learner": "qwertyuiop",
      "learner_id": "681435ed8d5dd1a5048896ca",
      "timestamp": "2025-05-05 04:58:37.134000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\nint main() {\r\n    // Your code here\r\n    string word;\r\n    getline(cin, word);\r\n    \r\n    string reversed = word;\r\n    reverse(reversed.begin(), reversed.end());\r\n    \r\n    if(reversed == word){\r\n        cout << \"Palindrome\" << endl;\r\n    }\r\n    else{\r\n        cout << \"Not a palindrome\" << endl;\r\n    }\r\n    \r\n    return 0;\r\n}",
      "fileName": "andreimanrique_palindrome-check-6834925212.js",
      "learner": "andreimanrique",
      "learner_id": "6811b22088362505107a60e7",
      "timestamp": "2025-05-05 05:06:04.605000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s, s2;\r\n    cin >> s;\r\n\r\n    s2 = string(s.rbegin(), s.rend());\r\n\r\n    if (s.compare(s2) == 0){\r\n        cout << \"Palindrome\" << endl;\r\n    }\r\n    else{\r\n        cout << \"Not a palindrome\" << endl;\r\n    }\r\n\r\n    return 0;\r\n}",
      "fileName": "mr.coins_palindrome-check-6834925212.js",
      "learner": "mr.coins",
      "learner_id": "68183bc381cba98975e4e617",
      "timestamp": "2025-05-05 05:18:42.178000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin>>s;\r\n    string reverse=\"\";\r\n    for(int i=s.length()-1; i>=0; i--){\r\n        reverse+=s[i];\r\n    }\r\n    if(s==reverse){\r\n        cout<<\"Palindrome\";\r\n    } else {\r\n        cout<<\"Not a palindrome\";\r\n    }\r\n    return 0;\r\n}",
      "fileName": "Raphael Julius Q. Sibulo_palindrome-check-6834925212.js",
      "learner": "Raphael Julius Q. Sibulo",
      "learner_id": "68183a999e78853aee675c67",
      "timestamp": "2025-05-05 07:57:48.652000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n\r\n    int n = s.length();\r\n    for (int i = 0; i < n / 2; i++) {\r\n        if (s[i] != s[n - 1 - i]) {\r\n            cout << \"Not a palindrome\" << endl;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    cout << \"Palindrome\" << endl;\r\n    return 0;\r\n}\r\n\r\n",
      "fileName": "phil_palindrome-check-6834925212.js",
      "learner": "phil",
      "learner_id": "68183d828909a8f1649aad5b",
      "timestamp": "2025-05-05 12:45:00.256000"
    },
    {
      "code": "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n\r\n    if (s == string(s.rbegin(), s.rend())){\r\n        cout << \"Palindrome\" << endl;\r\n    } else {\r\n        cout << \"Not a palindrome\" << endl;\r\n    }\r\n\r\n    return 0;\r\n}",
      "fileName": "Sijey_palindrome-check-6834925212.js",
      "learner": "Sijey",
      "learner_id": "6818b0958178115311f67a47",
      "timestamp": "2025-05-05 13:05:54.556000"
    }
  ],
  "success": true
}