{
  "matrix": [
    [
      100,
      66,
      64,
      76,
      72,
      72,
      71,
      70,
      69,
      68,
      68,
      76,
      69,
      66,
      66,
      66,
      67,
      67,
      68,
      71,
      73,
      74,
      74,
      77,
      72,
      73,
      73,
      69,
      69,
      80,
      80,
      73,
      76,
      76,
      76,
      77,
      76
    ],
    [
      66,
      100,
      85,
      70,
      72,
      70,
      71,
      64,
      68,
      68,
      68,
      64,
      61,
      73,
      73,
      73,
      73,
      73,
      69,
      65,
      72,
      72,
      72,
      69,
      66,
      73,
      73,
      63,
      71,
      68,
      68,
      70,
      69,
      69,
      68,
      66,
      68
    ],
    [
      64,
      85,
      100,
      67,
      72,
      70,
      71,
      64,
      68,
      67,
      67,
      64,
      61,
      73,
      73,
      73,
      73,
      73,
      69,
      64,
      68,
      68,
      68,
      68,
      67,
      71,
      71,
      63,
      68,
      66,
      66,
      70,
      68,
      68,
      68,
      65,
      65
    ],
    [
      76,
      70,
      67,
      100,
      82,
      81,
      80,
      71,
      69,
      71,
      71,
      74,
      69,
      69,
      69,
      69,
      70,
      70,
      70,
      71,
      74,
      76,
      76,
      75,
      70,
      75,
      75,
      70,
      72,
      77,
      77,
      73,
      75,
      75,
      75,
      74,
      73
    ],
    [
      72,
      72,
      72,
      82,
      100,
      87,
      88,
      73,
      70,
      72,
      72,
      73,
      68,
      73,
      73,
      73,
      74,
      74,
      71,
      72,
      74,
      75,
      75,
      75,
      72,
      76,
      76,
      70,
      70,
      74,
      74,
      75,
      74,
      74,
      74,
      73,
      70
    ],
    [
      72,
      70,
      70,
      81,
      87,
      100,
      90,
      76,
      68,
      71,
      71,
      77,
      70,
      72,
      72,
      72,
      73,
      73,
      70,
      75,
      72,
      73,
      73,
      76,
      75,
      75,
      75,
      71,
      68,
      75,
      75,
      75,
      74,
      74,
      74,
      74,
      69
    ],
    [
      71,
      71,
      71,
      80,
      88,
      90,
      100,
      74,
      69,
      71,
      71,
      75,
      69,
      74,
      74,
      73,
      75,
      75,
      71,
      74,
      73,
      74,
      74,
      76,
      74,
      76,
      76,
      70,
      69,
      75,
      75,
      76,
      75,
      75,
      75,
      74,
      70
    ],
    [
      70,
      64,
      64,
      71,
      73,
      76,
      74,
      100,
      65,
      69,
      69,
      81,
      75,
      64,
      64,
      64,
      65,
      65,
      68,
      75,
      64,
      66,
      66,
      72,
      74,
      67,
      67,
      75,
      61,
      72,
      72,
      73,
      70,
      70,
      72,
      74,
      63
    ],
    [
      69,
      68,
      68,
      69,
      70,
      68,
      69,
      65,
      100,
      74,
      74,
      67,
      69,
      67,
      67,
      67,
      68,
      68,
      78,
      65,
      70,
      70,
      70,
      72,
      67,
      72,
      72,
      71,
      72,
      71,
      71,
      71,
      73,
      73,
      73,
      71,
      70
    ],
    [
      68,
      68,
      67,
      71,
      72,
      71,
      71,
      69,
      74,
      100,
      99,
      68,
      74,
      65,
      65,
      65,
      65,
      65,
      75,
      67,
      67,
      69,
      69,
      69,
      66,
      70,
      70,
      76,
      68,
      68,
      69,
      68,
      70,
      70,
      70,
      68,
      66
    ],
    [
      68,
      68,
      67,
      71,
      72,
      71,
      71,
      69,
      74,
      99,
      100,
      68,
      74,
      65,
      65,
      65,
      65,
      65,
      75,
      67,
      67,
      69,
      69,
      69,
      66,
      70,
      70,
      76,
      68,
      68,
      69,
      68,
      70,
      70,
      70,
      68,
      66
    ],
    [
      76,
      64,
      64,
      74,
      73,
      77,
      75,
      81,
      67,
      68,
      68,
      100,
      75,
      65,
      65,
      65,
      66,
      66,
      68,
      75,
      67,
      69,
      69,
      76,
      77,
      70,
      70,
      74,
      63,
      77,
      76,
      75,
      73,
      73,
      75,
      78,
      67
    ],
    [
      69,
      61,
      61,
      69,
      68,
      70,
      69,
      75,
      69,
      74,
      74,
      75,
      100,
      60,
      60,
      60,
      61,
      61,
      73,
      69,
      62,
      64,
      64,
      69,
      69,
      65,
      65,
      86,
      61,
      69,
      69,
      68,
      68,
      68,
      69,
      71,
      62
    ],
    [
      66,
      73,
      73,
      69,
      73,
      72,
      74,
      64,
      67,
      65,
      65,
      65,
      60,
      100,
      100,
      92,
      91,
      91,
      68,
      69,
      76,
      75,
      75,
      73,
      70,
      78,
      78,
      62,
      71,
      71,
      71,
      75,
      71,
      71,
      71,
      68,
      71
    ],
    [
      66,
      73,
      73,
      69,
      73,
      72,
      74,
      64,
      67,
      65,
      65,
      65,
      60,
      100,
      100,
      92,
      91,
      91,
      68,
      69,
      76,
      75,
      75,
      73,
      70,
      78,
      78,
      62,
      71,
      71,
      71,
      75,
      71,
      71,
      71,
      68,
      71
    ],
    [
      66,
      73,
      73,
      69,
      73,
      72,
      73,
      64,
      67,
      65,
      65,
      65,
      60,
      92,
      92,
      100,
      92,
      92,
      68,
      68,
      75,
      74,
      74,
      72,
      69,
      77,
      77,
      61,
      70,
      70,
      71,
      74,
      71,
      71,
      70,
      68,
      70
    ],
    [
      67,
      73,
      73,
      70,
      74,
      73,
      75,
      65,
      68,
      65,
      65,
      66,
      61,
      91,
      91,
      92,
      100,
      99,
      69,
      69,
      76,
      75,
      75,
      74,
      70,
      79,
      79,
      62,
      71,
      72,
      72,
      75,
      72,
      72,
      71,
      69,
      71
    ],
    [
      67,
      73,
      73,
      70,
      74,
      73,
      75,
      65,
      68,
      65,
      65,
      66,
      61,
      91,
      91,
      92,
      99,
      100,
      69,
      69,
      76,
      75,
      75,
      74,
      70,
      79,
      79,
      62,
      71,
      72,
      72,
      75,
      72,
      72,
      71,
      69,
      71
    ],
    [
      68,
      69,
      69,
      70,
      71,
      70,
      71,
      68,
      78,
      75,
      75,
      68,
      73,
      68,
      68,
      68,
      69,
      69,
      100,
      69,
      69,
      70,
      70,
      73,
      69,
      72,
      72,
      74,
      70,
      71,
      71,
      72,
      73,
      73,
      73,
      72,
      67
    ],
    [
      71,
      65,
      64,
      71,
      72,
      75,
      74,
      75,
      65,
      67,
      67,
      75,
      69,
      69,
      69,
      68,
      69,
      69,
      69,
      100,
      70,
      72,
      72,
      77,
      75,
      72,
      72,
      68,
      65,
      77,
      76,
      76,
      73,
      73,
      73,
      75,
      69
    ],
    [
      73,
      72,
      68,
      74,
      74,
      72,
      73,
      64,
      70,
      67,
      67,
      67,
      62,
      76,
      76,
      75,
      76,
      76,
      69,
      70,
      100,
      90,
      90,
      77,
      69,
      83,
      83,
      63,
      77,
      76,
      77,
      73,
      75,
      75,
      74,
      71,
      80
    ],
    [
      74,
      72,
      68,
      76,
      75,
      73,
      74,
      66,
      70,
      69,
      69,
      69,
      64,
      75,
      75,
      74,
      75,
      75,
      70,
      72,
      90,
      100,
      100,
      78,
      70,
      84,
      84,
      65,
      77,
      78,
      79,
      74,
      76,
      76,
      75,
      73,
      80
    ],
    [
      74,
      72,
      68,
      76,
      75,
      73,
      74,
      66,
      70,
      69,
      69,
      69,
      64,
      75,
      75,
      74,
      75,
      75,
      70,
      72,
      90,
      100,
      100,
      78,
      70,
      84,
      84,
      65,
      77,
      78,
      79,
      74,
      76,
      76,
      75,
      73,
      80
    ],
    [
      77,
      69,
      68,
      75,
      75,
      76,
      76,
      72,
      72,
      69,
      69,
      76,
      69,
      73,
      73,
      72,
      74,
      74,
      73,
      77,
      77,
      78,
      78,
      100,
      77,
      80,
      80,
      69,
      71,
      83,
      84,
      81,
      83,
      83,
      83,
      82,
      75
    ],
    [
      72,
      66,
      67,
      70,
      72,
      75,
      74,
      74,
      67,
      66,
      66,
      77,
      69,
      70,
      70,
      69,
      70,
      70,
      69,
      75,
      69,
      70,
      70,
      77,
      100,
      73,
      73,
      69,
      64,
      76,
      75,
      78,
      74,
      74,
      75,
      77,
      68
    ],
    [
      73,
      73,
      71,
      75,
      76,
      75,
      76,
      67,
      72,
      70,
      70,
      70,
      65,
      78,
      78,
      77,
      79,
      79,
      72,
      72,
      83,
      84,
      84,
      80,
      73,
      100,
      100,
      66,
      75,
      78,
      78,
      76,
      77,
      77,
      77,
      74,
      78
    ],
    [
      73,
      73,
      71,
      75,
      76,
      75,
      76,
      67,
      72,
      70,
      70,
      70,
      65,
      78,
      78,
      77,
      79,
      79,
      72,
      72,
      83,
      84,
      84,
      80,
      73,
      100,
      100,
      66,
      75,
      78,
      78,
      76,
      77,
      77,
      77,
      74,
      78
    ],
    [
      69,
      63,
      63,
      70,
      70,
      71,
      70,
      75,
      71,
      76,
      76,
      74,
      86,
      62,
      62,
      61,
      62,
      62,
      74,
      68,
      63,
      65,
      65,
      69,
      69,
      66,
      66,
      100,
      63,
      70,
      69,
      69,
      69,
      69,
      70,
      71,
      62
    ],
    [
      69,
      71,
      68,
      72,
      70,
      68,
      69,
      61,
      72,
      68,
      68,
      63,
      61,
      71,
      71,
      70,
      71,
      71,
      70,
      65,
      77,
      77,
      77,
      71,
      64,
      75,
      75,
      63,
      100,
      71,
      72,
      69,
      72,
      72,
      71,
      68,
      75
    ],
    [
      80,
      68,
      66,
      77,
      74,
      75,
      75,
      72,
      71,
      68,
      68,
      77,
      69,
      71,
      71,
      70,
      72,
      72,
      71,
      77,
      76,
      78,
      78,
      83,
      76,
      78,
      78,
      70,
      71,
      100,
      94,
      81,
      80,
      80,
      81,
      81,
      76
    ],
    [
      80,
      68,
      66,
      77,
      74,
      75,
      75,
      72,
      71,
      69,
      69,
      76,
      69,
      71,
      71,
      71,
      72,
      72,
      71,
      76,
      77,
      79,
      79,
      84,
      75,
      78,
      78,
      69,
      72,
      94,
      100,
      81,
      81,
      81,
      81,
      81,
      77
    ],
    [
      73,
      70,
      70,
      73,
      75,
      75,
      76,
      73,
      71,
      68,
      68,
      75,
      68,
      75,
      75,
      74,
      75,
      75,
      72,
      76,
      73,
      74,
      74,
      81,
      78,
      76,
      76,
      69,
      69,
      81,
      81,
      100,
      79,
      79,
      79,
      79,
      71
    ],
    [
      76,
      69,
      68,
      75,
      74,
      74,
      75,
      70,
      73,
      70,
      70,
      73,
      68,
      71,
      71,
      71,
      72,
      72,
      73,
      73,
      75,
      76,
      76,
      83,
      74,
      77,
      77,
      69,
      72,
      80,
      81,
      79,
      100,
      100,
      91,
      84,
      74
    ],
    [
      76,
      69,
      68,
      75,
      74,
      74,
      75,
      70,
      73,
      70,
      70,
      73,
      68,
      71,
      71,
      71,
      72,
      72,
      73,
      73,
      75,
      76,
      76,
      83,
      74,
      77,
      77,
      69,
      72,
      80,
      81,
      79,
      100,
      100,
      91,
      84,
      74
    ],
    [
      76,
      68,
      68,
      75,
      74,
      74,
      75,
      72,
      73,
      70,
      70,
      75,
      69,
      71,
      71,
      70,
      71,
      71,
      73,
      73,
      74,
      75,
      75,
      83,
      75,
      77,
      77,
      70,
      71,
      81,
      81,
      79,
      91,
      91,
      100,
      87,
      73
    ],
    [
      77,
      66,
      65,
      74,
      73,
      74,
      74,
      74,
      71,
      68,
      68,
      78,
      71,
      68,
      68,
      68,
      69,
      69,
      72,
      75,
      71,
      73,
      73,
      82,
      77,
      74,
      74,
      71,
      68,
      81,
      81,
      79,
      84,
      84,
      87,
      100,
      71
    ],
    [
      76,
      68,
      65,
      73,
      70,
      69,
      70,
      63,
      70,
      66,
      66,
      67,
      62,
      71,
      71,
      70,
      71,
      71,
      67,
      69,
      80,
      80,
      80,
      75,
      68,
      78,
      78,
      62,
      75,
      76,
      77,
      71,
      74,
      74,
      73,
      71,
      100
    ]
  ],
  "snippets": [
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;  \r\n    \r\n    int arr[n];\r\n    for (int i = 0; i < n; ++i){ \r\n    cin >> arr[i];  \r\n    }\r\n\r\n    \r\n    for (int i = 0; i < n; ++i)\r\n        if (arr[i] % 2 != 0) {\r\n            cout << arr[i] << endl;\r\n            return 0;\r\n        }\r\n\r\n    cout << \"No odd number found\" << endl;  \r\n    return 0;\r\n}\r\n\r\n",
      "fileName": "Brndttbnvnd_linear-search-for-odd-numbers-4386603267.js",
      "learner": "Brndttbnvnd",
      "learner_id": "68142d744fe23df7bbc8fdd2",
      "timestamp": "2025-05-02 03:09:50.750000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    int A[n];\r\n\r\n    if (n!=0){ //if not empty array\r\n    for (int i=0; i<n; i++) {//iterate\r\n     cin >> A[i];\r\n    } //cin 1st value\r\n    \r\n    for (int i=0; i<n; i++) {//iterate\r\n        if (A[i] % 2 != 0) { //if odd\r\n        cout << A[i]; //cout\r\n        }\r\n    }\r\n    \r\n    } else {//if n=0\r\n    cout << \"No odd number found\" << endl;\r\n    }\r\nreturn 0;\r\n}",
      "fileName": "kquerubin_linear-search-for-odd-numbers-4386603267.js",
      "learner": "kquerubin",
      "learner_id": "6811b22588362505107a610e",
      "timestamp": "2025-05-02 14:28:38.075000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    int A[n];\r\n\r\n    if (n!=0){ //if not empty array\r\n    for (int i=0; i<n; i++) {//iterate\r\n     cin >> A[i];\r\n    } //cin 1st value\r\n    \r\n    for (int i=0; i<n; i++) {//iterate\r\n        if (A[i] % 2 != 0) { //if odd\r\n        cout << A[i]; //cout\r\n        return 0;\r\n        } \r\n    }\r\n\r\n    cout << \"No odd number found\" << endl;\r\n    \r\n    } else {//if n=0\r\n    cout << \"No odd number found\" << endl;\r\n    }\r\nreturn 0;\r\n}",
      "fileName": "kquerubin_linear-search-for-odd-numbers-4386603267.js",
      "learner": "kquerubin",
      "learner_id": "6811b22588362505107a610e",
      "timestamp": "2025-05-02 14:40:39.645000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n, N, odd = 0;\r\n    cin >> n;\r\n    int a[n];\r\n\r\n    for(int i=0; i<n; i++) {\r\n        cin >> N;\r\n        a[i] = N;\r\n    }\r\n\r\n    for(int i=0; i<n; i++) {\r\n        if (a[i]%2==1) {\r\n            cout << a[i] << \" \";\r\n            odd++;\r\n        }\r\n    }\r\n\r\n    if (odd==0) {\r\n        cout << \"No odd number found\";\r\n    }\r\n\r\n    return 0;\r\n}",
      "fileName": "jbaladia_linear-search-for-odd-numbers-4386603267.js",
      "learner": "jbaladia",
      "learner_id": "6811b20988362505107a60be",
      "timestamp": "2025-05-02 14:42:28.615000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n, N, odd = 0;\r\n    cin >> n;\r\n    int a[n];\r\n\r\n    if (n=0) {\r\n        cout << \"No odd number found\";\r\n    }\r\n\r\n    for(int i=0; i<n; i++) {\r\n        cin >> N;\r\n        a[i] = N;\r\n    }\r\n\r\n    for(int i=0; i<n; i++) {\r\n        if (a[i]%2==1) {\r\n            cout << a[i] << \" \";\r\n            odd++;\r\n        }\r\n    }\r\n\r\n    if (odd==0) {\r\n        cout << \"No odd number found\";\r\n    }\r\n\r\n    return 0;\r\n}",
      "fileName": "jbaladia_linear-search-for-odd-numbers-4386603267.js",
      "learner": "jbaladia",
      "learner_id": "6811b20988362505107a60be",
      "timestamp": "2025-05-02 14:44:06.076000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n, N, odd = 0;\r\n    cin >> n;\r\n    int a[n];\r\n\r\n    if (n==0) {\r\n        cout << \"No odd number found\";\r\n        return 0;\r\n    }\r\n\r\n    for(int i=0; i<n; i++) {\r\n        cin >> N;\r\n        a[i] = N;\r\n    }\r\n\r\n    for(int i=0; i<n; i++) {\r\n        if (a[i]%2==1) {\r\n            cout << a[i] << \" \";\r\n            odd++;\r\n        }\r\n    }\r\n\r\n    if (odd==0) {\r\n        cout << \"No odd number found\";\r\n    }\r\n\r\n    return 0;\r\n}",
      "fileName": "jbaladia_linear-search-for-odd-numbers-4386603267.js",
      "learner": "jbaladia",
      "learner_id": "6811b20988362505107a60be",
      "timestamp": "2025-05-02 14:45:10.835000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n, N, odd = 0;\r\n    cin >> n;\r\n    int a[n];\r\n\r\n    if (n==0) {\r\n        cout << \"No odd number found\";\r\n        return 0;\r\n    }\r\n\r\n    for(int i=0; i<n; i++) {\r\n        cin >> N;\r\n        a[i] = N;\r\n    }\r\n\r\n    for(int i=0; i<n; i++) {\r\n        if (a[i]%2==1) {\r\n            cout << a[i] << \" \";\r\n            odd++;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    if (odd==0) {\r\n        cout << \"No odd number found\";\r\n    }\r\n\r\n    return 0;\r\n}",
      "fileName": "jbaladia_linear-search-for-odd-numbers-4386603267.js",
      "learner": "jbaladia",
      "learner_id": "6811b20988362505107a60be",
      "timestamp": "2025-05-02 14:47:16.714000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    // Your code here\r\n    int n;\r\n    cin >> n;\r\n\r\n    if (n == 0) {\r\n        cout << \"No odd number found\" << endl;\r\n        return 0;\r\n    }\r\n\r\n    int arr[n];\r\n    for (int i = 0; i < n; i++)\r\n        cin >> arr[i];\r\n\r\n    bool found = false;\r\n    for (int i = 0; i < n; i++) {\r\n        if (arr[i] % 2 != 0) {\r\n            cout << arr[i] << endl;\r\n            found = true;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (!found)\r\n        cout << \"No odd number found\" << endl;\r\n\r\n    return 0;\r\n}\r\n",
      "fileName": "andreimanrique_linear-search-for-odd-numbers-4386603267.js",
      "learner": "andreimanrique",
      "learner_id": "6811b22088362505107a60e7",
      "timestamp": "2025-05-03 01:03:17.467000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    if (n == 0){\r\n        cout << \"No odd number found\" << endl;\r\n        return 0;\r\n    }\r\n\r\n    int num;\r\n    for (int i = 0; i < n; i++){\r\n        cin >> num;\r\n        if (num % 2 != 0){\r\n            cout << num << endl;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    cout << \"No odd number found\" << endl;\r\n    return 0;\r\n}",
      "fileName": "Althea Cestina_linear-search-for-odd-numbers-4386603267.js",
      "learner": "Althea Cestina",
      "learner_id": "6815bfa2ee03b79c65c4bab8",
      "timestamp": "2025-05-03 07:27:25.080000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    if (!n) {\r\n        cout << \"No odd number found\";\r\n        return 0;\r\n    }\r\n    \r\n    bool found = false;\r\n    int result;\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        if (!found) {\r\n            cin >> result;\r\n            if (result % 2)\r\n                found = true;\r\n        }\r\n    }\r\n\r\n    if (found)\r\n        cout << result;\r\n    else\r\n        cout << \"No odd number found\";\r\n\r\n    return 0;\r\n}",
      "fileName": "jkbraga_linear-search-for-odd-numbers-4386603267.js",
      "learner": "jkbraga",
      "learner_id": "6811b22f88362505107a6157",
      "timestamp": "2025-05-03 10:48:16.402000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    if (!n) {\r\n        cout << \"No odd number found\";\r\n        return 0;\r\n    }\r\n    \r\n    bool found = false;\r\n    int result;\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        if (!found) {\r\n            cin >> result;\r\n            if (result % 2)\r\n                found = true;\r\n        }\r\n    }\r\n\r\n    if (found)\r\n        cout << result;\r\n    else\r\n        cout << \"No odd number found\";\r\n\r\n    return 0;\r\n}",
      "fileName": "jkbraga_linear-search-for-odd-numbers-4386603267.js",
      "learner": "jkbraga",
      "learner_id": "6811b22f88362505107a6157",
      "timestamp": "2025-05-03 10:48:44.524000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    if (n == 0) {\r\n        cout << \"No odd number found\" << endl;\r\n        return 0;\r\n    }\r\n\r\n    int arr[n];\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> arr[i];\r\n    }\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        if (arr[i] % 2 != 0) {\r\n            cout << arr[i] << endl;\r\n            return 0; \r\n        }\r\n    }\r\n    cout << \"No odd number found\" << endl;\r\n\r\n    return 0;\r\n}",
      "fileName": "neil.gojit_linear-search-for-odd-numbers-4386603267.js",
      "learner": "neil.gojit",
      "learner_id": "6811b24388362505107a61de",
      "timestamp": "2025-05-04 13:27:34.355000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    if (n == 0) {\r\n        cout << \"No odd number found\" << endl;\r\n        return 0;\r\n    }\r\n\r\n    int num;\r\n    bool found = false;\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> num;\r\n        if (num % 2 != 0) {\r\n            cout << num << endl;\r\n            found = true;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (!found) {\r\n        cout << \"No odd number found\" << endl;\r\n    }\r\n\r\n    return 0;\r\n}",
      "fileName": "jpd435_linear-search-for-odd-numbers-4386603267.js",
      "learner": "jpd435",
      "learner_id": "681768692348036a75a0e9bc",
      "timestamp": "2025-05-04 13:50:29.743000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int size;\r\n    cin>>size;\r\n    int a[size];\r\n    if (size==0){\r\n        cout<<\"No odd number found\";\r\n        return 0;\r\n    }\r\n    for (int i=0;i<size;i++){\r\n        cin>>a[i];\r\n\r\n    }\r\n     for (int i=0;i<size;i++){\r\n       if (a[i]%2!=0){\r\n            cout<<a[i];\r\n       }\r\n        else if (i==size-1 and a[i]%2!=0){\r\n            cout<<\"No odd number found\";\r\n            return 0;\r\n        }\r\n    }\r\n}",
      "fileName": "Al Francis J. Guerrero_linear-search-for-odd-numbers-4386603267.js",
      "learner": "Al Francis J. Guerrero",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "timestamp": "2025-05-04 22:08:12.852000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int size;\r\n    cin>>size;\r\n    int a[size];\r\n    if (size==0){\r\n        cout<<\"No odd number found\";\r\n        return 0;\r\n    }\r\n    for (int i=0;i<size;i++){\r\n        cin>>a[i];\r\n\r\n    }\r\n     for (int i=0;i<size;i++){\r\n       if (a[i]%2!=0){\r\n            cout<<a[i];\r\n       }\r\n        else if (i==size-1 and a[i]%2!=0){\r\n            cout<<\"No odd number found\";\r\n            return 0;\r\n        }\r\n    }\r\n}",
      "fileName": "Al Francis J. Guerrero_linear-search-for-odd-numbers-4386603267.js",
      "learner": "Al Francis J. Guerrero",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "timestamp": "2025-05-04 22:08:29.802000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int size;\r\n    cin>>size;\r\n    int a[size];\r\n    if (size==0){\r\n        cout<<\"No odd number found\";\r\n        return 0;\r\n    }\r\n    for (int i=0;i<size;i++){\r\n        cin>>a[i];\r\n\r\n    }\r\n     for (int i=0;i<size;i++){\r\n       if (a[i]%2!=0){\r\n            cout<<a[i];\r\n            return 0;\r\n       }\r\n        else if (i==size-1 and a[i]%2!=0){\r\n            cout<<\"No odd number found\";\r\n            return 0;\r\n        }\r\n    }\r\n}",
      "fileName": "Al Francis J. Guerrero_linear-search-for-odd-numbers-4386603267.js",
      "learner": "Al Francis J. Guerrero",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "timestamp": "2025-05-04 22:10:09.978000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int size;\r\n    cin>>size;\r\n    int a[size];\r\n    if (size==0){\r\n        cout<<\"No odd number found\";\r\n        return 0;\r\n    }\r\n    for (int i=0;i<size;i++){\r\n        cin>>a[i];\r\n\r\n    }\r\n     for (int i=0;i<size;i++){\r\n       if (a[i]%2!=0){\r\n            cout<<a[i];\r\n            return 0;\r\n       }\r\n        else if (i==size-1 and a[i]%2==0){\r\n            cout<<\"No odd number found\";\r\n            return 0;\r\n        }\r\n    }\r\n}",
      "fileName": "Al Francis J. Guerrero_linear-search-for-odd-numbers-4386603267.js",
      "learner": "Al Francis J. Guerrero",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "timestamp": "2025-05-04 22:11:20.447000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int size;\r\n    cin>>size;\r\n    int a[size];\r\n    if (size==0){\r\n        cout<<\"No odd number found\";\r\n        return 0;\r\n    }\r\n    for (int i=0;i<size;i++){\r\n        cin>>a[i];\r\n\r\n    }\r\n     for (int i=0;i<size;i++){\r\n       if (a[i]%2!=0){\r\n            cout<<a[i];\r\n            return 0;\r\n       }\r\n        else if (i==size-1 and a[i]%2==0){\r\n            cout<<\"No odd number found\";\r\n            return 0;\r\n        }\r\n    }\r\n}",
      "fileName": "Al Francis J. Guerrero_linear-search-for-odd-numbers-4386603267.js",
      "learner": "Al Francis J. Guerrero",
      "learner_id": "68174a51fda1e1a9e9ece3cf",
      "timestamp": "2025-05-04 22:11:37.119000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin>>n;\r\n\r\n    if (n==0){\r\n        cout<<\"No odd number found\"<<endl;\r\n        return 0;\r\n    }\r\n\r\n    int num;\r\n    bool foundIt = false;\r\n\r\n    for (int i=0;i<n;++i){\r\n        cin>>num;\r\n        if (!foundIt && num%2!=0){\r\n            cout<<num<<endl;\r\n            foundIt = true;\r\n        }\r\n    }\r\n\r\n    if (!foundIt){\r\n        cout<<\"No odd number found\"<<endl;\r\n    }\r\n\r\n\r\n    return 0;\r\n}",
      "fileName": "Ris_linear-search-for-odd-numbers-4386603267.js",
      "learner": "Ris",
      "learner_id": "6811b22a88362505107a612e",
      "timestamp": "2025-05-05 01:42:34.610000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin>>n;\r\n\r\n    if (n==0){\r\n        cout<<\"No odd number found\";\r\n    } else {\r\n    int arr[n];\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> arr[i];\r\n    }\r\n        bool flagOdd = false;\r\n        for (int i = 0; i < n; i++){\r\n            if (arr[i] % 2 != 0){\r\n                cout <<arr[i];\r\n                flagOdd = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!flagOdd){\r\n            cout<<\"No odd number found\";\r\n        }\r\n\r\n    }\r\n    return 0;\r\n}",
      "fileName": "franzhys_abanto_linear-search-for-odd-numbers-4386603267.js",
      "learner": "franzhys_abanto",
      "learner_id": "68181118113359d27dc46b27",
      "timestamp": "2025-05-05 02:17:47.718000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin>>n;\r\n    int arr[n];\r\n    if(n==0){\r\n        cout<<\"No odd number found\";\r\n    } else {\r\n    for(int i=0; i<n; i++){\r\n        cin>>arr[i];\r\n    }\r\n    for(int i=0; i<n; i++){\r\n    if(arr[i]%2==1){\r\n        cout<<arr[i];\r\n    }\r\n     }\r\n    return 0;\r\n    }\r\n\r\n}",
      "fileName": "Raphael Julius Q. Sibulo_linear-search-for-odd-numbers-4386603267.js",
      "learner": "Raphael Julius Q. Sibulo",
      "learner_id": "68183a999e78853aee675c67",
      "timestamp": "2025-05-05 04:57:21.127000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin>>n;\r\n    int arr[n];\r\n    if(n==0){\r\n        cout<<\"No odd number found\";\r\n    } else {\r\n    for(int i=0; i<n; i++){\r\n        cin>>arr[i];\r\n    }\r\n    for(int i=0; i<n; i++){\r\n    if(arr[i]%2==1){\r\n        cout<<arr[i];\r\n        break;\r\n    }\r\n     }\r\n    return 0;\r\n    }\r\n\r\n}",
      "fileName": "Raphael Julius Q. Sibulo_linear-search-for-odd-numbers-4386603267.js",
      "learner": "Raphael Julius Q. Sibulo",
      "learner_id": "68183a999e78853aee675c67",
      "timestamp": "2025-05-05 04:57:41.484000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin>>n;\r\n    int arr[n];\r\n    if(n==0){\r\n        cout<<\"No odd number found\";\r\n    } else {\r\n    for(int i=0; i<n; i++){\r\n        cin>>arr[i];\r\n    }\r\n    for(int i=0; i<n; i++){\r\n    if(arr[i]%2==1){\r\n        cout<<arr[i];\r\n        break;\r\n    }\r\n     }\r\n    return 0;\r\n    }\r\n\r\n}",
      "fileName": "Raphael Julius Q. Sibulo_linear-search-for-odd-numbers-4386603267.js",
      "learner": "Raphael Julius Q. Sibulo",
      "learner_id": "68183a999e78853aee675c67",
      "timestamp": "2025-05-05 05:00:43.524000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main(){\r\n    int n;\r\n    cin>>n;\r\n    \r\n    if (n == 0){\r\n        cout<<\"No odd number found\"<<endl;\r\n        return 0;\r\n    }\r\n    int arr[n];\r\n    for(int i = 0; i < n; i++){\r\n      cin>>arr[i];\r\n    }\r\n    for(int i = 0; i < n; i++){\r\n      if(arr[i] % 2 != 0){\r\n         cout<<arr[i]<<endl;\r\n         return 0;\r\n      }\r\n    }\r\n    cout<<\"No odd number found\";\r\n    \r\n    return 0;\r\n}",
      "fileName": "ngojit_linear-search-for-odd-numbers-4386603267.js",
      "learner": "ngojit",
      "learner_id": "6816d1f8a33c622f5b2016df",
      "timestamp": "2025-05-05 05:03:06.531000"
    },
    {
      "code": "#include <iostream>\r\n#include <vector>\r\n#include <string>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    vector<int> arr(n);\r\n    for (int i=0; i<n; ++i){\r\n        cin >> arr[i];\r\n    }\r\n\r\n    if(n==0){\r\n        cout << \"No odd number found\" << endl;\r\n        return 0;\r\n    }\r\n\r\n    for (int i=0; i<n; ++i){\r\n        if(arr[i] % 2 !=0){\r\n            cout << arr[i] << endl;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    cout << \"No odd number found\" << endl;\r\n    return 0;\r\n}",
      "fileName": "qwertyuiop_linear-search-for-odd-numbers-4386603267.js",
      "learner": "qwertyuiop",
      "learner_id": "681435ed8d5dd1a5048896ca",
      "timestamp": "2025-05-05 05:04:54.213000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin>>n;\r\n    int arr[n];\r\n    if(n==0){\r\n        cout<<\"No odd number found\";\r\n        return 0;\r\n    } \r\n    for(int i=0; i<n; i++){\r\n        cin>>arr[i];\r\n    }\r\n    for(int i=0; i<n; i++){\r\n    if(arr[i]%2==1){\r\n        cout<<arr[i];\r\n        return 0;\r\n    }\r\n     }\r\n      cout<<\"No odd number found\";\r\n    return 0;\r\n}",
      "fileName": "Raphael Julius Q. Sibulo_linear-search-for-odd-numbers-4386603267.js",
      "learner": "Raphael Julius Q. Sibulo",
      "learner_id": "68183a999e78853aee675c67",
      "timestamp": "2025-05-05 05:04:57.815000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin>>n;\r\n    int arr[n];\r\n    if(n==0){\r\n        cout<<\"No odd number found\";\r\n        return 0;\r\n    } \r\n    for(int i=0; i<n; i++){\r\n        cin>>arr[i];\r\n    }\r\n    for(int i=0; i<n; i++){\r\n    if(arr[i]%2==1){\r\n        cout<<arr[i];\r\n        return 0;\r\n    }\r\n     }\r\n      cout<<\"No odd number found\";\r\n    return 0;\r\n}",
      "fileName": "Raphael Julius Q. Sibulo_linear-search-for-odd-numbers-4386603267.js",
      "learner": "Raphael Julius Q. Sibulo",
      "learner_id": "68183a999e78853aee675c67",
      "timestamp": "2025-05-05 05:05:42.870000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    if (n == 0) {\r\n        cout << \"No odd number found\" << endl;\r\n        return 0;\r\n    }\r\n\r\n    int x;\r\n    bool found = false;\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> x;\r\n        if (!found && x % 2 != 0) {\r\n            cout << x << endl;\r\n            found = true;\r\n        }\r\n    }\r\n\r\n    if (!found) {\r\n        cout << \"No odd number found\" << endl;\r\n    }\r\n\r\n    return 0;\r\n}\r\n",
      "fileName": "phil_linear-search-for-odd-numbers-4386603267.js",
      "learner": "phil",
      "learner_id": "68183d828909a8f1649aad5b",
      "timestamp": "2025-05-05 12:46:16.732000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n = 0;\r\n    int counter = 0;\r\n    cin >> n;\r\n\r\n    int arr[n];\r\n\r\n\r\n    for (int i = 0; i < n; i++){\r\n        cin >> arr[i];\r\n        \r\n        if (arr[i] % 2 == 1){\r\n            counter++;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    if(counter == 0){\r\n        cout << \"No odd number found\";\r\n    } else {\r\n        cout << counter;\r\n    }\r\n\r\n\r\n    return 0;\r\n}",
      "fileName": "Sijey_linear-search-for-odd-numbers-4386603267.js",
      "learner": "Sijey",
      "learner_id": "6818b0958178115311f67a47",
      "timestamp": "2025-05-05 13:24:00.514000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    if (n == 0){\r\n        cout << \"No odd number found\" << endl;\r\n        return 0;\r\n    }\r\n\r\n    int arr[n];\r\n\r\n    for (int i = 0; i < n; i++){\r\n        cin >> arr[i];\r\n    }\r\n\r\n    for (int i = 0; i < n; i++){\r\n        if (arr[i] % 2 == !0){\r\n            cout << arr[i] << endl;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}",
      "fileName": "mr.coins_linear-search-for-odd-numbers-4386603267.js",
      "learner": "mr.coins",
      "learner_id": "68183bc381cba98975e4e617",
      "timestamp": "2025-05-05 13:36:31.783000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    if (n == 0){\r\n        cout << \"No odd number found\" << endl;\r\n        return 0;\r\n    }\r\n\r\n    int arr[n];\r\n\r\n    for (int i = 0; i < n; i++){\r\n        cin >> arr[i];\r\n    }\r\n\r\n    for (int i = 0; i < n; i++){\r\n        if (arr[i] % 2 != 0){\r\n            cout << arr[i] << endl;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}",
      "fileName": "mr.coins_linear-search-for-odd-numbers-4386603267.js",
      "learner": "mr.coins",
      "learner_id": "68183bc381cba98975e4e617",
      "timestamp": "2025-05-05 13:44:14.140000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    if (n == 0){\r\n        cout << \"No odd number found\" << endl;\r\n        return 0;\r\n    }\r\n\r\n    int arr[n];\r\n\r\n    for (int i = 0; i < n; i++){\r\n        cin >> arr[i];\r\n    }\r\n\r\n    for (int i = 0; i < n; i++){\r\n        if (arr[i] % 2 != 0){\r\n            cout << arr[i] << endl;\r\n            return 0;\r\n        }\r\n        else if (i == n-1){\r\n            cout << \"No odd number found\" << endl;\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}",
      "fileName": "mr.coins_linear-search-for-odd-numbers-4386603267.js",
      "learner": "mr.coins",
      "learner_id": "68183bc381cba98975e4e617",
      "timestamp": "2025-05-05 13:46:09.135000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main(){\r\n    int n; \r\n    int counter;\r\n    cin >> n;\r\n\r\n    int arr[n];\r\n\r\n    if (n == 0){\r\n        cout << \"No odd numbe found\" << endl;\r\n    }\r\n\r\n    for(int i = 0; i < n; i++){\r\n        cin >> arr[i];\r\n    }\r\n\r\n    for(int i = 0; i < n; i++){\r\n        if (arr[i] % 2 == 1){\r\n            cout << arr[i] << endl;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    cout << \"No odd number found\" << endl;\r\n\r\n    return 0;\r\n}",
      "fileName": "Sijey_linear-search-for-odd-numbers-4386603267.js",
      "learner": "Sijey",
      "learner_id": "6818b0958178115311f67a47",
      "timestamp": "2025-05-05 13:46:26.489000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main(){\r\n    int n; \r\n    int counter;\r\n    cin >> n;\r\n\r\n    int arr[n];\r\n\r\n    if (n == 0){\r\n        cout << \"No odd numbe found\" << endl;\r\n    }\r\n\r\n    for(int i = 0; i < n; i++){\r\n        cin >> arr[i];\r\n    }\r\n\r\n    for(int i = 0; i < n; i++){\r\n        if (arr[i] % 2 == 1){\r\n            cout << arr[i] << endl;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    cout << \"No odd number found\" << endl;\r\n\r\n    return 0;\r\n}",
      "fileName": "Sijey_linear-search-for-odd-numbers-4386603267.js",
      "learner": "Sijey",
      "learner_id": "6818b0958178115311f67a47",
      "timestamp": "2025-05-05 13:46:58.030000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main(){\r\n    int n; \r\n    int counter;\r\n    cin >> n;\r\n\r\n    int arr[n];\r\n\r\n    if (n == 0){\r\n        cout << \"No odd number found\" << endl;\r\n    }\r\n\r\n    for(int i = 0; i < n; i++){\r\n        cin >> arr[i];\r\n    }\r\n\r\n    for(int i = 0; i < n; i++){\r\n        if (arr[i] % 2 == 1){\r\n            cout << arr[i] << endl;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    cout << \"No odd number found\" << endl;\r\n\r\n    return 0;\r\n}",
      "fileName": "Sijey_linear-search-for-odd-numbers-4386603267.js",
      "learner": "Sijey",
      "learner_id": "6818b0958178115311f67a47",
      "timestamp": "2025-05-05 13:47:48.943000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main(){\r\n    int n; \r\n    int counter;\r\n    cin >> n;\r\n\r\n    int arr[n];\r\n\r\n    if (n == 0){\r\n        cout << \"No odd number found\" << endl;\r\n        return 0;\r\n    }\r\n\r\n    for(int i = 0; i < n; i++){\r\n        cin >> arr[i];\r\n    }\r\n\r\n    for(int i = 0; i < n; i++){\r\n        if (arr[i] % 2 == 1){\r\n            cout << arr[i] << endl;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    cout << \"No odd number found\" << endl;\r\n\r\n    return 0;\r\n}",
      "fileName": "Sijey_linear-search-for-odd-numbers-4386603267.js",
      "learner": "Sijey",
      "learner_id": "6818b0958178115311f67a47",
      "timestamp": "2025-05-05 13:48:17.224000"
    },
    {
      "code": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n\r\n    cin >> n;\r\n    \r\n    int num[n];\r\n\r\n    for (int i = 0; i < n; i++){\r\n        cin >> num[i];\r\n    }\r\n\r\n    for (int i = 0; i < n; i++){\r\n        if (num[i] % 2 != 0){\r\n            cout << num[i];\r\n            return 0;\r\n        }\r\n    }\r\n    \r\n    cout << \"No odd number found\";\r\n    return 0;\r\n}",
      "fileName": "Fiona_linear-search-for-odd-numbers-4386603267.js",
      "learner": "Fiona",
      "learner_id": "6811b1ff88362505107a60b1",
      "timestamp": "2025-05-05 16:30:19.127000"
    }
  ],
  "success": true
}